<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>COMP3009 - 1.Introduction</title>
    <url>/2020/10/11/COMP3009-1-Introduction/</url>
    <content><![CDATA[<h1 id="1-What-is-Machine-Learning"><a href="#1-What-is-Machine-Learning" class="headerlink" title="1. What is Machine Learning?"></a>1. What is Machine Learning?</h1><h2 id="1-1-Definition"><a href="#1-1-Definition" class="headerlink" title="1.1. Definition"></a>1.1. Definition</h2><ul>
<li>Arthur Samuel (1959): Field of study that gives computers the ability to learn without being explicitly programmed. <strong>&lt;&lt;一个较为宏观的定义&gt;&gt;</strong></li>
<li>Tom Mitchell (1998).Well-posed Learning Problem:A computer program is said to learn from <strong>experience E</strong> with respect to some <strong>task T</strong> and some <strong>performance measure P</strong>, if its performance on T, as measured by P, improves with experience E. <strong>&lt;&lt;一个较为practical的定义, 难点在于如何辨别一个problem中的T/P/E&gt;&gt;</strong></li>
</ul>
<a id="more"></a>

<h2 id="1-2-Main-goal-Aim"><a href="#1-2-Main-goal-Aim" class="headerlink" title="1.2. Main goal(Aim)"></a>1.2. Main goal(Aim)</h2><ul>
<li>Learning functions:<div class="wiz-table-container" style="position: relative; padding: 0px;"><div class="wiz-table-body" contenteditable="false"><table style="width: 683px;"><tbody><tr><td align="left" valign="middle" style="width: 81px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div>Features </div></td><td align="left" valign="middle" style="width: 76px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div>Labels</div></td><td align="left" valign="middle" style="width: 147px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div><span style="">Learning functions</span></div></td><td align="left" valign="middle" style="width: 378px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div><span style="">Machine learning<span> </span></span></div></td></tr><tr><td align="left" valign="middle" style="width: 81px;"><div>x</div></td><td align="left" valign="middle" style="width: 76px;"><div>f(x) = y</div></td><td align="left" valign="middle" style="width: 147px;"><div>The relationship between x and y.</div></td><td align="left" valign="middle" style="width: 378px;"><div>ML is the process of learning a function or hypothesis h(x), let the h(x) --&gt; y,best approximates.</div></td></tr></tbody></table></div></div></li>
<li>Generalisation(泛化): This hypothesis can then make predictions <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex" xmlns="http://www.w3.org/2000/svg" width="1.257ex" height="2.195ex" role="img" focusable="false" viewBox="0 -765 555.6 970"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi" transform="translate(5, 0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(55.6, -29)"><path data-c="2C6" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g></g></g></svg></mjx-container> on new data points <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.294ex" height="1.756ex" role="img" focusable="false" viewBox="0 -765 572 776"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(63.8, -29)"><path data-c="2C6" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g></g></g></svg></mjx-container>, such that <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex" xmlns="http://www.w3.org/2000/svg" width="1.257ex" height="2.195ex" role="img" focusable="false" viewBox="0 -765 555.6 970"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi" transform="translate(5, 0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(55.6, -29)"><path data-c="2C6" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g></g></g></svg></mjx-container> is <strong>as close as possible</strong> to its real label y .</li>
<li>就人类而言，正是因为泛化能力，才让我们有可能<strong>用已知来对抗未知，以有限对抗无限</strong>.</li>
</ul>
<h2 id="1-3-Learning-functions"><a href="#1-3-Learning-functions" class="headerlink" title="1.3. Learning functions"></a>1.3. Learning functions</h2><p><img src="LearningFunctionsEg.png" alt="LearningFunctionsEg.png"></p>
<ol>
<li>(a): Original data points;</li>
<li>(b): Fit by three piecewise-linear segments (perfect fit);<ul>
<li>三个线性分段函数；</li>
<li>parameter: 3 x 2 = 6 variables;</li>
</ul>
</li>
<li>(c): Fit by third-order polynomial (perfect fit);<ul>
<li>三阶多项式；</li>
<li>parameter: 3(polynomial) + 1(bias) = 4 variables;</li>
</ul>
</li>
<li>(d): Fit by first-order polynomial (straight line - not perfect);<ul>
<li>一阶多项式；</li>
<li>parameter: 2 variables;</li>
</ul>
</li>
</ol>
<ul>
<li><strong>Rule of thumb</strong>: Data points ~= 10 x variables num</li>
<li>Tips:<ol>
<li>避免过拟合</li>
<li>控制参数个数</li>
</ol>
</li>
</ul>
<h1 id="2-Representation"><a href="#2-Representation" class="headerlink" title="2. Representation"></a>2. Representation</h1><h2 id="2-1-Supervised-Unsupervised-Learning"><a href="#2-1-Supervised-Unsupervised-Learning" class="headerlink" title="2.1. Supervised/Unsupervised Learning"></a>2.1. Supervised/Unsupervised Learning</h2><ul>
<li>Machine Learning: is learning from experience. It’s also called <strong>supervised learning</strong>. E consists of features and labels, and P and T are well-defined.</li>
<li>Pattern Recognition: is finding patterns without experience. It’s also called <strong>unsupervised learning</strong>. E consists of only features, and P and T are defined in much broader terms of finding ‘interesting patterns’.</li>
</ul>
<p>监督学习(supervised learning):</p>
<ol>
<li>已知Label是什么，长什么样子，正确答案\结果是什么</li>
<li>输入输出之间存在较为明确的关系</li>
<li>比如：房屋面积和房价</li>
</ol>
<p>无监督学习(unsupervised learning)</p>
<ol>
<li>对Label的定义不是很明确，或者可以理解为很广泛</li>
<li>通过数据集中原本存在的某种关系进行归类(Clustering)</li>
<li>比如：<ul>
<li>对基因组进行归类</li>
<li>从音频中分出音乐和对话</li>
</ul>
</li>
</ol>
<h2 id="2-2-Representation-view-on-ML-Pedro-Domingos-2012"><a href="#2-2-Representation-view-on-ML-Pedro-Domingos-2012" class="headerlink" title="2.2. Representation view on ML (Pedro Domingos, 2012)"></a>2.2. Representation view on ML (Pedro Domingos, 2012)</h2><blockquote>
<p>Machine Learning = Representation + Evaluation + Optimisation</p>
</blockquote>
<ul>
<li>Representation: 表征, a way of describing the problem and data</li>
<li>Evaluation: 评估，类似于Tom Mitchell提出的measure P</li>
<li>Optimisation：优化，使预测值接近真实值的算法</li>
</ul>
<h2 id="2-3-Classification"><a href="#2-3-Classification" class="headerlink" title="2.3. Classification"></a>2.3. Classification</h2><blockquote>
<p>Classification is a ML task where T has a discrete set of outcomes.</p>
</blockquote>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="13.385ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 5916.1 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(965, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1537, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2203.8, 0)"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(3481.6, 0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(4249.3, 0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5194.1, 0)"><g data-mml-node="mi"><path data-c="2115" d="M20 664Q20 666 31 683H142Q256 683 258 681Q259 680 279 653T342 572T422 468L582 259V425Q582 451 582 490T583 541Q583 611 573 628T522 648Q500 648 493 654Q484 665 493 679L500 683H691Q702 676 702 666Q702 657 698 652Q688 648 680 648Q633 648 627 612Q624 601 624 294V-8Q616 -20 607 -20Q601 -20 596 -15Q593 -13 371 270L156 548L153 319Q153 284 153 234T152 167Q152 103 156 78T172 44T213 34Q236 34 242 28Q253 17 242 3L236 -1H36Q24 6 24 16Q24 34 56 34Q58 35 69 36T86 40T100 50T109 72Q111 83 111 345V603L96 619Q72 643 44 648Q20 648 20 664ZM413 419L240 648H120L136 628Q137 626 361 341T587 54L589 68Q589 78 589 121V192L413 419Z"></path></g></g></g></g></svg></mjx-container></p>
<ul>
<li>Often classification is binary: [0,1]</li>
<li>Examples:<ul>
<li>face detection</li>
<li>smile detection</li>
<li>spam classification</li>
<li>hot/cold </li>
</ul>
</li>
</ul>
<h2 id="2-4-Regression"><a href="#2-4-Regression" class="headerlink" title="2.4. Regression"></a>2.4. Regression</h2><blockquote>
<p>Regression is a ML task where T has a real-valued outcome on some continuous sub-space:</p>
</blockquote>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="13.385ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 5916.1 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(965, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1537, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2203.8, 0)"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(3481.6, 0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(4249.3, 0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5194.1, 0)"><g data-mml-node="mi"><path data-c="211D" d="M17 665Q17 672 28 683H221Q415 681 439 677Q461 673 481 667T516 654T544 639T566 623T584 607T597 592T607 578T614 565T618 554L621 548Q626 530 626 497Q626 447 613 419Q578 348 473 326L455 321Q462 310 473 292T517 226T578 141T637 72T686 35Q705 30 705 16Q705 7 693 -1H510Q503 6 404 159L306 310H268V183Q270 67 271 59Q274 42 291 38Q295 37 319 35Q344 35 353 28Q362 17 353 3L346 -1H28Q16 5 16 16Q16 35 55 35Q96 38 101 52Q106 60 106 341T101 632Q95 645 55 648Q17 648 17 665ZM241 35Q238 42 237 45T235 78T233 163T233 337V621L237 635L244 648H133Q136 641 137 638T139 603T141 517T141 341Q141 131 140 89T134 37Q133 36 133 35H241ZM457 496Q457 540 449 570T425 615T400 634T377 643Q374 643 339 648Q300 648 281 635Q271 628 270 610T268 481V346H284Q327 346 375 352Q421 364 439 392T457 496ZM492 537T492 496T488 427T478 389T469 371T464 361Q464 360 465 360Q469 360 497 370Q593 400 593 495Q593 592 477 630L457 637L461 626Q474 611 488 561Q492 537 492 496ZM464 243Q411 317 410 317Q404 317 401 315Q384 315 370 312H346L526 35H619L606 50Q553 109 464 243Z"></path></g></g></g></g></svg></mjx-container></p>
<ul>
<li>Examples:<ul>
<li>age estimation</li>
<li>stock value prediction</li>
<li>temperature prediction</li>
<li>energy consumption prediction</li>
</ul>
</li>
</ul>
<h1 id="3-Features-labels-tasks"><a href="#3-Features-labels-tasks" class="headerlink" title="3. Features, labels, tasks"></a>3. Features, labels, tasks</h1><h2 id="3-1-Features-and-Labels"><a href="#3-1-Features-and-Labels" class="headerlink" title="3.1. Features and Labels"></a>3.1. Features and Labels</h2><ul>
<li>Data points or instances make up the data used to learn a hypothesis h or find a pattern g</li>
<li>In Machine Learning, a data point consists of feature/label tuples {x, y}</li>
<li>A single data point comes from one measurement/observation</li>
<li>Many data points together make a dataset</li>
</ul>
<h2 id="3-2-Labels"><a href="#3-2-Labels" class="headerlink" title="3.2. Labels"></a>3.2. Labels</h2><blockquote>
<p>Labels y are the values that h(x) aims to predict.</p>
</blockquote>
<ul>
<li>Obtaining labels is usually an arduous task<ul>
<li>Often manual</li>
<li>Repetitive</li>
<li>Complicated experiments Difficult to obtain data</li>
</ul>
</li>
<li>Example:<ul>
<li>Facial expressions of pain</li>
<li>Impact of diet on astronauts in space</li>
<li>Predictions of house prices</li>
</ul>
</li>
</ul>
<h2 id="3-3-Features-Attributes"><a href="#3-3-Features-Attributes" class="headerlink" title="3.3. Features/Attributes"></a>3.3. Features/Attributes</h2><blockquote>
<p>Features/Attributes are measurable values of variables for which some form of pattern exists, that can be used to infer the associated label y.</p>
</blockquote>
<ul>
<li>Sender domain in spam detection</li>
<li>Mouth corner location in smile detection Temperature in forest fire prediction</li>
<li>Pixel value in face detection</li>
<li>Head pose estimation from facial point locations</li>
</ul>
<h2 id="3-4-Features-Definition"><a href="#3-4-Features-Definition" class="headerlink" title="3.4. Features Definition"></a>3.4. Features Definition</h2><ul>
<li>For a given problem, all data points must have the same, fixed-length(a row-vector with d elements) set of features x :<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="17.766ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7852.4 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(849.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(1905.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(2294.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3270.1, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(3714.8, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4690.3, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(5135, 0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="msub" transform="translate(6473.7, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7463.4, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></li>
<li>A dataset with n data points is then denoted as a n x d matrix:<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="19.795ex" height="2.583ex" role="img" focusable="false" viewBox="0 -891.7 8749.5 1141.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mo" transform="translate(1129.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2185.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(2574.6, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3550.1, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(3994.8, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4970.3, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(5415, 0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="msub" transform="translate(6753.7, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(572, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="msup" transform="translate(7799.9, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(389, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="54" d="M36 443Q37 448 46 558T55 671V677H666V671Q667 666 676 556T685 443V437H645V443Q645 445 642 478T631 544T610 593Q593 614 555 625Q534 630 478 630H451H443Q417 630 414 618Q413 616 413 339V63Q420 53 439 50T528 46H558V0H545L361 3Q186 1 177 0H164V46H194Q264 46 283 49T309 63V339V550Q309 620 304 625T271 630H244H224Q154 630 119 601Q101 585 93 554T81 486T76 443V437H36V443Z"></path></g></g></g></g></g></g></svg></mjx-container></li>
</ul>
<h2 id="3-5-Labels-Definition"><a href="#3-5-Labels-Definition" class="headerlink" title="3.5. Labels Definition"></a>3.5. Labels Definition</h2><p>For a given problem with a singular task, the set of labels y accompanying the set of features X is given as:<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="19.239ex" height="2.583ex" role="img" focusable="false" viewBox="0 -891.7 8503.5 1141.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mo" transform="translate(1129.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2185.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(2574.6, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3468.1, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(3912.8, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4806.3, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(5251, 0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="msub" transform="translate(6589.7, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(490, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="msup" transform="translate(7553.9, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(389, 413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="54" d="M36 443Q37 448 46 558T55 671V677H666V671Q667 666 676 556T685 443V437H645V443Q645 445 642 478T631 544T610 593Q593 614 555 625Q534 630 478 630H451H443Q417 630 414 618Q413 616 413 339V63Q420 53 439 50T528 46H558V0H545L361 3Q186 1 177 0H164V46H194Q264 46 283 49T309 63V339V550Q309 620 304 625T271 630H244H224Q154 630 119 601Q101 585 93 554T81 486T76 443V437H36V443Z"></path></g></g></g></g></g></g></svg></mjx-container></p>
<h1 id="4-Linear-Regression-Intro"><a href="#4-Linear-Regression-Intro" class="headerlink" title="4. Linear Regression Intro"></a>4. Linear Regression Intro</h1><h2 id="4-1-Simplest-Example-Latitude-and-Temperature"><a href="#4-1-Simplest-Example-Latitude-and-Temperature" class="headerlink" title="4.1. Simplest Example -Latitude and Temperature"></a>4.1. Simplest Example -Latitude and Temperature</h2><p><img src="SimplestExampleLinearRegression.png" alt="SimplestExampleLinearRegression.png"></p>
<h2 id="4-2-Training-Set-and-Meaning-of-Symbol"><a href="#4-2-Training-Set-and-Meaning-of-Symbol" class="headerlink" title="4.2. Training Set and Meaning of Symbol"></a>4.2. Training Set and Meaning of Symbol</h2><p><img src="TrainingSetAndMeaningofSymbol.png" alt="TrainingSetAndMeaningofSymbol.png"></p>
<h2 id="4-3-Learning-Flow"><a href="#4-3-Learning-Flow" class="headerlink" title="4.3. Learning Flow"></a>4.3. Learning Flow</h2><p>Univariate Linear Regression: One feature.<br><img src="LearningFlow.png" alt="LearningFlow.png"></p>
<h2 id="4-4-Training-Algorithm-Minimises-the-Cost-Function"><a href="#4-4-Training-Algorithm-Minimises-the-Cost-Function" class="headerlink" title="4.4. Training Algorithm - Minimises the Cost Function"></a>4.4. Training Algorithm - Minimises the Cost Function</h2><p>Given a model h with solution space <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.027ex" xmlns="http://www.w3.org/2000/svg" width="1.258ex" height="1.615ex" role="img" focusable="false" viewBox="0 -702 556 714"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D54A" d="M54 238Q72 238 72 212Q72 174 106 121Q113 110 132 90T166 59Q221 23 264 23Q315 23 348 41Q368 50 384 79Q393 102 393 129Q393 181 356 219T221 299Q120 343 74 390T28 501Q28 561 55 610Q98 682 212 699Q214 699 231 700T261 701Q309 698 340 687T408 675Q431 678 445 690T465 702Q474 702 481 690V497L477 490Q464 481 450 490Q446 500 446 501Q446 546 386 606T260 666Q215 666 182 639T148 565Q148 528 186 496T319 428Q352 414 370 405T418 379T468 338T506 284Q528 239 528 191Q528 102 456 46T266 -10Q211 -10 176 2T110 15Q86 9 73 -1T53 -12Q44 -12 37 -1V112V182Q37 214 40 226T54 238ZM446 619Q446 648 444 648Q439 646 435 644Q425 644 415 639H404L417 624Q435 606 439 601L446 592V619ZM124 619L128 635Q126 635 108 617Q64 576 64 502Q64 489 65 479T76 449T102 414T150 376T228 335Q335 291 381 245T427 128Q427 94 419 75L415 61Q421 61 448 88Q490 127 490 190Q490 233 475 264Q456 299 430 321Q402 349 369 367T287 404T204 441Q138 481 119 526Q113 544 113 565Q113 596 124 619ZM75 43Q76 43 90 46T110 50H119L106 64L74 101Q72 101 72 72T75 43Z"></path></g></g></g></g></svg></mjx-container> and a training set {X,y}, a learning algorithm finds the solution <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex" xmlns="http://www.w3.org/2000/svg" width="1.257ex" height="1.753ex" role="img" focusable="false" viewBox="0 -765 555.6 775"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi" transform="translate(15.5, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(55.6, -29)"><path data-c="2C6" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g></g></g></svg></mjx-container> that minimises the cost function J(S).</p>
<h2 id="4-5-Intrinsic-Hyper-Parameters"><a href="#4-5-Intrinsic-Hyper-Parameters" class="headerlink" title="4.5. Intrinsic/Hyper Parameters"></a>4.5. Intrinsic/Hyper Parameters</h2><ol>
<li><p>Intrinsic parameters</p>
<ul>
<li>Can be efficiently learned on the training set</li>
<li>Large in number</li>
<li>E.g. weights in linear regression or Artificial Neural Network</li>
<li>固有参数是指模型可以通过数据自动学习出的变量；Eg. 深度学习的权重、偏差</li>
</ul>
</li>
<li><p>Hyper-parameters</p>
<ul>
<li>Must be learned by establishing generalisation error</li>
<li>No efficient search possible</li>
<li>Smaller in number</li>
<li>E.g. the number of nodes in an ANN or the degree of a polynomial linear regression model</li>
<li>超参数是用来确定模型的参数，超参数不同，模型不同，一般是根据经验确定的；Eg. 学习速率，迭代次数，层数，每层神经元的个数等</li>
</ul>
</li>
</ol>
<h2 id="4-6-Brute-Force-Search-暴力查找"><a href="#4-6-Brute-Force-Search-暴力查找" class="headerlink" title="4.6. Brute Force Search(暴力查找)"></a>4.6. Brute Force Search(暴力查找)</h2><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="32.646ex" height="2.367ex" role="img" focusable="false" viewBox="0 -796 14429.6 1046"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(163.3, -48)"><path data-c="2C6" d="M279 669Q273 669 142 610T9 551L0 569Q-8 585 -8 587Q-8 588 -7 588L12 598Q30 608 66 628T136 666L277 744L564 587L555 569Q549 556 547 554T544 552Q539 555 410 612T279 669Z"></path></g></g></g><g data-mml-node="mo" transform="translate(997.1, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(2052.9, 0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(2581.9, 0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3032.9, 0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(3509.9, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4387.9, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4732.9, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(5332.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(5721.9, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(6354.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(6743.9, 0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(7459.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(7848.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(8237.9, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mtext" transform="translate(8682.5, 0)"><path data-c="A0" d=""></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(8932.5, 0)"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(163.3, -48)"><path data-c="2C6" d="M279 669Q273 669 142 610T9 551L0 569Q-8 585 -8 587Q-8 588 -7 588L12 598Q30 608 66 628T136 666L277 744L564 587L555 569Q549 556 547 554T544 552Q539 555 410 612T279 669Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9929.6, 0)"><text data-variant="normal" transform="matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">表</text><text data-variant="normal" transform="translate(900, 0) matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">示</text><text data-variant="normal" transform="translate(1800, 0) matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">参</text><text data-variant="normal" transform="translate(2700, 0) matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">数</text><text data-variant="normal" transform="translate(3600, 0) matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">集</text></g></g></g></svg></mjx-container><br>Note-思考问题:</p>
<ul>
<li>You can’t do this for hyper-parameters using the above formulation (why not?)</li>
<li>Clearly you can’t search all possible values (why not?)</li>
<li>This is a very small formula, but there are some hidden caveats. Can you write matlab/pseudo code for this?</li>
</ul>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>UoN</category>
      </categories>
      <tags>
        <tag>COMP3009-Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>COMP3009 - 3.Mathematics for ML</title>
    <url>/2020/10/19/COMP3009-3-Mathematics-for-ML/</url>
    <content><![CDATA[<p>老师简单的过了一遍线性代数、概率论、微分，若想深入请看参考资料。<br>后续有空整理下AI核心数学知识。</p>
<a id="more"></a>

<p>Source:</p>
<ol>
<li>条件概率: <a href="https://zhuanlan.zhihu.com/p/78097135">https://zhuanlan.zhihu.com/p/78097135</a></li>
<li>贝叶斯: <a href="https://zhuanlan.zhihu.com/p/78297343">https://zhuanlan.zhihu.com/p/78297343</a></li>
<li>统计学: <a href="https://seeing-theory.brown.edu/basic-probability/index.html">https://seeing-theory.brown.edu/basic-probability/index.html</a></li>
<li>矩阵: <a href="https://www.hahack.com/math/math-matrix/">https://www.hahack.com/math/math-matrix/</a></li>
<li>导数\偏导数: <a href="https://www.shuxuele.com/calculus/index.html">https://www.shuxuele.com/calculus/index.html</a></li>
<li>梯度下降: <a href="http://fangda.me/">http://fangda.me/</a></li>
<li>函数绘图: <a href="https://www.geogebra.org/download">https://www.geogebra.org/download</a></li>
<li>数学知识简单汇总: <a href="https://zhuanlan.zhihu.com/p/25197792">https://zhuanlan.zhihu.com/p/25197792</a></li>
<li>机器学习: <a href="https://ailearning.apachecn.org/">https://ailearning.apachecn.org</a></li>
<li>机器学习常用资源: <a href="https://zhuanlan.zhihu.com/p/40419847">https://zhuanlan.zhihu.com/p/40419847</a></li>
</ol>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>UoN</category>
      </categories>
      <tags>
        <tag>COMP3009-Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>COMP4035 - 0.Module Overview</title>
    <url>/2020/10/08/COMP4035-0-Module-Overview/</url>
    <content><![CDATA[<h1 id="1-Teaching"><a href="#1-Teaching" class="headerlink" title="1. Teaching"></a>1. Teaching</h1><ul>
<li>20 credit Module</li>
<li>3 sessions per week – Lecture engagement<ul>
<li>Videos</li>
<li>Online lectures</li>
<li>Moodle Quizzes</li>
<li>Some live sessions</li>
</ul>
</li>
<li>1 workshop per week<ul>
<li>UNIX labs (Online)</li>
<li>Small group teaching/discussions</li>
<li>New material</li>
<li>Other activities</li>
</ul>
</li>
</ul>
<a id="more"></a>

<h1 id="2-Assessment"><a href="#2-Assessment" class="headerlink" title="2. Assessment"></a>2. Assessment</h1><ul>
<li>One exam – take home (75%)</li>
<li>One coursework (25%)</li>
</ul>
<h1 id="3-Structure"><a href="#3-Structure" class="headerlink" title="3. Structure"></a>3. Structure</h1><ol>
<li>Basics<ul>
<li>Introduction</li>
<li>Fundamentals</li>
<li>Unix Filestore</li>
<li>WORKSHOP – UNIX lab (Online)</li>
<li>Unix and I/O (Input/Output) Redirecting</li>
<li>Searching and Regular Expressions</li>
<li>Processes and Signals</li>
</ul>
</li>
<li>Data Communication</li>
<li>Packet Switching and Network Technologies</li>
<li>Internetworking</li>
<li>System Administration</li>
<li>Sharing Resources/Distributed Systems</li>
</ol>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>UoN</category>
      </categories>
      <tags>
        <tag>COMP4035-System&amp;Network</tag>
      </tags>
  </entry>
  <entry>
    <title>COMP3009 - 0.Module Overview</title>
    <url>/2020/10/08/COMP3009-0-Module-Overview/</url>
    <content><![CDATA[<h1 id="1-Teaching"><a href="#1-Teaching" class="headerlink" title="1. Teaching"></a>1. Teaching</h1><h2 id="1-1-Theoretical-Part"><a href="#1-1-Theoretical-Part" class="headerlink" title="1.1. Theoretical Part:"></a>1.1. Theoretical Part:</h2><ul>
<li>2 x 2 hours/week online videos</li>
<li>lecture activities</li>
</ul>
<h2 id="1-2-Practical-Part-Lab-and-3-group-Coursework"><a href="#1-2-Practical-Part-Lab-and-3-group-Coursework" class="headerlink" title="1.2. Practical Part: Lab and 3 group Coursework"></a>1.2. Practical Part: Lab and 3 group Coursework</h2><ul>
<li>ANN - Artifical Neural Networks</li>
<li>Decision Trees</li>
<li>Support Vector Machines</li>
</ul>
<a id="more"></a>

<h1 id="2-Assessment"><a href="#2-Assessment" class="headerlink" title="2. Assessment"></a>2. Assessment</h1><ul>
<li>2h Exam(70%)<ul>
<li>Contents from all lectures examinable, as well as the relevant chapters in the two core text (Bishop and Duda &amp; Hart)</li>
<li>Guest lectures can be used as examples but not examinable in detail.</li>
<li>Three questions - no optional question</li>
</ul>
</li>
<li>One coursework (30%)<ul>
<li>Reports on 3 Lab topics</li>
<li>Peer-review evaluation</li>
</ul>
</li>
</ul>
<h1 id="3-Resources"><a href="#3-Resources" class="headerlink" title="3. Resources"></a>3. Resources</h1><ul>
<li><p>Core text:</p>
<ul>
<li>Machine Learning &amp; Pattern Recognition (Christopher Bishop)<div class="pdf" target="Bishop-PatternRecognitionAndMachineLearning-Springer2006.pdf" height=""></div>
</li>
</ul>
</li>
<li><p>Additional Reading:</p>
<ul>
<li>Machine Learning (Tom Mitchell)</li>
<li>Pattern Classification (Duda &amp; Hart)</li>
</ul>
</li>
</ul>
<h1 id="4-Structure"><a href="#4-Structure" class="headerlink" title="4. Structure"></a>4. Structure</h1><ol>
<li>Introduction</li>
<li>Linear Regression</li>
<li>Mathematics for Machine Learning</li>
<li>Linear Classification</li>
<li>Decision Trees</li>
<li>Artificial Neural Networks I</li>
<li>Artificial Neural Networks II</li>
<li>Deep Learning and Convolutional Neural Networks</li>
<li>Evaluating Hypotheses</li>
<li>Unsupervised Learning</li>
<li>Data mining</li>
<li>Dimensionality Reduction</li>
<li>Kernel Methods</li>
<li>Support Vector Machines</li>
<li>Bayesian Learning</li>
<li>Probabilistic Graphical Models</li>
<li>Sequential Data</li>
<li>Advanced Topics</li>
<li>Exam Revision</li>
</ol>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>UoN</category>
      </categories>
      <tags>
        <tag>COMP3009-Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Book - Learn More, Study Less!</title>
    <url>/2020/02/05/Book-Learn-More-Study-Less/</url>
    <content><![CDATA[<h1 id="1-lt-Learn-More-Study-Less-gt"><a href="#1-lt-Learn-More-Study-Less-gt" class="headerlink" title="1. &lt;Learn More, Study Less!&gt;"></a>1. &lt;Learn More, Study Less!&gt;</h1><blockquote>
<p>Focus on the best way to study.</p>
</blockquote>
<a id="more"></a>
<div class="pdf" target="LearnMoreStudyLess.pdf" height=""></div>

<h1 id="2-Reading-Notes"><a href="#2-Reading-Notes" class="headerlink" title="2. Reading Notes"></a>2. Reading Notes</h1><p><img src="LearnMoreStudyLess.png" alt="Learn More, Study Less!"></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>Reading Notes</category>
      </categories>
      <tags>
        <tag>learning method</tag>
      </tags>
  </entry>
  <entry>
    <title>COMP3009 - 2.Linear Regression</title>
    <url>/2020/10/12/COMP3009-2-Linear-Regression/</url>
    <content><![CDATA[<h1 id="1-Univariate-Linear-Regression"><a href="#1-Univariate-Linear-Regression" class="headerlink" title="1. Univariate Linear Regression"></a>1. Univariate Linear Regression</h1><blockquote>
<p>Univariate linear regression operates on a single dimension/feature of your data.</p>
</blockquote>
<a id="more"></a>

<p><img src="FindingParameter.png" alt="FindingParameter.png"></p>
<ul>
<li>单变量线性回归模型</li>
<li>通过观察预测值h(x)与真实值的差值，来找到最优权重w.</li>
<li>因此我们引入误差函数的计算</li>
</ul>
<h2 id="1-1-Choose-a-Cost-Function"><a href="#1-1-Choose-a-Cost-Function" class="headerlink" title="1.1. Choose a Cost Function"></a>1.1. Choose a Cost Function</h2><p><img src="ChooseCostFunction.png" alt="ChooseCostFunction.png"></p>
<ul>
<li>绝对误差(Absolute error)函数: 由于绝对误差函数是一阶，因此坡度(斜率)不变，其结果导致无论初始值选择多少，误差下降(减少)的速度不变</li>
</ul>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="16.5ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7293.1 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mo" transform="translate(576, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(965, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1537, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2203.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(3259.6, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4601.3, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(5601.6, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mi" transform="translate(6721.1, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="13.269ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 5865 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D700" d="M190 -22Q124 -22 76 11T27 107Q27 174 97 232L107 239L99 248Q76 273 76 304Q76 364 144 408T290 452H302Q360 452 405 421Q428 405 428 392Q428 381 417 369T391 356Q382 356 371 365T338 383T283 392Q217 392 167 368T116 308Q116 289 133 272Q142 263 145 262T157 264Q188 278 238 278H243Q308 278 308 247Q308 206 223 206Q177 206 142 219L132 212Q68 169 68 112Q68 39 201 39Q253 39 286 49T328 72T345 94T362 105Q376 103 376 88Q376 79 365 62T334 26T275 -8T190 -22Z"></path></g><g data-mml-node="mo" transform="translate(743.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(1799.6, 0)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2077.6, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mo" transform="translate(2653.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3042.6, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(3614.6, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4225.8, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(5226, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(5587, 0)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.148ex" xmlns="http://www.w3.org/2000/svg" width="61.362ex" height="5.451ex" role="img" focusable="false" viewBox="0 -1460 27122.2 2409.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 710)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(520, 0)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(798, 0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mo" transform="translate(1374, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1763, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(2335, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2946.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3946.4, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(4307.4, 0)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g><g data-mml-node="mrow" transform="translate(1966.7, -686)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(520, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><rect width="4785.4" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(5303.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(6359, 0)"><g data-mml-node="mrow" transform="translate(220, 709.5)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(520, 0)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="msub" transform="translate(798, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2139.8, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(3140, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mi" transform="translate(4259.6, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(5053.8, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(6054, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(6415, 0)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g><g data-mml-node="mrow" transform="translate(3020.5, -686)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(520, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><rect width="6893" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(13769.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(14825.6, 0)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="msub" transform="translate(15103.6, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(16223.1, 0)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mo" transform="translate(16778.9, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(17834.7, 0)"><g data-mml-node="mo"><path data-c="7B" d="M618 -943L612 -949H582L568 -943Q472 -903 411 -841T332 -703Q327 -682 327 -653T325 -350Q324 -28 323 -18Q317 24 301 61T264 124T221 171T179 205T147 225T132 234Q130 238 130 250Q130 255 130 258T131 264T132 267T134 269T139 272T144 275Q207 308 256 367Q310 436 323 519Q324 529 325 851Q326 1124 326 1154T332 1205Q369 1358 566 1443L582 1450H612L618 1444V1429Q618 1413 616 1411L608 1406Q599 1402 585 1393T552 1372T515 1343T479 1305T449 1257T429 1200Q425 1180 425 1152T423 851Q422 579 422 549T416 498Q407 459 388 424T346 364T297 318T250 284T214 264T197 254L188 251L205 242Q290 200 345 138T416 3Q421 -18 421 -48T423 -349Q423 -397 423 -472Q424 -677 428 -694Q429 -697 429 -699Q434 -722 443 -743T465 -782T491 -816T519 -845T548 -868T574 -886T595 -899T610 -908L616 -910Q618 -912 618 -928V-943Z"></path></g><g data-mml-node="mtable" transform="translate(750, 0)"><g data-mml-node="mtr" transform="translate(0, 600)"><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><g data-mml-node="mtd" transform="translate(2897.6, 0)"><g data-mml-node="mtext"><path data-c="68" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 124T102 167T103 217T103 272T103 329Q103 366 103 407T103 482T102 542T102 586T102 603Q99 622 88 628T43 637H25V660Q25 683 27 683L37 684Q47 685 66 686T103 688Q120 689 140 690T170 693T181 694H184V367Q244 442 328 442Q451 442 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" transform="translate(556, 0)"></path><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(945, 0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(1473, 0)"></path><path data-c="20" d="" transform="translate(1862, 0)"></path><path data-c="2D" d="M11 179V252H277V179H11Z" transform="translate(2112, 0)"></path><path data-c="20" d="" transform="translate(2445, 0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(2695, 0)"></path><path data-c="20" d="" transform="translate(3084, 0)"></path><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z" transform="translate(3334, 0)"></path><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" transform="translate(4112, 0)"></path><path data-c="20" d="" transform="translate(4890, 0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(5140, 0)"></path></g></g></g><g data-mml-node="mtr" transform="translate(0, -600)"><g data-mml-node="mtd"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(778, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><g data-mml-node="mtd" transform="translate(2897.6, 0)"><g data-mml-node="mtext"><path data-c="68" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 124T102 167T103 217T103 272T103 329Q103 366 103 407T103 482T102 542T102 586T102 603Q99 622 88 628T43 637H25V660Q25 683 27 683L37 684Q47 685 66 686T103 688Q120 689 140 690T170 693T181 694H184V367Q244 442 328 442Q451 442 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" transform="translate(556, 0)"></path><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(945, 0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(1473, 0)"></path><path data-c="20" d="" transform="translate(1862, 0)"></path><path data-c="2D" d="M11 179V252H277V179H11Z" transform="translate(2112, 0)"></path><path data-c="20" d="" transform="translate(2445, 0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(2695, 0)"></path><path data-c="20" d="" transform="translate(3084, 0)"></path><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z" transform="translate(3334, 0)"></path><path data-c="20" d="" transform="translate(4112, 0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(4362, 0)"></path></g></g></g></g><g data-mml-node="mo" transform="translate(9287.6, 0)"></g></g></g></g></svg></mjx-container></p>
<p><img src="CostFunction.png" alt="CostFunction.png"></p>
<ul>
<li>可微误差(Differentiable error)函数: 二阶函数，便于通过导数(derivative)的大小来判断下降方向</li>
<li>虽然这两种函数都代表了真实值与预测值的误差，但是选择Differentiable error可以将未知问题转换为已知问题求解</li>
</ul>
<h1 id="2-Cost-Function"><a href="#2-Cost-Function" class="headerlink" title="2. Cost Function"></a>2. Cost Function</h1><h2 id="2-1-Squared-error-cost-function"><a href="#2-1-Squared-error-cost-function" class="headerlink" title="2.1. Squared error cost function"></a>2.1. Squared error cost function</h2><p><img src="PartialDerivative.png" alt="PartialDerivative.png"></p>
<ul>
<li>平方误差函数</li>
<li>不同的误差函数适应不同的应用场景，还有许多误差函数</li>
<li>1/2的引入是便于和微分后产生的2抵消</li>
</ul>
<h2 id="2-2-Partial-Derivative"><a href="#2-2-Partial-Derivative" class="headerlink" title="2.2. Partial Derivative"></a>2.2. Partial Derivative</h2><p><img src="AbsoluteError.png" alt="AbsoluteError.png"></p>
<ul>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="7.832ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3461.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1508.6, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1953.2, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3072.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>均为parameter，因此会产生two Partial Derivatives</li>
<li>L2: second dimensional; 二维</li>
</ul>
<h2 id="2-3-Other-Cost-Functions"><a href="#2-3-Other-Cost-Functions" class="headerlink" title="2.3. Other Cost Functions"></a>2.3. Other Cost Functions</h2><p><img src="OtherCostFunction.png" alt="OtherCostFunction.png"></p>
<h1 id="3-Multivariate-Linear-Regression"><a href="#3-Multivariate-Linear-Regression" class="headerlink" title="3. Multivariate Linear Regression"></a>3. Multivariate Linear Regression</h1><h2 id="3-1-First-order-Polynomial"><a href="#3-1-First-order-Polynomial" class="headerlink" title="3.1. First-order Polynomial"></a>3.1. First-order Polynomial</h2><p><img src="MultivariateLinearRegressionFirst-order.png" alt="MultivariateLinearRegressionFirst-order.png"></p>
<ul>
<li>一阶多项式的多元线性回归</li>
</ul>
<h2 id="3-2-Higher-order-Polynomial"><a href="#3-2-Higher-order-Polynomial" class="headerlink" title="3.2. Higher-order Polynomial"></a>3.2. Higher-order Polynomial</h2><p><img src="MultivariateLinearRegressionHigh-order.png" alt="MultivariateLinearRegressionHigh-order.png"></p>
<ul>
<li>高阶多项式的多元线性回归</li>
</ul>
<h2 id="3-3-Linear-Basis-Functions"><a href="#3-3-Linear-Basis-Functions" class="headerlink" title="3.3.  Linear Basis Functions"></a>3.3.  Linear Basis Functions</h2><p><img src="LinearBasisFunctions.png" alt="LinearBasisFunctions.png"></p>
<ul>
<li>多项式回归模型可以推广为非线性基函数的线性组合</li>
<li>这里为了简化函数，令<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="8.551ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3779.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z"></path></g><g data-mml-node="mo" transform="translate(596, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(985, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1557, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2223.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3279.6, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container></li>
<li>矩阵的叉乘(叉积)</li>
</ul>
<h1 id="4-Gradient-Descent"><a href="#4-Gradient-Descent" class="headerlink" title="4. Gradient Descent"></a>4. Gradient Descent</h1><h2 id="4-1-Aim"><a href="#4-1-Aim" class="headerlink" title="4.1. Aim"></a>4.1. Aim</h2><p>Given some cost function <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex" xmlns="http://www.w3.org/2000/svg" width="1.432ex" height="1.595ex" role="img" focusable="false" viewBox="0 -683 633 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g></g></g></svg></mjx-container> , we want: <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.849ex" xmlns="http://www.w3.org/2000/svg" width="21.094ex" height="3.545ex" role="img" focusable="false" viewBox="0 -750 9323.7 1567.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="munder"><g data-mml-node="mo" transform="translate(377.8, 0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(833, 0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1111, 0)"></path></g><g data-mml-node="TeXAtom" transform="translate(0, -600) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1119.6, 0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="msub" transform="translate(2291.6, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g><g data-mml-node="mi" transform="translate(2589.2, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(3222.2, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(3611.2, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4730.7, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(5175.4, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6461.6, 0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="msub" transform="translate(7800.3, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8934.7, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<ul>
<li>Start with some initial values for <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex" xmlns="http://www.w3.org/2000/svg" width="12.044ex" height="1.441ex" role="img" focusable="false" viewBox="0 -443 5323.5 637"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1119.6, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1564.2, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2850.4, 0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="msub" transform="translate(4189.1, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g></svg></mjx-container></li>
<li>Keep updating <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.62ex" height="1.027ex" role="img" focusable="false" viewBox="0 -443 716 454"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g></g></g></svg></mjx-container> to reduce  <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="15.236ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 6734.5 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1022, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2141.6, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(2586.2, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3872.4, 0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="msub" transform="translate(5211.1, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6345.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>hoping to end in the minimum</li>
<li>We want to know when we’re in this minimum!</li>
</ul>
<h2 id="4-2-Gradient-Descent-Algorithm"><a href="#4-2-Gradient-Descent-Algorithm" class="headerlink" title="4.2. Gradient Descent Algorithm"></a>4.2. Gradient Descent Algorithm</h2><p><img src="GradientDescentAlgorithm.png" alt="GradientDescentAlgorithm.png"></p>
<ul>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.448ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 640 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g></g></g></svg></mjx-container> 为学习速率</li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="2.533ex" height="1.377ex" role="img" focusable="false" viewBox="0 -443 1119.6 608.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g></g></svg></mjx-container>和<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex" xmlns="http://www.w3.org/2000/svg" width="2.533ex" height="1.342ex" role="img" focusable="false" viewBox="0 -443 1119.6 593"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></svg></mjx-container> 必须同时更新</li>
</ul>
<h2 id="4-3-Learning-Rate-Influence"><a href="#4-3-Learning-Rate-Influence" class="headerlink" title="4.3. Learning Rate Influence"></a>4.3. Learning Rate Influence</h2><p><img src="LearningRate.png" alt="LearningRate.png"></p>
<ul>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.448ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 640 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g></g></g></svg></mjx-container>, 学习速率会影响收敛的快慢</li>
</ul>
<h2 id="4-4-Partial-Derivative-of-Cost-Function"><a href="#4-4-Partial-Derivative-of-Cost-Function" class="headerlink" title="4.4. Partial Derivative of Cost Function"></a>4.4. Partial Derivative of Cost Function</h2><blockquote>
<p>The partial derivatives of our cost function for linear regression</p>
</blockquote>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="17.759ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7849.4 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(576, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1132.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1521.3, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(2093.3, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2760.1, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(3815.8, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5157.6, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(6157.8, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mi" transform="translate(7277.4, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex" xmlns="http://www.w3.org/2000/svg" width="31.281ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 13826.3 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1022, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2141.6, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(2586.2, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3705.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4372.6, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(5428.3, 0)"><g data-mml-node="mn" transform="translate(520, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1300" height="60" x="120" y="220"></rect></g><g data-mml-node="munderover" transform="translate(7135, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(509.9, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8579, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(8968, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(576, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10100.3, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(10489.3, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(11061.3, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(11672.5, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(12672.7, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="msup" transform="translate(13033.7, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex" xmlns="http://www.w3.org/2000/svg" width="60.872ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 26905.3 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(779.8, 676)"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msub" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g><rect width="1885.6" height="60" x="120" y="220"></rect></g><g data-mml-node="mi" transform="translate(2125.6, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(2758.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(3147.6, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4267.1, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(4711.8, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5831.3, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6498.1, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(7553.9, 0)"><g data-mml-node="mi" transform="translate(779.8, 676)"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msub" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g><rect width="1885.6" height="60" x="120" y="220"></rect></g><g data-mml-node="mfrac" transform="translate(9679.4, 0)"><g data-mml-node="mn" transform="translate(520, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1300" height="60" x="120" y="220"></rect></g><g data-mml-node="munderover" transform="translate(11386.1, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(509.9, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(12830.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(13219.1, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(576, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g></g></g><g data-mml-node="mo" transform="translate(14351.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(14740.4, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(15312.4, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(15923.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(16923.8, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="msup" transform="translate(17284.8, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(18355.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(19410.9, 0)"><g data-mml-node="mn" transform="translate(270, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><rect width="800" height="60" x="120" y="220"></rect></g><g data-mml-node="munderover" transform="translate(20617.6, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(509.9, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(22061.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(22450.6, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(576, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g></g></g><g data-mml-node="mo" transform="translate(23582.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(23971.9, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(24543.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(25155.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(26155.3, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(26516.3, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex" xmlns="http://www.w3.org/2000/svg" width="62.166ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 27477.3 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(779.8, 676)"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msub" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><rect width="1885.6" height="60" x="120" y="220"></rect></g><g data-mml-node="mi" transform="translate(2125.6, 0)"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(2758.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(3147.6, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4267.1, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(4711.8, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5831.3, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6498.1, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(7553.9, 0)"><g data-mml-node="mi" transform="translate(779.8, 676)"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msub" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><rect width="1885.6" height="60" x="120" y="220"></rect></g><g data-mml-node="mfrac" transform="translate(9679.4, 0)"><g data-mml-node="mn" transform="translate(520, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1300" height="60" x="120" y="220"></rect></g><g data-mml-node="munderover" transform="translate(11386.1, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(509.9, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(12830.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(13219.1, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(576, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g></g></g><g data-mml-node="mo" transform="translate(14351.4, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(14740.4, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(15312.4, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(15923.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(16923.8, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="msup" transform="translate(17284.8, 0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(389, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(18355.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(19410.9, 0)"><g data-mml-node="mn" transform="translate(270, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><rect width="800" height="60" x="120" y="220"></rect></g><g data-mml-node="munderover" transform="translate(20617.6, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(509.9, 1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(22061.6, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(22450.6, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="TeXAtom" transform="translate(576, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g></g></g><g data-mml-node="mo" transform="translate(23582.9, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(23971.9, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(24543.9, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(25155.1, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(26155.3, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(26516.3, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(26905.3, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></svg></mjx-container></p>
<h2 id="4-6-Two-variable-Cost-Function"><a href="#4-6-Two-variable-Cost-Function" class="headerlink" title="4.6. Two-variable Cost Function"></a>4.6. Two-variable Cost Function</h2><p><img src="Two-variableCostFunction.png" alt="Two-variableCostFunction.png"></p>
<h2 id="4-7-Multivariate-Linear-Regression"><a href="#4-7-Multivariate-Linear-Regression" class="headerlink" title="4.7. Multivariate Linear Regression"></a>4.7. Multivariate Linear Regression</h2><p><img src="MultivariateLinearRegression.png" alt="MultivariateLinearRegression.png"></p>
<h2 id="4-8-Gradient-Descent"><a href="#4-8-Gradient-Descent" class="headerlink" title="4.8. Gradient Descent"></a>4.8. Gradient Descent</h2><p><img src="GradientDescent.png" alt="GradientDescent.png"></p>
<h2 id="4-9-Local-and-Global-Minimal"><a href="#4-9-Local-and-Global-Minimal" class="headerlink" title="4.9. Local and Global Minimal"></a>4.9. Local and Global Minimal</h2><p><img src="LocalandGlobalMinima.png" alt="LocalandGlobalMinima.png"></p>
<ul>
<li>每一个全局最小值都是一个局部最小值，但是每一个局部最小值并不是全局最小值</li>
<li>每次当程序收敛后，其实并不知道是局部最小值还是全局最小值；因此需要测试多组不同初始值来判定</li>
</ul>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>UoN</category>
      </categories>
      <tags>
        <tag>COMP3009-Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>PM600 Book</title>
    <url>/2019/11/09/PM600-Book/</url>
    <content><![CDATA[<h1 id="1-How-To-Do-Your-Research-Project"><a href="#1-How-To-Do-Your-Research-Project" class="headerlink" title="1. How To Do Your Research Project"></a>1. How To Do Your Research Project</h1><blockquote>
<p>A Guide for students</p>
</blockquote>
<a id="more"></a>

<div class="pdf" target="HowtoDoYourResearchProject.pdf" height=""></div>
<hr>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>TUNIC</category>
      </categories>
      <tags>
        <tag>PM600 Research Project</tag>
      </tags>
  </entry>
  <entry>
    <title>COMP4039 - 1.Databases</title>
    <url>/2020/10/07/COMP4039-1-Databases/</url>
    <content><![CDATA[<h1 id="1-Wkiipedia-Definition"><a href="#1-Wkiipedia-Definition" class="headerlink" title="1. Wkiipedia Definition"></a>1. Wkiipedia Definition</h1><p>A database is an organized collection of data, generally stored and accessed electronically from a computer system.</p>
<h1 id="2-Programming-data-structures-and-databases"><a href="#2-Programming-data-structures-and-databases" class="headerlink" title="2. Programming data structures and databases"></a>2. Programming data structures and databases</h1><ul>
<li>You have to find a way to map data structures in your programming language to data structures held by the (relational) database.</li>
<li>OO data structure  &lt;——&gt; DBs</li>
</ul>
<a id="more"></a>

<h1 id="3-The-world’s-simplest-databases"><a href="#3-The-world’s-simplest-databases" class="headerlink" title="3. The world’s simplest databases"></a>3. The world’s simplest databases</h1><h2 id="3-1-File-based-databases"><a href="#3-1-File-based-databases" class="headerlink" title="3.1. File-based databases"></a>3.1. File-based databases</h2><ul>
<li>Linux configuration files: /etc/xxx</li>
<li>DNS/Network configuration files …</li>
</ul>
<h2 id="3-2-Problems"><a href="#3-2-Problems" class="headerlink" title="3.2. Problems"></a>3.2. Problems</h2><ul>
<li>No standards</li>
<li>Data duplication</li>
<li>Data dependence</li>
<li>No way to generate complex queries (e.g., JOIN)</li>
<li>No provision for concurrency, security, recovery, etc.</li>
</ul>
<h1 id="4-DBMS-Database-Management-Systems"><a href="#4-DBMS-Database-Management-Systems" class="headerlink" title="4. DBMS - Database Management Systems"></a>4. DBMS - Database Management Systems</h1><h2 id="4-1-Definition"><a href="#4-1-Definition" class="headerlink" title="4.1. Definition"></a>4.1. Definition</h2><blockquote>
<p>A database is a system to allow multiple users to share the same information<br>A Database Management System (DBMS) is the software that implements a database</p>
</blockquote>
<ul>
<li>a collaborative system</li>
<li>uniqueness</li>
<li>data integrity/consistency</li>
</ul>
<h2 id="4-2-What-a-DBMS-does"><a href="#4-2-What-a-DBMS-does" class="headerlink" title="4.2. What a DBMS does?"></a>4.2. What a DBMS does?</h2><ul>
<li>store data</li>
<li>manage change (updates)</li>
<li>organise data</li>
<li>retrieve data</li>
<li>retain privacy (security)</li>
<li>ensure reliability &amp; consistency (no redundancy, transactional model, etc.)</li>
</ul>
<h2 id="4-3-What-a-DBMS-provides"><a href="#4-3-What-a-DBMS-provides" class="headerlink" title="4.3. What a DBMS provides?"></a>4.3. What a DBMS provides?</h2><blockquote>
<p>SQL=(DDL, DML, DCL)</p>
</blockquote>
<ul>
<li>Data Definition Language (DDL)<ul>
<li>e.g., ‘CREATE’ table</li>
</ul>
</li>
<li>Data Manipulation Language (DML)<ul>
<li>e.g., ‘INSERT’ row</li>
</ul>
</li>
<li>Data Control Language (DCL)<ul>
<li>e.g., ‘GRANT’ privilege on table to user</li>
</ul>
</li>
</ul>
<h2 id="4-4-DBMS-components"><a href="#4-4-DBMS-components" class="headerlink" title="4.4. DBMS components"></a>4.4. DBMS components</h2><ul>
<li>Data dictionary: stores information about database objects</li>
<li>Data dictionary compiler: extracts database information and stores it in the data dictionary</li>
<li>Query processor: parses / interprets and optimises user queries (caching?)</li>
<li>Transaction manager: communicates with recovery manager and scheduler to ensure data consistency in multi-user environments</li>
<li>Storage manager: deals with concrete file I/O etc.</li>
</ul>
<h2 id="4-5-ANSI-SPARC-architecture"><a href="#4-5-ANSI-SPARC-architecture" class="headerlink" title="4.5. ANSI / SPARC architecture"></a>4.5. ANSI / SPARC architecture</h2><p>Three tier architecture:</p>
<ul>
<li>internal level/schema: For systems designers (OS, file system level , provides platform independent service for conceptual level)</li>
<li>Conceptual level/schema: For database designers (structure for all users, abstracted from internal level)</li>
<li>External level/schema: For database users (user view, subject to access permissions, multiple possible views)<br>Not fully implemented in any DBMS: Eg. external level blended with conceptual level (MySQL)</li>
</ul>
<h2 id="4-6-Database-systems-programmers"><a href="#4-6-Database-systems-programmers" class="headerlink" title="4.6. Database systems programmers"></a>4.6. Database systems programmers</h2><ul>
<li>Database systems programmers: writes the DBMS software</li>
<li>Database administrators (DBA): designs and manages the database system</li>
<li>Applications developers: write the client software that allows end users to interface with the DBMS</li>
<li>End users: use the information provided by the database to achieve a personal or organisational goal</li>
</ul>
<h1 id="5-Lab-Exercise"><a href="#5-Lab-Exercise" class="headerlink" title="5. Lab Exercise"></a>5. Lab Exercise</h1><h2 id="5-1-Exercise-Guide"><a href="#5-1-Exercise-Guide" class="headerlink" title="5.1. Exercise Guide"></a>5.1. Exercise Guide</h2><div class="pdf" target="lab-1.pdf" height=""></div>

<ul>
<li><a href="lab-1-countries-data.csv">Download lab-1-countries-data.csv</a></li>
</ul>
<h2 id="5-2-My-Answer"><a href="#5-2-My-Answer" class="headerlink" title="5.2. My Answer"></a>5.2. My Answer</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- Create Database</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> COMP4039;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Use Database</span></span><br><span class="line"><span class="keyword">USE</span> COMP4039;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Create Table</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> countries (</span><br><span class="line">    countries_name <span class="built_in">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">    countries_area <span class="built_in">INT</span>,</span><br><span class="line">    countries_population <span class="built_in">INT</span>,</span><br><span class="line">    countries_gdp <span class="built_in">BIGINT</span>(<span class="number">20</span>),</span><br><span class="line">    countries_currency <span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    countries_capital <span class="built_in">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">    ountries_tld <span class="built_in">VARCHAR</span>(<span class="number">10</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 1. Print the GDP of all countries in the database.</span></span><br><span class="line"><span class="keyword">SELECT</span> countries_name, countries_gdp</span><br><span class="line"><span class="keyword">FROM</span> COMP4039.countries;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. Print the GDP of all countries,in descending order.</span></span><br><span class="line"><span class="keyword">SELECT</span> countries_name, countries_gdp</span><br><span class="line"><span class="keyword">FROM</span> COMP4039.countries</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> countries_gdp <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3. Print the per-capita GDP of all countries in the database, in descending order.</span></span><br><span class="line"><span class="keyword">SELECT</span> countries_name, countries_gdp/countries_population per_capitaGDP</span><br><span class="line"><span class="keyword">FROM</span> COMP4039.countries</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> per_capitaGDP <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4. Display 2 places of decimals</span></span><br><span class="line"><span class="keyword">SELECT</span> countries_name, <span class="keyword">ROUND</span>(countries_gdp/countries_population, <span class="number">2</span>) per_capitaGDP</span><br><span class="line"><span class="keyword">FROM</span> COMP4039.countries</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> per_capitaGDP <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5. Ignores very small countries with a land mass of less than 20,000.</span></span><br><span class="line"><span class="keyword">SELECT</span> countries_name, <span class="keyword">ROUND</span>(countries_gdp/countries_population, <span class="number">2</span>) per_capitaGDP</span><br><span class="line"><span class="keyword">FROM</span> COMP4039.countries</span><br><span class="line"><span class="keyword">WHERE</span> countries_area &gt;= <span class="number">20000</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> per_capitaGDP <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 6. Shows the names of countries that have a land mass in between 100,000 km2 and 200,000 km2.</span></span><br><span class="line"><span class="keyword">SELECT</span> countries_name</span><br><span class="line"><span class="keyword">FROM</span> COMP4039.countries</span><br><span class="line"><span class="keyword">WHERE</span> countries_area <span class="keyword">BETWEEN</span> <span class="number">100000</span> <span class="keyword">AND</span> <span class="number">200000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 7. Shows the names of countries that start with the letter‘M’.</span></span><br><span class="line"><span class="keyword">SELECT</span> countries_name</span><br><span class="line"><span class="keyword">FROM</span> COMP4039.countries</span><br><span class="line"><span class="keyword">WHERE</span> countries_name <span class="keyword">LIKE</span> <span class="string">&#x27;M%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 8. Lists the names of countries that end with‘...land’.</span></span><br><span class="line"><span class="keyword">SELECT</span> countries_name</span><br><span class="line"><span class="keyword">FROM</span> COMP4039.countries</span><br><span class="line"><span class="keyword">WHERE</span> countries_name <span class="keyword">LIKE</span> <span class="string">&#x27;%land&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 9. The name of the country is the same as the name of the capital.</span></span><br><span class="line"><span class="keyword">SELECT</span> countries_name</span><br><span class="line"><span class="keyword">FROM</span> COMP4039.countries</span><br><span class="line"><span class="keyword">WHERE</span> countries_name=countries_capital;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 10. Total population of all of the countries.</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUM</span>(countries_population)</span><br><span class="line"><span class="keyword">FROM</span> COMP4039.countries;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 11. Find the number of countries that have a total land mass of at least 500,000.</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">num</span></span><br><span class="line"><span class="keyword">FROM</span> COMP4039.countries</span><br><span class="line"><span class="keyword">WHERE</span> countries_area &gt;= <span class="number">500000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 12. Show the countries which have a per capita GDP more than that of Poland, in descending order of wealth.</span></span><br><span class="line"><span class="keyword">SELECT</span> countries_name, countries_gdp/countries_population</span><br><span class="line"><span class="keyword">FROM</span> COMP4039.countries</span><br><span class="line"><span class="keyword">WHERE</span> countries_gdp/countries_population &gt; (<span class="keyword">SELECT</span> countries_gdp/countries_population</span><br><span class="line">                                            <span class="keyword">FROM</span> COMP4039.countries</span><br><span class="line">                                            <span class="keyword">WHERE</span> countries_name=<span class="string">&#x27;Poland&#x27;</span>)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> countries_gdp/countries_population <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>UoN</category>
      </categories>
      <tags>
        <tag>COMP4039-DB&amp;WebInterface Design</tag>
      </tags>
  </entry>
  <entry>
    <title>Public Speaking Weekly Topics</title>
    <url>/2019/11/06/Public-Speaking-Weekly-Topics/</url>
    <content><![CDATA[<blockquote>
<p>In this page, I’d like to share the topic lists of Public Speaking Society and my presentation.</p>
</blockquote>
<h1 id="1-Topics"><a href="#1-Topics" class="headerlink" title="1. Topics"></a>1. Topics</h1><ul>
<li>Money or love ?</li>
<li>There is no such thing as ‘luck’.</li>
<li>Social media is the 21th century’s most harmful drug.</li>
<li>How do lazy students survive/succeed in life ?</li>
</ul>
<a id="more"></a>

<h2 id="1-1-How-do-lazy-students-survive-succeed-in-life"><a href="#1-1-How-do-lazy-students-survive-succeed-in-life" class="headerlink" title="1.1. How do lazy students survive/succeed in life ?"></a>1.1. How do lazy students survive/succeed in life ?</h2><p><img src="lazy.png" alt="How do lazy students survive/succeed in life ?"></p>
<h1 id="2-Topics"><a href="#2-Topics" class="headerlink" title="2. Topics"></a>2. Topics</h1><ul>
<li>Pain and suffering are always inevitable for a large intelligence and a deep heart.</li>
<li>What horrifies me the most is the idea of being useless.</li>
<li>First thing you’d do if you won the lottery.</li>
<li>Tell us about one childhood memory that is special to you.</li>
<li>Pick your own topic: “Books or Videos”.</li>
</ul>
<h2 id="2-1-Books-or-Videos"><a href="#2-1-Books-or-Videos" class="headerlink" title="2.1. Books or Videos"></a>2.1. Books or Videos</h2><p><img src="BooksorVideos.png" alt="Books or Videos"></p>
<h1 id="3-Topics"><a href="#3-Topics" class="headerlink" title="3. Topics"></a>3. Topics</h1><ul>
<li>Where do you see yourself in 10 years ?</li>
<li>If you could make one animal fly, what would it be ?</li>
<li>A journey of a thousand miles begins with a step.</li>
<li>Should you read the book or watch the movie ?</li>
</ul>
<h2 id="3-1-Where-do-you-see-yourself-in-10-years"><a href="#3-1-Where-do-you-see-yourself-in-10-years" class="headerlink" title="3.1. Where do you see yourself in 10 years ?"></a>3.1. Where do you see yourself in 10 years ?</h2><p><img src="see-yourself-in-10-years.png" alt="Where do you see yourself in 10 years ?"></p>
<h1 id="4-Topics"><a href="#4-Topics" class="headerlink" title="4. Topics"></a>4. Topics</h1><ul>
<li>Quincy Jones - Make a life not a living - (try motivational)</li>
<li>Never be smaller than you are. (try personal)</li>
</ul>
<h2 id="4-1-Make-a-life-not-a-living"><a href="#4-1-Make-a-life-not-a-living" class="headerlink" title="4.1 Make a life not a living"></a>4.1 Make a life not a living</h2><p><img src="lifeVSliving.png" alt="Make a life not a living"></p>
<h1 id="5-Topics-Tell-story"><a href="#5-Topics-Tell-story" class="headerlink" title="5. Topics(Tell story)"></a>5. Topics(Tell story)</h1><ul>
<li>A leopard can’t change its spots.</li>
<li>Every saint has a past, and every sinner has a future.</li>
<li>Awareness in itself is healing.</li>
<li>Do aliens exist?</li>
</ul>
<h2 id="5-1-A-leopard-can’t-change-its-spots"><a href="#5-1-A-leopard-can’t-change-its-spots" class="headerlink" title="5.1 A leopard can’t change its spots."></a>5.1 A leopard can’t change its spots.</h2><p><img src="WhatCanChange.png" alt="A leopard can&#39;t change its spots."></p>
<h1 id="6-Topics"><a href="#6-Topics" class="headerlink" title="6. Topics"></a>6. Topics</h1><ul>
<li>Where is the best place you’ve ever travelled to ?</li>
<li>Enmotional intelligence is more important than academic intelligence.</li>
<li>Is world peace achievable ?</li>
<li>My dream Christmas would look like…</li>
</ul>
<h2 id="6-1-Enmotional-intelligence-is-more-important-than-academic-intelligence"><a href="#6-1-Enmotional-intelligence-is-more-important-than-academic-intelligence" class="headerlink" title="6.1 Enmotional intelligence is more important than academic intelligence."></a>6.1 Enmotional intelligence is more important than academic intelligence.</h2><p><img src="EQVsIQ.png" alt="Enmotional intelligence is more important than academic intelligence."></p>
<h1 id="7-Topics"><a href="#7-Topics" class="headerlink" title="7. Topics"></a>7. Topics</h1><ul>
<li>Are the Grammys a pointless exercise ?</li>
<li>Is New Year’s resolution a good thing ?</li>
<li>Should the Christmas Holidays be longer ?</li>
<li>One thing I look forward to this term ?</li>
</ul>
<h2 id="7-1-Is-New-Year’s-resolution-a-good-thing"><a href="#7-1-Is-New-Year’s-resolution-a-good-thing" class="headerlink" title="7.1. Is New Year’s resolution a good thing ?"></a>7.1. Is New Year’s resolution a good thing ?</h2><p><img src="NewYearsResolutions.png" alt="Is New Year&#39;s resolution a good thing ?"></p>
<h1 id="8-Topics"><a href="#8-Topics" class="headerlink" title="8. Topics"></a>8. Topics</h1><ul>
<li>Your favourite game !</li>
<li>Best way to celebrate your birthday :)</li>
<li>What advice would you give to your younger self ?</li>
<li>Who is the most important person in your life and why?</li>
</ul>
<h2 id="8-1-What-advice-would-you-give-to-your-younger-self"><a href="#8-1-What-advice-would-you-give-to-your-younger-self" class="headerlink" title="8.1. What advice would you give to your younger self ?"></a>8.1. What advice would you give to your younger self ?</h2><p><img src="AdviceToYoungerSelf.png" alt="What advice would you give to your younger self ?"></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>Public Speaking</category>
      </categories>
      <tags>
        <tag>topics</tag>
      </tags>
  </entry>
  <entry>
    <title>PM111 Speaking Skills</title>
    <url>/2019/11/17/PM111-Speaking-Skills/</url>
    <content><![CDATA[<h1 id="1-Big-Cities"><a href="#1-Big-Cities" class="headerlink" title="1. Big Cities"></a>1. Big Cities</h1><a id="more"></a>

<h2 id="1-1-PART-1-1-min"><a href="#1-1-PART-1-1-min" class="headerlink" title="1.1. PART 1 (1 min)"></a>1.1. PART 1 (1 min)</h2><blockquote>
<p>Examiner: My name is (examiner’s name) and I will be asking you some questions. Now, in this first part, I’d like to ask you a question about the topic of the community.</p>
</blockquote>
<ul>
<li>What is the local community like where you come from?<br><img src="localcommunity.png"></li>
</ul>
<h2 id="1-2-PART-2-4-mins"><a href="#1-2-PART-2-4-mins" class="headerlink" title="1.2. PART 2 (4 mins)"></a>1.2. PART 2 (4 mins)</h2><blockquote>
<p>Examiner: I will give you a card with an opinion based on the topic of the community, and you will have to say how far you agree or disagree.  You have to talk about this for 2 minutes. You have 2 minutes to think about what you are going to say and make some notes. You can choose whether to use the prompts on the card or your own ideas and you can ask me about vocabulary on the card if you want to. Okay?</p>
</blockquote>
<ol>
<li>Give the candidate 2 minutes to read the task card and prepare for their monologue – they may make notes.</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Statement:</span><br><span class="line">Many people around the world move from villages in the country to large cities.</span><br><span class="line">However, cities are impersonal places with no sense of community and people who live in them for long periods become more antisocial and selfish.  </span><br><span class="line"></span><br><span class="line">Think about (optional):</span><br><span class="line">  • Country life</span><br><span class="line">  • Housing</span><br><span class="line">  • Modern lifestyles</span><br><span class="line"></span><br><span class="line">Question:</span><br><span class="line">How far do you agree or disagree?</span><br><span class="line">Use examples and evidence to support your opinion.</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>After 2 minutes, prompt the candidate to begin<br>Examiner: Alright?  You have 2 minutes for this. I will take some notes while you are speaking and I’ll tell you when the time is up.  Can you start speaking now please?<br><img src="villageTocity.png"></p>
</li>
<li><p>Candidate speaks. Stop the candidate after 2 minutes.<br>Examiner: Thank you, now we will move on to part 3 of the examination.</p>
</li>
</ol>
<h2 id="1-3-PART-3-3-4-mins"><a href="#1-3-PART-3-3-4-mins" class="headerlink" title="1.3. PART 3 (3-4 mins)"></a>1.3. PART 3 (3-4 mins)</h2><blockquote>
<p>Ask the candidate one follow-up question based on the content of their monologue.</p>
</blockquote>
<ol>
<li>Examiner: I would like to ask you some further questions about the points you made in your talk.<ul>
<li>You said that…. Why do you think this is true?</li>
<li>I didn’t follow what you said about…?  Could you go over that again, please?</li>
<li>Why do you believe that …. is the most important concern?</li>
</ul>
</li>
</ol>
<ol start="2">
<li>Additional questions for building a discussion. Ask the candidate two questions:<ol>
<li>For what different reasons do people move to live in cities?<ul>
<li>career development</li>
<li>education of children</li>
<li>comprehensive public facilities(living quality)</li>
</ul>
</li>
<li>How is life different in small rural communities compared to cities?<ul>
<li>slow</li>
<li>peace</li>
<li>natural</li>
</ul>
</li>
<li>What is your definition of a good neighbour?<ul>
<li>friendly / Nice</li>
<li>help with each other</li>
<li>Respect your neighbours and their property</li>
<li>Don’t block stairways or entries</li>
<li>Be a responsible pet owner</li>
<li>Don’t make excessive noise</li>
<li>Try and resolve issues with your neighbours directly first</li>
</ul>
</li>
<li>Do you think there can be a sense of community in the city? Why/ why not?<ul>
<li>Yes; sense of belonging</li>
<li>social activities</li>
<li>social welfare</li>
<li>reasonable price of commodities</li>
<li>health insurance</li>
<li>retirement protection</li>
</ul>
</li>
</ol>
</li>
</ol>
<ol start="3">
<li>After 4 minutes (maximum)<br>Examiner: Thank you. That is the end of the examination.<br>Collect all exam papers/notes from the candidate.</li>
</ol>
<h1 id="2-Water-and-Migration"><a href="#2-Water-and-Migration" class="headerlink" title="2. Water and Migration"></a>2. Water and Migration</h1><h2 id="2-1-PART-1-1-min"><a href="#2-1-PART-1-1-min" class="headerlink" title="2.1. PART 1 (1 min)"></a>2.1. PART 1 (1 min)</h2><ul>
<li>Which are the most important natural resources, and why?<br><img src="MostImportantNaturalResources.png"></li>
</ul>
<h2 id="2-2-PART-2-4-mins"><a href="#2-2-PART-2-4-mins" class="headerlink" title="2.2. PART 2 (4 mins)"></a>2.2. PART 2 (4 mins)</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Statement:</span><br><span class="line">Water is the most basic essential of life and, if it is limited or expensive to provide in certain parts of the world, then people should be encouraged to relocate and settle in places where water is more plentiful.</span><br><span class="line"></span><br><span class="line">Think about (optional):</span><br><span class="line">  • Threat to lives</span><br><span class="line">  • Personal history</span><br><span class="line">  • Cost of alternative</span><br><span class="line"></span><br><span class="line">Question:</span><br><span class="line">How far do you agree or disagree?</span><br><span class="line">Use examples and evidence to support your opinion.</span><br></pre></td></tr></table></figure>
<p><img src="WaterLimitRelocation.png"></p>
<h2 id="2-3-PART-3-3-4-mins"><a href="#2-3-PART-3-3-4-mins" class="headerlink" title="2.3. PART 3 (3-4 mins)"></a>2.3. PART 3 (3-4 mins)</h2><ol>
<li>How important is the natural resource of oil these days?</li>
<li>Is it okay to damage the environment in order to extract natural resources (Why/ why not?)</li>
<li>Which natural resources do you think will be the most important in the future?</li>
<li>Why do natural resources sometimes cause disagreements and conflicts between countries?</li>
</ol>
<h1 id="3-Tourism"><a href="#3-Tourism" class="headerlink" title="3. Tourism"></a>3. Tourism</h1><h2 id="3-1-PART-1-1-min"><a href="#3-1-PART-1-1-min" class="headerlink" title="3.1. PART 1 (1 min)"></a>3.1. PART 1 (1 min)</h2><ul>
<li>Why do so many people want to travel abroad these days?</li>
</ul>
<h2 id="3-2-PART-2-4-mins"><a href="#3-2-PART-2-4-mins" class="headerlink" title="3.2. PART 2 (4 mins)"></a>3.2. PART 2 (4 mins)</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Statement:</span><br><span class="line">Tourists can see and experience much more of the world if they make foreign friends and go to visit them.</span><br><span class="line">Travel agents, hotels and package holidays can never offer this kind of experience.</span><br><span class="line"></span><br><span class="line">Think about (optional):</span><br><span class="line">  •	Culture</span><br><span class="line">  •	Organisation</span><br><span class="line">  •	Cost</span><br><span class="line"></span><br><span class="line">Question:</span><br><span class="line">How far do you agree or disagree?</span><br><span class="line">Use examples and evidence to support your opinion.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="3-3-PART-3-3-4-mins"><a href="#3-3-PART-3-3-4-mins" class="headerlink" title="3.3. PART 3 (3-4 mins)"></a>3.3. PART 3 (3-4 mins)</h2><ol>
<li>What are the dangers of travelling independently in foreign countries?</li>
<li>Do you think tourist visas should be more difficult to obtain? (Why/ why not?)</li>
<li>How is the experience of travelling different if you try and speak the language of the country you are visiting?</li>
<li>Why do you think local people in certain places can be hostile to tourists?</li>
</ol>
<h1 id="4-Waste-and-Pollution"><a href="#4-Waste-and-Pollution" class="headerlink" title="4. Waste and Pollution"></a>4. Waste and Pollution</h1><h2 id="4-1-PART-1-1-min"><a href="#4-1-PART-1-1-min" class="headerlink" title="4.1. PART 1 (1 min)"></a>4.1. PART 1 (1 min)</h2><ul>
<li>What can people do to help protect the environment?</li>
</ul>
<h2 id="4-2-PART-2-4-mins"><a href="#4-2-PART-2-4-mins" class="headerlink" title="4.2. PART 2 (4 mins)"></a>4.2. PART 2 (4 mins)</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Statement:</span><br><span class="line">People all over the world produce waste and other pollution carelessly.</span><br><span class="line">They seem unaware of the harm they cause and there are no rules to make offenders deal with the damage to the environment.</span><br><span class="line"></span><br><span class="line">Think about (optional):</span><br><span class="line">  •	Responsibility</span><br><span class="line">  •	Environmental problems</span><br><span class="line">  •	Consequences of pollution</span><br><span class="line"></span><br><span class="line">Question:</span><br><span class="line">How far do you agree or disagree?</span><br><span class="line">Use examples and evidence to support your opinion.</span><br></pre></td></tr></table></figure>

<h2 id="4-3-PART-3-3-4-mins"><a href="#4-3-PART-3-3-4-mins" class="headerlink" title="4.3. PART 3 (3-4 mins)"></a>4.3. PART 3 (3-4 mins)</h2><ol>
<li>How can careless attitudes to pollution affect the future of children?</li>
<li>Why aren’t some countries able to manage pollution control more effectively?</li>
<li>What do you think are the most important steps to take to protect the environment?</li>
<li>Do you think that fining people who produce pollution would be an effective solution to the problem?</li>
</ol>
<h1 id="5-Technology-and-internet"><a href="#5-Technology-and-internet" class="headerlink" title="5. Technology and internet"></a>5. Technology and internet</h1><h2 id="5-1-PART-1-1-min"><a href="#5-1-PART-1-1-min" class="headerlink" title="5.1. PART 1 (1 min)"></a>5.1. PART 1 (1 min)</h2><ul>
<li>In what different ways can the internet be useful?<br><img src="InternetUseful.png"></li>
<li>Some useful ideas: <a href="http://www.klientsolutech.com/uses-of-internet-in-our-daily-life-everyday-internet/">Everyday Internet Impact</a><ol>
<li>Uses of the Internet in Students daily life</li>
<li>Uses of the Internet to increase the speed of daily tasks</li>
<li>Uses of the Internet for business promotion and innovation</li>
<li>Uses of the Internet for shopping  in our daily life</li>
<li>Use of the Internet for research and development</li>
<li>Use of the Internet provide us quick and free communication</li>
<li>International uses of the Internet by working remotely and providing business services</li>
<li>Uses of the Internet in Money Management</li>
<li>Uses of the Internet in Everyday Politics</li>
<li>Uses of the Internet for Teaching and Sharing Knowledge with others</li>
<li>Solving the problems of others by the use of internet</li>
<li>Uses of the Internet in Cashless Economy</li>
<li>Uses of the Internet in environmental development</li>
<li>Uses of internet for parents</li>
<li>Uses of Internet in Tour and Travel</li>
<li>Government policies and schemes are easily accessible by the use of the Internet</li>
<li>Invention Engine</li>
</ol>
</li>
</ul>
<h2 id="5-2-PART-2-4-mins"><a href="#5-2-PART-2-4-mins" class="headerlink" title="5.2. PART 2 (4 mins)"></a>5.2. PART 2 (4 mins)</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Statement</span><br><span class="line">Technology has taken over so many aspects of our lives that many older pepople, who are ofen suspicious of technology such as the internet are missing out on the advantages of modern world.</span><br><span class="line"></span><br><span class="line">Think about (optional):</span><br><span class="line">  • Information</span><br><span class="line">  • Communication</span><br><span class="line">  • Choice</span><br><span class="line"></span><br><span class="line">Question:</span><br><span class="line">How far do you agree or disagree?</span><br><span class="line">Use examples and evidence to support your opinion.</span><br></pre></td></tr></table></figure>
<p><img src="techAndInternet.png"></p>
<h2 id="5-3-PART-3-3-4-mins"><a href="#5-3-PART-3-3-4-mins" class="headerlink" title="5.3. PART 3 (3-4 mins)"></a>5.3. PART 3 (3-4 mins)</h2><ol>
<li>What do you think is the greatest advantage the internet has brought?(Why?)</li>
</ol>
<ul>
<li>Globalization<ul>
<li>share ideas all over the world (creative)</li>
<li>multiculture: learn different culture from other country</li>
<li>global economy</li>
</ul>
</li>
</ul>
<ol start="2">
<li>Do you think technology has helped to improve people’s lives?(Why / Why not?)</li>
</ol>
<ul>
<li>Yes<ul>
<li>washing machine</li>
<li>public transportation</li>
<li>computer(AI)</li>
</ul>
</li>
</ul>
<h1 id="6"><a href="#6" class="headerlink" title="6."></a>6.</h1><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>TUNIC</category>
      </categories>
      <tags>
        <tag>PM111 English for Academic Purposes</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - Theme 10 RegExp</title>
    <url>/2020/09/30/Python-Theme-10-RegExp/</url>
    <content><![CDATA[<h1 id="1-基本知识"><a href="#1-基本知识" class="headerlink" title="1. 基本知识"></a>1. 基本知识</h1><p>字符串是编程时涉及到的最多的一种数据结构。正则表达式正是一种用来匹配字符串的强有力的武器。它的设计思想是用一种描述性语言来给字符串定义一个规则，用来验证是否匹配。</p>
<h1 id="2-进阶知识"><a href="#2-进阶知识" class="headerlink" title="2. 进阶知识"></a>2. 进阶知识</h1><p>[0-9a-zA-Z_] : 可以匹配一个数字、字母、下划线；<br>[0-9a-zA-Z_]+ : 可以匹配至少由一个数字、字母、下划线组成的字符串；<br>[a-zA-Z_] [0-9a-zA-Z_] : 可以匹配由字母数字下划线开头，后面至少由一个数字、字母、下划线组成的字符串，即: Python的合法变量；<br>(P|p)ython : 表示Python 或 python<br>^: 开始符，表示行的开头<br>$: 结束符，表示行的结束</p>
<a id="more"></a>

<h1 id="3-re模块"><a href="#3-re模块" class="headerlink" title="3. re模块"></a>3. re模块</h1><p>Python提供re模块，包含了所有正则表达式的功能</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> re</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.match(<span class="string">r&#x27;^\d&#123;3&#125;\-\d&#123;3,8&#125;&#x27;</span>, <span class="string">&#x27;010-12345&#x27;</span>) <span class="comment">#匹配成功返回一个Match对象</span></span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">9</span>), match=<span class="string">&#x27;010-12345&#x27;</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.match(<span class="string">r&#x27;^\d&#123;3&#125;\-\d&#123;3,8&#125;&#x27;</span>, <span class="string">&#x27;010 12345&#x27;</span>) <span class="comment">#匹配失败返回None</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<p>常见应用</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test = <span class="string">&#x27;用户输入的字符串&#x27;</span></span><br><span class="line"><span class="keyword">if</span> re.match(<span class="string">r&#x27;正则表达式&#x27;</span>, test):</span><br><span class="line">    print(<span class="string">&#x27;ok&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&#x27;failed&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h1 id="4-切分字符串"><a href="#4-切分字符串" class="headerlink" title="4. 切分字符串"></a>4. 切分字符串</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;a b   c&#x27;</span>.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.split(<span class="string">r&#x27;\s+&#x27;</span>, <span class="string">&#x27;a b  c&#x27;</span>)</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.split(<span class="string">r&#x27;[\s\,]+&#x27;</span>, <span class="string">&#x27;a,b c  d&#x27;</span>)</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]</span><br></pre></td></tr></table></figure>

<h1 id="5-分组"><a href="#5-分组" class="headerlink" title="5. 分组"></a>5. 分组</h1><p>正则表达式还具有提取子串的强大功能。()表示要提取的Group。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#提取区号和本地号码</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m = re.match(<span class="string">r&#x27;^(\d&#123;3&#125;)-(\d&#123;3,8&#125;)$&#x27;</span>, <span class="string">&#x27;010-12345&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">9</span>), match=<span class="string">&#x27;010-12345&#x27;</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m.group(<span class="number">0</span>)</span><br><span class="line"><span class="string">&#x27;010-12345&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m.group(<span class="number">1</span>)</span><br><span class="line"><span class="string">&#x27;010&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m.group(<span class="number">2</span>)</span><br><span class="line"><span class="string">&#x27;12345&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m.group()</span><br><span class="line"><span class="string">&#x27;010-12345&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m.groups()</span><br><span class="line">(<span class="string">&#x27;010&#x27;</span>, <span class="string">&#x27;12345&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h1 id="6-贪婪匹配"><a href="#6-贪婪匹配" class="headerlink" title="6. 贪婪匹配"></a>6. 贪婪匹配</h1><p>正则表达式会尽可能多的匹配字符</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.match(<span class="string">r&#x27;^(\d+)(0*)$&#x27;</span>, <span class="string">&#x27;102300&#x27;</span>).groups()</span><br><span class="line">(<span class="string">&#x27;102300&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.match(<span class="string">r&#x27;^(\d+?)(0*)$&#x27;</span>, <span class="string">&#x27;102300&#x27;</span>).groups() <span class="comment">#贪婪符后面放置&#x27;?&#x27;，采用了非贪婪匹配</span></span><br><span class="line">(<span class="string">&#x27;1023&#x27;</span>, <span class="string">&#x27;00&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h1 id="7-编译"><a href="#7-编译" class="headerlink" title="7. 编译"></a>7. 编译</h1><p>当需要大量重复的使用正则表达式时，可以采用预编译方式，提升效率</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>re_telephone = re.compile(<span class="string">r&#x27;^(\d&#123;3&#125;)-(\d&#123;3,8&#125;)$&#x27;</span>) <span class="comment">#编译</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re_telephone.match(<span class="string">&#x27;010-12345&#x27;</span>).groups()</span><br><span class="line">(<span class="string">&#x27;010&#x27;</span>, <span class="string">&#x27;12345&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re_telephone.match(<span class="string">&#x27;010 12345&#x27;</span>).groups() <span class="comment">#不合法，会报错</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">AttributeError: <span class="string">&#x27;NoneType&#x27;</span> object has no attribute <span class="string">&#x27;groups&#x27;</span></span><br></pre></td></tr></table></figure>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>Computer Science</category>
      </categories>
      <tags>
        <tag>Python Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - Theme 12 virtualenv</title>
    <url>/2020/10/04/Python-Theme-12-virtualenv/</url>
    <content><![CDATA[<blockquote>
<p>在使用Python时候，不同的应用程序所需要的包都会被pip安装在Python的site-package目录下。长久以来会造成管理的混乱，甚至冲突。因此virtualenv是在基于系统的python之上，创建一套虚拟环境，因此来实现每个应用可以独自拥有一套自己的python环境。</p>
</blockquote>
<h1 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">➜  ~pip3 install virtualenv</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h1 id="2-创建一个独立的Python环境"><a href="#2-创建一个独立的Python环境" class="headerlink" title="2. 创建一个独立的Python环境"></a>2. 创建一个独立的Python环境</h1><ul>
<li>为了区分可以为起不同标识的名字</li>
<li>–no-site-packages表示不会将已经安装到系统中的第三方包复制过来</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">➜  ~virtualenv --no-site-packages venv3<span class="number">.7</span></span><br></pre></td></tr></table></figure>

<h1 id="3-使用此环境"><a href="#3-使用此环境" class="headerlink" title="3. 使用此环境"></a>3. 使用此环境</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">➜  ~source venv3<span class="number">.7</span>/bin/activate</span><br><span class="line">(venv3<span class="number">.7</span>) ➜  ~</span><br></pre></td></tr></table></figure>

<h1 id="4-退出环境"><a href="#4-退出环境" class="headerlink" title="4. 退出环境"></a>4. 退出环境</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(venv3<span class="number">.7</span>) ➜  ~ deactivate</span><br><span class="line">➜  ~</span><br></pre></td></tr></table></figure>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>Computer Science</category>
      </categories>
      <tags>
        <tag>Python Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - Theme 1 Basic</title>
    <url>/2019/11/17/Python-Theme-1-Basic/</url>
    <content><![CDATA[<h1 id="0-介绍"><a href="#0-介绍" class="headerlink" title="0. 介绍"></a>0. 介绍</h1><blockquote>
<p>Python版本: 3.X</p>
</blockquote>
<ul>
<li>Python是一门高级计算机编程语言，简单易用。</li>
<li>Python的哲学就是 <strong>简单优雅</strong>。Python为我们提供了非常完善的基础代码库，例如：网络、文件、GUI、数据库等大量内容，而且还有极其丰富的第三方库，使用极其方便、<strong>不用重复造轮子</strong>。国内外许多大型网站都是用Python写的，比如YouTube、Instagram、豆瓣等等，Google也在大量的使用此语言。</li>
</ul>
<a id="more"></a>

<h2 id="0-1-适用场景"><a href="#0-1-适用场景" class="headerlink" title="0.1. 适用场景"></a>0.1. 适用场景</h2><ul>
<li>网站后台</li>
<li>网络应用</li>
<li>自动化工具</li>
<li>科学计算(人工智能)</li>
<li>把其他语言包装起来(<strong>胶水语言</strong>)</li>
</ul>
<h2 id="0-2-不适用场景"><a href="#0-2-不适用场景" class="headerlink" title="0.2. 不适用场景"></a>0.2. 不适用场景</h2><ul>
<li>操作系统</li>
<li>移动应用</li>
<li>3D游戏开发</li>
</ul>
<h2 id="0-3-缺点"><a href="#0-3-缺点" class="headerlink" title="0.3. 缺点"></a>0.3. 缺点</h2><ul>
<li>解释型语言，相对较慢(C语言)</li>
<li>没法加密(源码)</li>
</ul>
<h1 id="一、Python基础"><a href="#一、Python基础" class="headerlink" title="一、Python基础"></a>一、Python基础</h1><h2 id="1-输入与输出-IO"><a href="#1-输入与输出-IO" class="headerlink" title="1. 输入与输出(IO)"></a>1. 输入与输出(IO)</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">PyDev console: starting.</span><br><span class="line">Python <span class="number">3.6</span><span class="number">.3</span> (default, Nov <span class="number">24</span> <span class="number">2017</span>, <span class="number">21</span>:<span class="number">27</span>:<span class="number">36</span>)</span><br><span class="line">[GCC <span class="number">4.2</span><span class="number">.1</span> Compatible Apple LLVM <span class="number">9.0</span><span class="number">.0</span> (clang<span class="number">-900.0</span><span class="number">.38</span>)] on darwin</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>name = input(<span class="string">&#x27;Please enter your name:&#x27;</span>)</span><br><span class="line">&gt;&gt;&gt; Please enter your name:&gt;? Aaron</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">&#x27;Hello&#x27;</span>, name)</span><br><span class="line">Hello Aaron</span><br></pre></td></tr></table></figure>

<h2 id="2-Python编写规范"><a href="#2-Python编写规范" class="headerlink" title="2. Python编写规范"></a>2. Python编写规范</h2><blockquote>
<p>Python使用 <strong>缩进</strong> 来组织代码块的，一般约定俗成 <strong>4个空格</strong>。大小写敏感，**#** 为注释。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="number">6</span></span><br><span class="line"><span class="keyword">if</span> a &lt; <span class="number">0</span>:</span><br><span class="line">    print(-a)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(a)</span><br></pre></td></tr></table></figure>

<h2 id="3-数据类型和变量"><a href="#3-数据类型和变量" class="headerlink" title="3. 数据类型和变量"></a>3. 数据类型和变量</h2><blockquote>
<p>计算机不止能处理数据，还能处理文本、音频、视频、图形等等，因此产生了不同的数据类型。</p>
</blockquote>
<h3 id="1-整数"><a href="#1-整数" class="headerlink" title="(1).整数"></a>(1).整数</h3><blockquote>
<p>Python中的整数没有大小限制</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">100</span>,<span class="number">0x1f</span>)</span><br><span class="line"><span class="number">-1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">100</span> <span class="number">31</span></span><br></pre></td></tr></table></figure>
<h3 id="2-浮点数"><a href="#2-浮点数" class="headerlink" title="(2).浮点数"></a>(2).浮点数</h3><blockquote>
<p>浮点数就是小数，之所以称为浮点数是因为在科学计数法的情况下，可以随意的变动小数点的位置从而改变指数。整数运算是精确的，而浮点数运算是不精确的(四舍五入)。浮点数也没有大小限制，但是超过一定的大小就会inf(无限大)。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="number">1.23</span>,<span class="number">10</span>**<span class="number">2</span>,<span class="number">10e1</span>,<span class="number">10e2</span>,<span class="number">1.2e-2</span>)</span><br><span class="line"><span class="number">1.23</span> <span class="number">100</span> <span class="number">100.0</span> <span class="number">1000.0</span> <span class="number">0.012</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="number">1e1000</span>)</span><br><span class="line">inf</span><br></pre></td></tr></table></figure>
<h3 id="3-字符串"><a href="#3-字符串" class="headerlink" title="(3).字符串"></a>(3).字符串</h3><blockquote>
<p>注意单引号、双引号、转义号</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;print(<span class="string">&#x27;abc&#x27;</span>)</span><br><span class="line">abc</span><br><span class="line">&gt;&gt;&gt;print(<span class="string">&quot;abc&quot;</span>)</span><br><span class="line">abc</span><br><span class="line">&gt;&gt;&gt;print(<span class="string">&#x27;ab\nc&#x27;</span>)</span><br><span class="line">ab</span><br><span class="line">c</span><br><span class="line">&gt;&gt;&gt;print(<span class="string">&#x27;I\&#x27;m \&quot;ok\&quot; \&#x27;!\&#x27;&#x27;</span>)</span><br><span class="line">I<span class="string">&#x27;m &quot;ok&quot; &#x27;</span>!<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;print(&#x27;</span>a\\<span class="string">b&#x27;)</span></span><br><span class="line"><span class="string">a\b</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;print(r&#x27;</span>a\\<span class="string">b&#x27;)</span></span><br><span class="line"><span class="string">a\\b</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;print(&#x27;</span><span class="string">&#x27;&#x27;</span>line1</span><br><span class="line">line2</span><br><span class="line">line3<span class="string">&#x27;&#x27;&#x27;)</span></span><br><span class="line"><span class="string">line1</span></span><br><span class="line"><span class="string">line2</span></span><br><span class="line"><span class="string">line3</span></span><br></pre></td></tr></table></figure>

<h3 id="4-布尔值"><a href="#4-布尔值" class="headerlink" title="(4).布尔值"></a>(4).布尔值</h3><blockquote>
<p>与(and) 或(or) 非(not)运算</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="literal">True</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line">&gt;&gt;&gt;<span class="literal">False</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line">&gt;&gt;&gt;<span class="number">3</span> &gt; <span class="number">2</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line">&gt;&gt;&gt;<span class="number">3</span> &lt; <span class="number">2</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">not</span> <span class="number">3</span> &gt; <span class="number">2</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">not</span> <span class="number">3</span> &lt; <span class="number">2</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line">&gt;&gt;&gt;<span class="literal">True</span> <span class="keyword">or</span> <span class="literal">False</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line">&gt;&gt;&gt;<span class="literal">True</span> <span class="keyword">and</span> <span class="literal">False</span></span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure>

<h3 id="5-空值"><a href="#5-空值" class="headerlink" title="(5).空值"></a>(5).空值</h3><blockquote>
<p><strong>0</strong> 是有意义的，<strong>None</strong> 是一个特殊的空值</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;print(<span class="literal">None</span>)</span><br><span class="line"><span class="literal">None</span></span><br><span class="line">&gt;&gt;&gt;print(<span class="number">0</span>)</span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure>

<h3 id="6-变量"><a href="#6-变量" class="headerlink" title="(6).变量"></a>(6).变量</h3><blockquote>
<p>Python是 <strong>动态语言</strong>，使用变量前无需声明变量类型。而Java是静态语言，需要提前声明。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;a = <span class="string">&#x27;ABC&#x27;</span></span><br><span class="line">&gt;&gt;&gt;b = a</span><br><span class="line">&gt;&gt;&gt;a = <span class="string">&#x27;XYZ&#x27;</span></span><br><span class="line">&gt;&gt;&gt;print(b)</span><br><span class="line">ABC</span><br></pre></td></tr></table></figure>

<h3 id="7-常量"><a href="#7-常量" class="headerlink" title="(7).常量"></a>(7).常量</h3><blockquote>
<p>用全部 <strong>大写的变量名表示常量</strong> 是一个惯用的手法。**”//“ 地板除** 永远是整数。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;PI = <span class="number">3.1415926</span></span><br><span class="line">&gt;&gt;&gt;<span class="number">9</span> / <span class="number">3</span></span><br><span class="line"><span class="number">3.0</span></span><br><span class="line">&gt;&gt;&gt;<span class="number">9</span> // <span class="number">3</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line">&gt;&gt;&gt;<span class="number">9</span> % <span class="number">3</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line">&gt;&gt;&gt;<span class="number">10</span> / <span class="number">3</span></span><br><span class="line"><span class="number">3.3333333333333335</span></span><br><span class="line">&gt;&gt;&gt;<span class="number">10</span> // <span class="number">3</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line">&gt;&gt;&gt;<span class="number">11</span> // <span class="number">3</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line">&gt;&gt;&gt;<span class="number">10</span> % <span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>

<h2 id="4-字符串和编码"><a href="#4-字符串和编码" class="headerlink" title="4. 字符串和编码"></a>4. 字符串和编码</h2><p>计算机是美国🇺🇸发明的，因此最开始的ASCII码只有127个字符字母被编辑到计算机内(大小写字母、标点符号等)。后来各个国家也加入了自己语言的相应编码，例如：中国(GB2312)、日本(Shift_JIS)等，这样一来各个国家的编码会出现不可避免的冲突，在一些有各个国家语言的文本里，就会出现乱码显示。<br>因此Unicode油然而生，他将所有的语言都统一到了一种编码方式中。ASCII编码常用1个字节，Unicode常用2个字节。这样新的问题就诞生了，如果全是英文的文本中，文本所占用的空间就会比原本的多两倍。因此后来又诞生了可变长度的：UTF-8。<br>计算机系统通用的字符编码方式：在计算机内存中，使用Unicode的编码方式，在保存到硬盘或者传输的过程中，使用UTF-8。<br>UTF-8 的一个缺点：计算字符串长度和查找子字符串非常没效率。</p>
<ul>
<li>使用记事本：用记事本编辑的时候，从文件读取的UTF-8字符被转换为Unicode字符到内存里，编辑完成后，保存的时候再把Unicode转换为UTF-8保存到文件。</li>
<li>浏览网页：服务器会把动态生成的Unicode内容转换为UTF-8再传输到浏览器。网页的源码上会有类似<meta charset="UTF-8" />的信息，表示该网页正是用的UTF-8编码。</li>
</ul>
<h3 id="1-Python的字符串"><a href="#1-Python的字符串" class="headerlink" title="(1). Python的字符串"></a>(1). Python的字符串</h3><blockquote>
<p>Python3.X版本中，字符串是以Unicode编码的，既支持多语言的。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">&#x27;包含中文的str&#x27;</span>)</span><br><span class="line">包含中文的str</span><br></pre></td></tr></table></figure>

<ul>
<li><p>字符串对应编码值转换</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ord(<span class="string">&#x27;A&#x27;</span>)  <span class="comment">##获取字符的整数表示</span></span><br><span class="line"><span class="number">65</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ord(<span class="string">&#x27;中&#x27;</span>)</span><br><span class="line"><span class="number">20013</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">65</span>)  <span class="comment">##把编码转换成对应的字符</span></span><br><span class="line"><span class="string">&#x27;A&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">20013</span>)</span><br><span class="line"><span class="string">&#x27;中&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;\u4e2d&#x27;</span> <span class="comment">##如果知道16进制可直接表示</span></span><br><span class="line"><span class="string">&#x27;中&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Python字符串类型str在内存中是以Unicode的形式表示，一个字符对应若干字节，如果在网络传输或者磁盘存储，就要转换成字节为单位bytes。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">b&#x27;ABC&#x27;</span></span><br><span class="line"><span class="string">b&#x27;ABC&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;ABC&#x27;</span>.encode(<span class="string">&#x27;ascii&#x27;</span>)</span><br><span class="line"><span class="string">b&#x27;ABC&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;ABC&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="string">b&#x27;ABC&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;中文&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="string">b&#x27;\xe4\xb8\xad\xe6\x96\x87&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;中文&#x27;</span>.encode(<span class="string">&#x27;ascii&#x27;</span>)  <span class="comment">##超出了ASCII的范围</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">UnicodeEncodeError: <span class="string">&#x27;ascii&#x27;</span> codec can<span class="string">&#x27;t encode characters in position 0-1: ordinal not in range(128)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; b&#x27;</span>ABC<span class="string">&#x27;.decode(&#x27;</span>ascii<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">&#x27;</span>ABC<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; b&#x27;</span>\xe4\xb8\xad\xe6\x96\x87<span class="string">&#x27;.decode(&#x27;</span>utf<span class="number">-8</span><span class="string">&#x27;)</span></span><br><span class="line"><span class="string">&#x27;</span>中文<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; b&#x27;</span>\xe4\xb8\xad\xf<span class="string">f&#x27;.decode(&#x27;</span>utf<span class="number">-8</span><span class="string">&#x27;)  ##包含无法解码的字节</span></span><br><span class="line"><span class="string">Traceback (most recent call last):</span></span><br><span class="line"><span class="string">  File &quot;&lt;input&gt;&quot;, line 1, in &lt;module&gt;</span></span><br><span class="line"><span class="string">UnicodeDecodeError: &#x27;</span>utf<span class="number">-8</span><span class="string">&#x27; codec can&#x27;</span>t decode byte <span class="number">0xff</span> <span class="keyword">in</span> position <span class="number">3</span>: invalid start byte</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">b&#x27;\xe4\xb8\xff&#x27;</span>.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">UnicodeDecodeError: <span class="string">&#x27;utf-8&#x27;</span> codec can<span class="string">&#x27;t decode bytes in position 0-1: invalid continuation byte</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; b&#x27;</span>\xe4\xb8\xad\xe6\x96<span class="string">&#x27;.decode(&#x27;</span>utf<span class="number">-8</span><span class="string">&#x27;)</span></span><br><span class="line"><span class="string">Traceback (most recent call last):</span></span><br><span class="line"><span class="string">  File &quot;&lt;input&gt;&quot;, line 1, in &lt;module&gt;</span></span><br><span class="line"><span class="string">UnicodeDecodeError: &#x27;</span>utf<span class="number">-8</span><span class="string">&#x27; codec can&#x27;</span>t decode bytes <span class="keyword">in</span> position <span class="number">3</span><span class="number">-4</span>: unexpected end of data</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">b&#x27;\xe4\xb8\xad\xff&#x27;</span>.decode(<span class="string">&#x27;utf-8&#x27;</span>,errors=<span class="string">&#x27;ignore&#x27;</span>) <span class="comment">##忽略无法解码的字节</span></span><br><span class="line"><span class="string">&#x27;中&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>计算str包含多少字符：1个中文一般占3个字节，一个英文占1个字节</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">&#x27;ABC&#x27;</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">&#x27;中文&#x27;</span>)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">b&#x27;ABC&#x27;</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">b&#x27;中文&#x27;</span>)</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span></span><br><span class="line">SyntaxError: bytes can only contain ASCII literal characters.</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">b&#x27;\xe4\xb8\xad\xe6\x96\x87&#x27;</span>)</span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">&#x27;中文&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">&#x27;ABC&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Python解释器读取源码时，为了让他以UTF-8的编码方式读取</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>输出格式化</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;Hello,%s&#x27;</span> % <span class="string">&#x27;world&#x27;</span></span><br><span class="line"><span class="string">&#x27;Hello,world&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;Hello,%s. Are you %d?&#x27;</span> % (<span class="string">&#x27;world&#x27;</span>,<span class="number">18</span>)</span><br><span class="line"><span class="string">&#x27;Hello,world. Are you 18?&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">&#x27;%5d-%05d&#x27;</span> % (<span class="number">3</span>, <span class="number">1</span>))  <span class="comment">##指定整数和浮点数的位数</span></span><br><span class="line">    <span class="number">3</span><span class="number">-00001</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">&#x27;%.2f&#x27;</span> % <span class="number">3.1415926</span>)</span><br><span class="line"><span class="number">3.14</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;Age: %s. Gender: %s&#x27;</span> % (<span class="number">18</span>, <span class="string">&#x27;Male&#x27;</span>)  <span class="comment">##%s比较通用</span></span><br><span class="line"><span class="string">&#x27;Age: 18. Gender: Male&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;growth rate: %d %%&#x27;</span> % <span class="number">100</span>  <span class="comment">##%%表示一个百分号</span></span><br><span class="line"><span class="string">&#x27;growth rate: 100 %&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;Hello, &#123;0&#125;, 成绩提升了 &#123;1:.1f&#125;%&#x27;</span>.format(<span class="string">&#x27;小明&#x27;</span>, <span class="number">99.125</span>)  <span class="comment">##format()函数，不常用</span></span><br><span class="line"><span class="string">&#x27;Hello, 小明, 成绩提升了 99.1%&#x27;</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<table>
<thead>
<tr>
<th>占位符</th>
<th>替换内容</th>
</tr>
</thead>
<tbody><tr>
<td>%d</td>
<td>整数</td>
</tr>
<tr>
<td>%f</td>
<td>浮点数</td>
</tr>
<tr>
<td>%s</td>
<td>字符串</td>
</tr>
<tr>
<td>%x</td>
<td>十六进制</td>
</tr>
</tbody></table>
<h3 id="2-list和tuple"><a href="#2-list和tuple" class="headerlink" title="(2). list和tuple"></a>(2). list和tuple</h3><ul>
<li><p>列表，list是一种 <strong>有序集合</strong>，可以随时添加\删除其中的元素。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>nameList = [<span class="string">&#x27;Tom&#x27;</span>,<span class="string">&#x27;Bob&#x27;</span>,<span class="string">&#x27;Mary&#x27;</span>,<span class="string">&#x27;Jone&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nameList</span><br><span class="line">[<span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Mary&#x27;</span>, <span class="string">&#x27;Jone&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(nameList)</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nameList[<span class="number">0</span>]</span><br><span class="line"><span class="string">&#x27;Tom&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nameList[<span class="number">1</span>]</span><br><span class="line"><span class="string">&#x27;Bob&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nameList[<span class="number">4</span>]</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">IndexError: list index out of range</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nameList[<span class="number">-1</span>]</span><br><span class="line"><span class="string">&#x27;Jone&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nameList[<span class="number">-4</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;Tom&#x27;</span></span><br><span class="line">nameList[<span class="number">-5</span>]</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">IndexError: list index out of range</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nameList</span><br><span class="line">[<span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Mary&#x27;</span>, <span class="string">&#x27;Jone&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nameList.append(<span class="string">&#x27;Jack&#x27;</span>) <span class="comment">##添加</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nameList</span><br><span class="line">[<span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Mary&#x27;</span>, <span class="string">&#x27;Jone&#x27;</span>, <span class="string">&#x27;Jack&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nameList.pop()  <span class="comment">##弹出</span></span><br><span class="line"><span class="string">&#x27;Jack&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nameList</span><br><span class="line">[<span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Mary&#x27;</span>, <span class="string">&#x27;Jone&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nameList.insert(<span class="number">2</span>,<span class="string">&#x27;Jack&#x27;</span>)  <span class="comment">##插入</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nameList</span><br><span class="line">[<span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Jack&#x27;</span>, <span class="string">&#x27;Mary&#x27;</span>, <span class="string">&#x27;Jone&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nameList.pop(<span class="number">2</span>)</span><br><span class="line"><span class="string">&#x27;Jack&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L = []  <span class="comment">##空列表</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L</span><br><span class="line">[]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(L)</span><br><span class="line"><span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L = [<span class="number">123</span>,<span class="string">&#x27;abc&#x27;</span>,<span class="literal">True</span>,[<span class="number">1</span>,<span class="number">2</span>]]  <span class="comment">##列表可以由多种数据类型组成</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="number">123</span>, <span class="string">&#x27;abc&#x27;</span>, <span class="literal">True</span>, [<span class="number">1</span>, <span class="number">2</span>]]</span><br><span class="line">len(L)</span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>元组，有序列表，类似于list，但是其中的元素一经设定将不能修改(既 “<strong>指向不变</strong>“)。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = ()  <span class="comment">##空元组</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t</span><br><span class="line">()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = (<span class="number">1</span>,)  <span class="comment">##单个元素的元组</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t</span><br><span class="line">(<span class="number">1</span>,)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = (<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,[<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>])  <span class="comment">##嵌套列表的元组</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t</span><br><span class="line">(<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t[<span class="number">2</span>][<span class="number">0</span>] = <span class="string">&#x27;X&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t[<span class="number">2</span>][<span class="number">1</span>] = <span class="string">&#x27;Y&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t</span><br><span class="line">(<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, [<span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>])</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="3-条件判断"><a href="#3-条件判断" class="headerlink" title="(3). 条件判断"></a>(3). 条件判断</h3><blockquote>
<p>计算机之所以可以做许多的自动化任务是因为其可以做条件判断(从上往下判断)。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">age = input(<span class="string">&#x27;please input your age: &#x27;</span>)</span><br><span class="line">age = int(age)</span><br><span class="line"><span class="keyword">if</span> age &gt; <span class="number">18</span>:</span><br><span class="line">    print(<span class="string">&#x27;adult&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> age &gt; <span class="number">6</span>:</span><br><span class="line">    print(<span class="string">&#x27;teenager&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&#x27;child&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="4-循环"><a href="#4-循环" class="headerlink" title="(4). 循环"></a>(4). 循环</h3><blockquote>
<p>循环是让计算机重复做某事的最有效的方式。不要滥用break\continue，会产生太多分叉。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## for循环</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">101</span>):  <span class="comment">##range函数能生成一个整数序列</span></span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> != <span class="number">0</span>:</span><br><span class="line">        print(i)</span><br><span class="line"></span><br><span class="line"><span class="comment">## while循环</span></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i &lt;= <span class="number">100</span>:</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> != <span class="number">0</span>:</span><br><span class="line">        print(i)</span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## continue</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">100</span>:</span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">continue</span>  <span class="comment">##跳出本轮循环执行下一轮</span></span><br><span class="line">    print(i)</span><br><span class="line"></span><br><span class="line"><span class="comment">## break</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">100</span>:</span><br><span class="line">    <span class="keyword">if</span> i &gt; <span class="number">10</span>:</span><br><span class="line">        <span class="keyword">break</span>  <span class="comment">##满足条件跳出整个循环</span></span><br><span class="line">    print(i)</span><br><span class="line">    i = i + <span class="number">1</span></span><br></pre></td></tr></table></figure>

<h3 id="5-dict和set"><a href="#5-dict和set" class="headerlink" title="(5). dict和set"></a>(5). dict和set</h3><blockquote>
<p>Python内置了字典：dict，其他语言称map，key—value，具有极快的查找速度。通过 <strong>Hash算法</strong> 查找key对应的value。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d =  &#123;<span class="string">&#x27;Bob&#x27;</span>:<span class="string">&#x27;66&#x27;</span>,<span class="string">&#x27;Tom&#x27;</span>:<span class="string">&#x27;77&#x27;</span>,<span class="string">&#x27;Kate&#x27;</span>:<span class="string">&#x27;88&#x27;</span>,<span class="string">&#x27;Aaron&#x27;</span>:<span class="string">&#x27;99&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[<span class="string">&#x27;Aaron&#x27;</span>] <span class="comment">##查找对应Value</span></span><br><span class="line"><span class="string">&#x27;99&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[<span class="string">&#x27;Aaron&#x27;</span>] = <span class="number">100</span>  <span class="comment">##重新赋值value</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d</span><br><span class="line">&#123;<span class="string">&#x27;Bob&#x27;</span>: <span class="string">&#x27;66&#x27;</span>, <span class="string">&#x27;Tom&#x27;</span>: <span class="string">&#x27;77&#x27;</span>, <span class="string">&#x27;Kate&#x27;</span>: <span class="string">&#x27;88&#x27;</span>, <span class="string">&#x27;Aaron&#x27;</span>: <span class="number">100</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[<span class="string">&#x27;haha&#x27;</span>]  <span class="comment">##不存在的Key</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">KeyError: <span class="string">&#x27;haha&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;haha&#x27;</span> <span class="keyword">in</span> d  <span class="comment">##判断是否存在Key</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.get(<span class="string">&#x27;haha&#x27;</span>)</span><br><span class="line"><span class="comment">##控制台不显示 None</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.get(<span class="string">&#x27;haha&#x27;</span>,<span class="number">-1</span>)  <span class="comment">##不存在key的情况下自定义返回值</span></span><br><span class="line"><span class="number">-1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.pop(<span class="string">&#x27;Bob&#x27;</span>) <span class="comment">##弹出一对k-v</span></span><br><span class="line"><span class="string">&#x27;66&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d</span><br><span class="line">&#123;<span class="string">&#x27;Tom&#x27;</span>: <span class="string">&#x27;77&#x27;</span>, <span class="string">&#x27;Kate&#x27;</span>: <span class="string">&#x27;88&#x27;</span>, <span class="string">&#x27;Aaron&#x27;</span>: <span class="number">100</span>&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>dict VS list (<strong>空间换时间</strong>)</p>
<ul>
<li>dict查找和插入的速度极快，且不会随着key的增加而变慢。list相反。</li>
<li>dict需要占用大量内存，而list不会。</li>
</ul>
</li>
<li><p>dict的key必须是不可变对象。str是不可变对象，而list是可变对象。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>l = [<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;a&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l.sort()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l  <span class="comment">##列表本身发生了变化</span></span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="string">&#x27;abc&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1 = s.replace(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s  <span class="comment">##字符串本身没有发生变化</span></span><br><span class="line"><span class="string">&#x27;abc&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1</span><br><span class="line"><span class="string">&#x27;Abc&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>set和dict类似，也是一组key的集合，但是不存value，因此set中没有重复的值。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = set([<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>])  <span class="comment">##通过list作为输入集合，重复值被过滤</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.add(<span class="number">5</span>)  <span class="comment">##添加元素</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.remove(<span class="number">3</span>)  <span class="comment">##删除元素</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1 = set([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s2 = set([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1 &amp; s2  <span class="comment">##集合可以做数学中的逻辑运算</span></span><br><span class="line">&#123;<span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1 | s2</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>Computer Science</category>
      </categories>
      <tags>
        <tag>Python Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - Theme 3 Advanced Character</title>
    <url>/2020/09/27/Python-Theme-3-Advanced-Character/</url>
    <content><![CDATA[<h1 id="1-切片"><a href="#1-切片" class="headerlink" title="1. 切片"></a>1. 切片</h1><blockquote>
<p>Python提供了切片（Slice）操作符，常用来取一个list或者tuple的部分元素。有了切片，就可以用一行代码代替多行循环了。</p>
</blockquote>
<a id="more"></a>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>L = list(range(<span class="number">10</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[<span class="number">0</span>:<span class="number">3</span>]  <span class="comment">##按照元素的索引切片</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[:<span class="number">3</span>]  <span class="comment">##从第0个元素开始，第3个结束</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[<span class="number">1</span>:<span class="number">3</span>]  <span class="comment">##从第1个元素开始</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[:<span class="number">-2</span>]  <span class="comment">##倒数第2个元素结束</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[:<span class="number">5</span>]  <span class="comment">##取前5个</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[<span class="number">-5</span>:]  <span class="comment">##取后5个</span></span><br><span class="line">[<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[:<span class="number">7</span>:<span class="number">2</span>]  <span class="comment">##第0~7元素，每隔2个</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[::<span class="number">2</span>]  <span class="comment">##全部元素每隔2个</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[:]  <span class="comment">##相当于复制了一遍list</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>(<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)[:<span class="number">3</span>]  <span class="comment">##切片tuple</span></span><br><span class="line">(<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;ABCDEFG&#x27;</span>[::<span class="number">2</span>]  <span class="comment">##字符串也可以看做一种list</span></span><br><span class="line"><span class="string">&#x27;ACEG&#x27;</span></span><br></pre></td></tr></table></figure>

<h1 id="2-迭代"><a href="#2-迭代" class="headerlink" title="2. 迭代"></a>2. 迭代</h1><p>迭代（Iteration），我们一般用for循环来遍历一个list或者tuple，这种遍历我们称为迭代。只要是可迭代对象即可迭代。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">##如何判断是否为可迭代对象</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> collections <span class="keyword">import</span> Iterable</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(<span class="string">&#x27;abc&#x27;</span>,Iterable)  <span class="comment">##str是可迭代对象</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance([<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>],Iterable)  <span class="comment">##list是可迭代</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(&#123;<span class="string">&#x27;a&#x27;</span>:<span class="number">1</span>,<span class="string">&#x27;b&#x27;</span>:<span class="number">2</span>,<span class="string">&#x27;c&#x27;</span>:<span class="number">3</span>&#125;,Iterable)  <span class="comment">##dict是可迭代</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(<span class="number">123</span>,Iterable)  <span class="comment">##整数不可迭代</span></span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure>

<h2 id="2-1-迭代list"><a href="#2-1-迭代list" class="headerlink" title="2.1. 迭代list"></a>2.1. 迭代list</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>L = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> L:</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>    print(i)</span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">e</span><br><span class="line">f</span><br><span class="line"></span><br><span class="line"><span class="comment">##实现带下标输出</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i,value <span class="keyword">in</span> enumerate(L):</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>   print(i,value)</span><br><span class="line"><span class="number">0</span> a</span><br><span class="line"><span class="number">1</span> b</span><br><span class="line"><span class="number">2</span> c</span><br><span class="line"><span class="number">3</span> d</span><br><span class="line"><span class="number">4</span> e</span><br><span class="line"><span class="number">5</span> f</span><br></pre></td></tr></table></figure>

<h2 id="2-2-迭代dict"><a href="#2-2-迭代dict" class="headerlink" title="2.2. 迭代dict"></a>2.2. 迭代dict</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">d = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;c&#x27;</span>: <span class="number">3</span>&#125;</span><br><span class="line"><span class="comment">##遍历key</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> key <span class="keyword">in</span> d:</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>    print(key)</span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line"></span><br><span class="line"><span class="comment">##遍历value</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> value <span class="keyword">in</span> d.values():</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>    print(value)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##同时迭代k，v</span></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">for</span> k,v <span class="keyword">in</span> d.items():</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>   print(k,v)</span><br><span class="line">a <span class="number">1</span></span><br><span class="line">b <span class="number">2</span></span><br><span class="line">c <span class="number">3</span></span><br></pre></td></tr></table></figure>

<h2 id="2-3-迭代str"><a href="#2-3-迭代str" class="headerlink" title="2.3. 迭代str"></a>2.3. 迭代str</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&#x27;abcdef&#x27;</span>:</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>   print(i)</span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">e</span><br><span class="line">f</span><br></pre></td></tr></table></figure>

<h1 id="3-列表生成式"><a href="#3-列表生成式" class="headerlink" title="3. 列表生成式"></a>3. 列表生成式</h1><p>列表生成式即List Comprehensions，是Python内置的非常简单却强大的可以用来创建list的生成式。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># x*x:要生成的元素写在前面; 后面直接跟for循环.</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[x*x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>)]</span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>, <span class="number">100</span>]</span><br></pre></td></tr></table></figure>

<h2 id="3-1-For循环后面跟if判断"><a href="#3-1-For循环后面跟if判断" class="headerlink" title="3.1. For循环后面跟if判断"></a>3.1. For循环后面跟if判断</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># if在for循环之后不能带else，因为在这里代表筛选条件</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[x*x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>) <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span>]</span><br><span class="line">[<span class="number">4</span>, <span class="number">16</span>, <span class="number">36</span>, <span class="number">64</span>, <span class="number">100</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># if在for循环之前必须带else，因为是表达式，必须根据x计算出一个结果</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[x <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> -x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>)]</span><br><span class="line">[<span class="number">-1</span>, <span class="number">2</span>, <span class="number">-3</span>, <span class="number">4</span>, <span class="number">-5</span>, <span class="number">6</span>, <span class="number">-7</span>, <span class="number">8</span>, <span class="number">-9</span>, <span class="number">10</span>]</span><br></pre></td></tr></table></figure>

<h2 id="3-2-两层for循环-很少用到三层及以上的循环"><a href="#3-2-两层for循环-很少用到三层及以上的循环" class="headerlink" title="3.2. 两层for循环; 很少用到三层及以上的循环"></a>3.2. 两层for循环; 很少用到三层及以上的循环</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成全排列</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[x + y <span class="keyword">for</span> x <span class="keyword">in</span> <span class="string">&quot;abc&quot;</span> <span class="keyword">for</span> y <span class="keyword">in</span> <span class="string">&quot;123&quot;</span>]</span><br><span class="line">[<span class="string">&#x27;a1&#x27;</span>, <span class="string">&#x27;a2&#x27;</span>, <span class="string">&#x27;a3&#x27;</span>, <span class="string">&#x27;b1&#x27;</span>, <span class="string">&#x27;b2&#x27;</span>, <span class="string">&#x27;b3&#x27;</span>, <span class="string">&#x27;c1&#x27;</span>, <span class="string">&#x27;c2&#x27;</span>, <span class="string">&#x27;c3&#x27;</span>]</span><br></pre></td></tr></table></figure>

<h2 id="3-3-For循环可以同时使用两个变量"><a href="#3-3-For循环可以同时使用两个变量" class="headerlink" title="3.3. For循环可以同时使用两个变量"></a>3.3. For循环可以同时使用两个变量</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = &#123;<span class="string">&#x27;x&#x27;</span>: <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;y&#x27;</span>: <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;z&#x27;</span>: <span class="string">&#x27;3&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[k + <span class="string">&#x27;=&#x27;</span> + v <span class="keyword">for</span> k, v <span class="keyword">in</span> d.items()]</span><br><span class="line">[<span class="string">&#x27;x=1&#x27;</span>, <span class="string">&#x27;y=2&#x27;</span>, <span class="string">&#x27;z=3&#x27;</span>]</span><br></pre></td></tr></table></figure>

<h1 id="4-生成器"><a href="#4-生成器" class="headerlink" title="4. 生成器"></a>4. 生成器</h1><p>受到内存的限制，创建列表的容量是有限的，而且如果仅用到列表前几个元素，那么就白白浪费了空间。生成器(generator)，是储存了列表元素的算法，形成了一边循环一边计算的机制，从而节省了空间。</p>
<h2 id="4-1-方法一"><a href="#4-1-方法一" class="headerlink" title="4.1. 方法一"></a>4.1. 方法一</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将列表生成式的[]改为()</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L = (x*<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">4</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L</span><br><span class="line">&lt;generator object &lt;genexpr&gt; at <span class="number">0x109ac12d0</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>next(L) <span class="comment"># next()函数获得generator的下一个返回值</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>next(L)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L.__next__()</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L.__next__()</span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L.__next__() <span class="comment"># 直到最后一个元素，抛出 StopIteration 错误</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">StopIteration</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一般都使用for语句访问，next()只是用来说明用的</span></span><br><span class="line">L = (x*<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">4</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> L:</span><br><span class="line"><span class="meta">... </span>    print(i)</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure>

<h2 id="4-2-方法二-yield语句"><a href="#4-2-方法二-yield语句" class="headerlink" title="4.2. 方法二: yield语句"></a>4.2. 方法二: yield语句</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 不使用生成器, 则先生成List, 后打印List</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_num</span>():</span></span><br><span class="line">    nums = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">        print(<span class="string">&#x27;生成数据:&#x27;</span>, i)</span><br><span class="line">        nums.append(i)</span><br><span class="line">    <span class="keyword">return</span> nums</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">nums = gen_num()</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> nums:</span><br><span class="line">    print(<span class="string">&#x27;打印数据:&#x27;</span>, num)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">生成数据: <span class="number">0</span></span><br><span class="line">生成数据: <span class="number">1</span></span><br><span class="line">生成数据: <span class="number">2</span></span><br><span class="line">生成数据: <span class="number">3</span></span><br><span class="line">打印数据: <span class="number">0</span></span><br><span class="line">打印数据: <span class="number">1</span></span><br><span class="line">打印数据: <span class="number">2</span></span><br><span class="line">打印数据: <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用生成器yield</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_num</span>():</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">        print(<span class="string">&#x27;生成数据:&#x27;</span>, i)</span><br><span class="line">        <span class="keyword">yield</span> i</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">nums = gen_num()</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> nums:</span><br><span class="line">    print(<span class="string">&#x27;打印数据:&#x27;</span>, num)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出 - 边生成边输出</span></span><br><span class="line">生成数据: <span class="number">0</span></span><br><span class="line">打印数据: <span class="number">0</span></span><br><span class="line">生成数据: <span class="number">1</span></span><br><span class="line">打印数据: <span class="number">1</span></span><br><span class="line">生成数据: <span class="number">2</span></span><br><span class="line">打印数据: <span class="number">2</span></span><br><span class="line">生成数据: <span class="number">3</span></span><br><span class="line">打印数据: <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 杨辉三角 --&lt;代码精妙&gt;    </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">triangles</span>():</span></span><br><span class="line"><span class="meta">... </span>    L = [<span class="number">1</span>]</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">yield</span> L</span><br><span class="line"><span class="meta">... </span>        L = [<span class="number">1</span>] + [L[i]+L[i+<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> range(len(L)<span class="number">-1</span>)] + [<span class="number">1</span>]</span><br></pre></td></tr></table></figure>

<h1 id="5-迭代器"><a href="#5-迭代器" class="headerlink" title="5. 迭代器"></a>5. 迭代器</h1><h2 id="5-1-Iterable-对象-列表、字典、字符串、生成器"><a href="#5-1-Iterable-对象-列表、字典、字符串、生成器" class="headerlink" title="5.1. Iterable 对象(列表、字典、字符串、生成器)"></a>5.1. Iterable 对象(列表、字典、字符串、生成器)</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> collections.abc <span class="keyword">import</span> Iterable</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance([], Iterable)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(&#123;&#125;, Iterable)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(<span class="string">&#x27;abc&#x27;</span>, Iterable)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance((x*<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">6</span>)), Iterable)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(<span class="number">10</span>, Iterable) <span class="comment"># 数字不可迭代</span></span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure>

<h2 id="5-2-Iterator-迭代器-可以被next-函数调用并不断返回下一个值的对象"><a href="#5-2-Iterator-迭代器-可以被next-函数调用并不断返回下一个值的对象" class="headerlink" title="5.2. Iterator: 迭代器 - 可以被next()函数调用并不断返回下一个值的对象"></a>5.2. Iterator: 迭代器 - 可以被next()函数调用并不断返回下一个值的对象</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Iterator计算是惰性的，只有需要返回下一个数据时才计算。而且只能遍历一次。</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> collections.abc <span class="keyword">import</span> Iterator</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance((x*<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">6</span>)), Iterator)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance([], Iterator)</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(&#123;&#125;, Iterator)</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(<span class="string">&#x27;abc&#x27;</span>, Iterator)</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># iter()函数可以将 list, dict, str等变成 Iterator</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(iter([]), Iterator)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(iter(&#123;&#125;), Iterator)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(iter(<span class="string">&#x27;abc&#x27;</span>), Iterator)</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>Computer Science</category>
      </categories>
      <tags>
        <tag>Python Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - Theme 11 Package</title>
    <url>/2020/10/04/Python-Theme-11-Package/</url>
    <content><![CDATA[<blockquote>
<p>Batteries Included Philosophy - having a rich and versatile standard library which is immediately available, without making the user download separate packages.</p>
</blockquote>
<h1 id="1-datetime"><a href="#1-datetime" class="headerlink" title="1. datetime"></a>1. datetime</h1><blockquote>
<p>Python处理时间和日期的标准库</p>
</blockquote>
<a id="more"></a>

<h2 id="1-1-获取当前时间和日期"><a href="#1-1-获取当前时间和日期" class="headerlink" title="1.1. 获取当前时间和日期"></a>1.1. 获取当前时间和日期</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime <span class="comment">#datetime模块包含一个datetime类</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>now = datetime.now()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>now</span><br><span class="line">datetime.datetime(<span class="number">2020</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">512524</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(now)</span><br><span class="line"><span class="number">2020</span><span class="number">-07</span><span class="number">-04</span> <span class="number">10</span>:<span class="number">07</span>:<span class="number">08.512524</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(type(now))</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">datetime</span>.<span class="title">datetime</span>&#x27;&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="1-2-获取指定日期和时间"><a href="#1-2-获取指定日期和时间" class="headerlink" title="1.2. 获取指定日期和时间"></a>1.2. 获取指定日期和时间</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dt = datetime(<span class="number">2020</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>) <span class="comment">#指定日期</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(dt)</span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-06</span> <span class="number">06</span>:<span class="number">06</span>:<span class="number">00</span></span><br></pre></td></tr></table></figure>

<h2 id="1-3-datetime转timestamp"><a href="#1-3-datetime转timestamp" class="headerlink" title="1.3. datetime转timestamp"></a>1.3. datetime转timestamp</h2><p>在计算机中，时间的表示是相对于Epoch time来计算的。Epoch time: 也称Unix time，是1970年1月1号 00:00:00 UTC+00:00 的时间。当前时间就是相对于Epoch time的秒数。<br>全球各地计算机的任意时刻timestap都是相同的，这也就是为什么计算机的时间都是用timestamp表示了。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dt = datetime(<span class="number">2020</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(dt)</span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-06</span> <span class="number">06</span>:<span class="number">06</span>:<span class="number">00</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dt.timestamp() <span class="comment">#转换为timestamp</span></span><br><span class="line"><span class="number">1591419960.0</span> <span class="comment">#小数表示毫秒</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = <span class="number">1591419960.0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(datetime.fromtimestamp(t)) <span class="comment">#本人在英国，夏时令为UTC+1</span></span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-06</span> <span class="number">06</span>:<span class="number">06</span>:<span class="number">00</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(datetime.utcfromtimestamp(t)) <span class="comment">#UTC时间</span></span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-06</span> <span class="number">05</span>:<span class="number">06</span>:<span class="number">00</span></span><br></pre></td></tr></table></figure>

<h2 id="1-4-str转datetime"><a href="#1-4-str转datetime" class="headerlink" title="1.4. str转datetime"></a>1.4. str转datetime</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>day = datetime.strptime(<span class="string">&#x27;2020-06-06 06:06:00&#x27;</span>, <span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>) <span class="comment">#日期的str与格式化字符串</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(day)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2020</span><span class="number">-06</span><span class="number">-06</span> <span class="number">06</span>:<span class="number">06</span>:<span class="number">00</span></span><br></pre></td></tr></table></figure>

<h2 id="1-5-datetime转str"><a href="#1-5-datetime转str" class="headerlink" title="1.5. datetime转str"></a>1.5. datetime转str</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>now = datetime.now()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(now.strftime(<span class="string">&#x27;%a, %b %d %H:%M&#x27;</span>))</span><br><span class="line">Sat, Jul <span class="number">04</span> <span class="number">10</span>:<span class="number">40</span></span><br></pre></td></tr></table></figure>

<h2 id="1-6-datetime加减"><a href="#1-6-datetime加减" class="headerlink" title="1.6. datetime加减"></a>1.6. datetime加减</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta <span class="comment">#通过timedelta类来进行加减运算</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>now = datetime.now()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>now</span><br><span class="line">datetime.datetime(<span class="number">2020</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">44</span>, <span class="number">24</span>, <span class="number">184738</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>now + timedelta(hours = <span class="number">12</span>)</span><br><span class="line">datetime.datetime(<span class="number">2020</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">22</span>, <span class="number">44</span>, <span class="number">24</span>, <span class="number">184738</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>now - timedelta(days=<span class="number">1</span>)</span><br><span class="line">datetime.datetime(<span class="number">2020</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">44</span>, <span class="number">24</span>, <span class="number">184738</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>now + timedelta(days = <span class="number">1</span>, hours = <span class="number">12</span>)</span><br><span class="line">datetime.datetime(<span class="number">2020</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">22</span>, <span class="number">44</span>, <span class="number">24</span>, <span class="number">184738</span>)</span><br></pre></td></tr></table></figure>

<h2 id="1-7-本地时间转UTC"><a href="#1-7-本地时间转UTC" class="headerlink" title="1.7. 本地时间转UTC"></a>1.7. 本地时间转UTC</h2><p>目前本地时间为英国夏时令(UTC+1)。datetime类型有一个时区属性tzinfo，默认为None。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta, timezone</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tz_utc_1 = timezone(timedelta(hours = <span class="number">1</span>)) <span class="comment">#创建时区UTC+1:00</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>now = datetime.now()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>now</span><br><span class="line">datetime.datetime(<span class="number">2020</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">53</span>, <span class="number">38</span>, <span class="number">549365</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dt = now.replace(tzinfo = tz_utc_1) <span class="comment">#强制设置为UTC+1:00</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dt</span><br><span class="line">datetime.datetime(<span class="number">2020</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">53</span>, <span class="number">38</span>, <span class="number">549365</span>, tzinfo=datetime.timezone(datetime.timedelta(seconds=<span class="number">3600</span>)))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(dt)</span><br><span class="line"><span class="number">2020</span><span class="number">-07</span><span class="number">-04</span> <span class="number">10</span>:<span class="number">53</span>:<span class="number">38.549365</span>+<span class="number">01</span>:<span class="number">00</span></span><br></pre></td></tr></table></figure>

<h2 id="1-8-时区转换"><a href="#1-8-时区转换" class="headerlink" title="1.8. 时区转换"></a>1.8. 时区转换</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>utc_dt = datetime.utcnow().replace(tzinfo = timezone.utc) <span class="comment">#拿到UTC时间，并强制设置时区为UTC+0:00</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(utc_dt)</span><br><span class="line"><span class="number">2020</span><span class="number">-07</span><span class="number">-04</span> <span class="number">10</span>:<span class="number">00</span>:<span class="number">56.720584</span>+<span class="number">00</span>:<span class="number">00</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bj_dt = utc_dt.astimezone(timezone(timedelta(hours=<span class="number">8</span>))) <span class="comment">#转换为北京时间</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(bj_dt)</span><br><span class="line"><span class="number">2020</span><span class="number">-07</span><span class="number">-04</span> <span class="number">18</span>:<span class="number">00</span>:<span class="number">56.720584</span>+<span class="number">08</span>:<span class="number">00</span></span><br></pre></td></tr></table></figure>

<h2 id="1-9-tips"><a href="#1-9-tips" class="headerlink" title="1.9. tips"></a>1.9. tips</h2><p>datetime表示的时间需要时区信息才能确定一个时间，否则只能视为本地时间。<br>如果要存储datetime，最佳方法为timestamp，这样就与时区无关了。</p>
<h1 id="2-collections"><a href="#2-collections" class="headerlink" title="2. collections"></a>2. collections</h1><blockquote>
<p>Python内建的集合模块</p>
</blockquote>
<h2 id="2-1-namedtuple-tuple的一个子类，既可以用下标访问也可以使用自定义的属性来访问"><a href="#2-1-namedtuple-tuple的一个子类，既可以用下标访问也可以使用自定义的属性来访问" class="headerlink" title="2.1. namedtuple - tuple的一个子类，既可以用下标访问也可以使用自定义的属性来访问"></a>2.1. namedtuple - tuple的一个子类，既可以用下标访问也可以使用自定义的属性来访问</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#表示坐标</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> collections <span class="keyword">import</span> namedtuple</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Point = namedtuple(<span class="string">&#x27;Point&#x27;</span>, [<span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>]) <span class="comment">#namedtuple(&#x27;名称&#x27;, [属性list])</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p = Point(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p.x</span><br><span class="line"><span class="number">1</span></span><br><span class="line">&gt;&gt;&gt;p[<span class="number">0</span>]</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p.y</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(p, Point)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(p, tuple)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#表示学生</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Stu = namedtuple(<span class="string">&#x27;Student&#x27;</span>, [<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;age&#x27;</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = Stu(<span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;20&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">Student(name=<span class="string">&#x27;Bob&#x27;</span>, age=<span class="string">&#x27;20&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.name</span><br><span class="line"><span class="string">&#x27;Bob&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-2-deque"><a href="#2-2-deque" class="headerlink" title="2.2. deque"></a>2.2. deque</h2><blockquote>
<p>由于list为线性存储，数据量很大时，插入和删除的效率会很低。deque是为了实现插入和删除操作的双向列表，适用于队列和栈。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q = deque([<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q.append(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q.appendleft(<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q</span><br><span class="line">deque([<span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;x&#x27;</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q.popleft()</span><br><span class="line"><span class="string">&#x27;y&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q</span><br><span class="line">deque([<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;x&#x27;</span>])</span><br></pre></td></tr></table></figure>

<h2 id="2-3-defaultdict"><a href="#2-3-defaultdict" class="headerlink" title="2.3. defaultdict"></a>2.3. defaultdict</h2><blockquote>
<p>使用dict时，如果引用的Key不存在，就会抛出KeyError。使用defaultdict使得程序不抛错误，返回一个默认值。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dd = defaultdict(<span class="string">&#x27;Key not exit&#x27;</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: first argument must be callable <span class="keyword">or</span> <span class="literal">None</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dd = defaultdict(<span class="keyword">lambda</span>: <span class="string">&#x27;Key not exit&#x27;</span>) <span class="comment">#必须是callable或者None，因此这里需要用函数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dd[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&#x27;Bob&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dd[<span class="string">&#x27;name&#x27;</span>] <span class="comment">#key存在，和普通dict一样</span></span><br><span class="line"><span class="string">&#x27;Bob&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dd[<span class="string">&#x27;age&#x27;</span>] <span class="comment">#key不存在，返回自己定义的返回值</span></span><br><span class="line"><span class="string">&#x27;Key not exit&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-4-OrderedDict"><a href="#2-4-OrderedDict" class="headerlink" title="2.4. OrderedDict"></a>2.4. OrderedDict</h2><p>OrderedDict：保持key的顺序；<br>不过在python 3.6之后，普通dict也是有序的。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;\nRegular dictionary:&#x27;</span>)</span><br><span class="line">d = &#123;&#125;</span><br><span class="line">d[<span class="string">&#x27;a&#x27;</span>] = <span class="string">&#x27;A&#x27;</span></span><br><span class="line">d[<span class="string">&#x27;b&#x27;</span>] = <span class="string">&#x27;B&#x27;</span></span><br><span class="line">d[<span class="string">&#x27;c&#x27;</span>] = <span class="string">&#x27;C&#x27;</span></span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> d.items():</span><br><span class="line">    print(k, v)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;\nOrderedDict:&#x27;</span>)</span><br><span class="line">d = collections.OrderedDict()</span><br><span class="line">d[<span class="string">&#x27;a&#x27;</span>] = <span class="string">&#x27;A&#x27;</span></span><br><span class="line">d[<span class="string">&#x27;b&#x27;</span>] = <span class="string">&#x27;B&#x27;</span></span><br><span class="line">d[<span class="string">&#x27;c&#x27;</span>] = <span class="string">&#x27;C&#x27;</span></span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> d.items():</span><br><span class="line">    print(k,v)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出：</span></span><br><span class="line">Regular dictionary:</span><br><span class="line">a A</span><br><span class="line">b B</span><br><span class="line">c C</span><br><span class="line"></span><br><span class="line">OrderedDict:</span><br><span class="line">a A</span><br><span class="line">b B</span><br><span class="line">c C</span><br></pre></td></tr></table></figure>

<h2 id="2-5-ChainMap"><a href="#2-5-ChainMap" class="headerlink" title="2.5. ChainMap"></a>2.5. ChainMap</h2><blockquote>
<p>可以将多个字典映射组合在一起，组成一个逻辑上的dict，maps中存储字典组成的列表。查找的时候，会按照dict中的逻辑顺序查找。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> collections <span class="keyword">import</span> ChainMap</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;Bob&quot;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = &#123;<span class="string">&quot;age&quot;</span>: <span class="number">18</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c = &#123;<span class="string">&quot;gender&quot;</span>: <span class="string">&quot;man&quot;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pylook = ChainMap(a,b,c) <span class="comment">#将多组字典合并</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pylook</span><br><span class="line">ChainMap(&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Bob&#x27;</span>&#125;, &#123;<span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>&#125;, &#123;<span class="string">&#x27;gender&#x27;</span>: <span class="string">&#x27;man&#x27;</span>&#125;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pylook[<span class="string">&#x27;name&#x27;</span>] <span class="comment">#搜索key为name的value</span></span><br><span class="line"><span class="string">&#x27;Bob&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pylook.update(&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Mack&#x27;</span>&#125;) <span class="comment">#更新key为name的value(注意这里会从第一个字典开始找)</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pylook <span class="comment">#第一个字典中存在key为name的元素，更新成功</span></span><br><span class="line">ChainMap(&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Mack&#x27;</span>&#125;, &#123;<span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>&#125;, &#123;<span class="string">&#x27;gender&#x27;</span>: <span class="string">&#x27;man&#x27;</span>&#125;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pylook.update(&#123;<span class="string">&#x27;age&#x27;</span>: <span class="string">&#x27;20&#x27;</span>&#125;) <span class="comment">#发现第一个字典中无key为age的元素，则添加</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pylook</span><br><span class="line">ChainMap(&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Mack&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="string">&#x27;20&#x27;</span>&#125;, &#123;<span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>&#125;, &#123;<span class="string">&#x27;gender&#x27;</span>: <span class="string">&#x27;man&#x27;</span>&#125;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b[<span class="string">&#x27;age&#x27;</span>] = <span class="number">22</span> <span class="comment">#指定更新某个字典</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pylook</span><br><span class="line">ChainMap(&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Mack&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="string">&#x27;20&#x27;</span>&#125;, &#123;<span class="string">&#x27;age&#x27;</span>: <span class="number">22</span>&#125;, &#123;<span class="string">&#x27;gender&#x27;</span>: <span class="string">&#x27;man&#x27;</span>&#125;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(pylook.maps) <span class="comment">#maps中存着用list保存的字典</span></span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">list</span>&#x27;&gt;</span></span><br><span class="line">&gt;&gt;&gt; pylook.maps[0][&#x27;age&#x27;] = 25</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pylook.maps[<span class="number">1</span>][<span class="string">&#x27;age&#x27;</span>] = <span class="number">35</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pylook.maps</span><br><span class="line">[&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Mack&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">25</span>&#125;, &#123;<span class="string">&#x27;age&#x27;</span>: <span class="number">35</span>&#125;, &#123;<span class="string">&#x27;gender&#x27;</span>: <span class="string">&#x27;man&#x27;</span>&#125;]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pylook[<span class="string">&#x27;age&#x27;</span>] <span class="comment">#尽管整个字典映射中有两个age，但是永远都从第一个开始找</span></span><br><span class="line"><span class="number">25</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pylook.parents <span class="comment">#类似于maps[1:]</span></span><br><span class="line">ChainMap(&#123;<span class="string">&#x27;age&#x27;</span>: <span class="number">35</span>&#125;, &#123;<span class="string">&#x27;gender&#x27;</span>: <span class="string">&#x27;man&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure>

<p>应用：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#(1). 模拟Python内部查找链示例</span></span><br><span class="line"><span class="keyword">import</span> builtins</span><br><span class="line">pylookup = ChainMap(locals(), globals(), vars(builtins))</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#(2). 参数优先级查找(test5.py)</span></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> ChainMap</span><br><span class="line"><span class="keyword">import</span> os, argparse</span><br><span class="line"></span><br><span class="line"><span class="comment">#构造缺省参数</span></span><br><span class="line">defaults = &#123;</span><br><span class="line">    <span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;red&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;user&#x27;</span>: <span class="string">&#x27;guest&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#构造命令行参数</span></span><br><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-u&#x27;</span>, <span class="string">&#x27;--user&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-c&#x27;</span>, <span class="string">&#x27;--color&#x27;</span>)</span><br><span class="line">namespace = parser.parse_args()</span><br><span class="line"><span class="comment">#命令行参数会存储在namespace中</span></span><br><span class="line">print(vars(namespace).items())</span><br><span class="line"><span class="comment">#命令函参数字典</span></span><br><span class="line">command_line_args = &#123;k: v <span class="keyword">for</span> k, v <span class="keyword">in</span> vars(namespace).items() <span class="keyword">if</span> v&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#利用这里来设置优先级: 命令函 &gt; 系统环境 &gt; 默认参数</span></span><br><span class="line">combined = ChainMap(command_line_args, os.environ, defaults)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;color=%s&#x27;</span> % combined[<span class="string">&#x27;color&#x27;</span>])</span><br><span class="line">print(<span class="string">&#x27;user=%s&#x27;</span> % combined[<span class="string">&#x27;user&#x27;</span>])</span><br><span class="line"></span><br><span class="line">----------</span><br><span class="line"><span class="comment">#输入(无参数)</span></span><br><span class="line">(venv3<span class="number">.7</span>) ➜ python test5.py                              </span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">dict_items([(<span class="string">&#x27;user&#x27;</span>, <span class="literal">None</span>), (<span class="string">&#x27;color&#x27;</span>, <span class="literal">None</span>)])</span><br><span class="line">color=red</span><br><span class="line">user=guest</span><br><span class="line"></span><br><span class="line"><span class="comment">#输入(命令行参数)</span></span><br><span class="line">(venv3<span class="number">.7</span>) ➜ python test5.py -u Aaron              </span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">dict_items([(<span class="string">&#x27;user&#x27;</span>, <span class="string">&#x27;Aaron&#x27;</span>), (<span class="string">&#x27;color&#x27;</span>, <span class="literal">None</span>)])</span><br><span class="line">color=red</span><br><span class="line">user=Aaron</span><br><span class="line"></span><br><span class="line"><span class="comment">#输入(环境变量+命令行参数)</span></span><br><span class="line">(venv3<span class="number">.7</span>) ➜ user=admin color=red python test5.py -u Aaron</span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">dict_items([(<span class="string">&#x27;user&#x27;</span>, <span class="string">&#x27;Aaron&#x27;</span>), (<span class="string">&#x27;color&#x27;</span>, <span class="literal">None</span>)])</span><br><span class="line">color=red</span><br><span class="line">user=Aaron</span><br></pre></td></tr></table></figure>

<h2 id="2-6-Counter-计数器"><a href="#2-6-Counter-计数器" class="headerlink" title="2.6. Counter -计数器"></a>2.6. Counter -计数器</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c = Counter(<span class="string">&#x27;hello, word!&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c</span><br><span class="line">Counter(&#123;<span class="string">&#x27;l&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;o&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;h&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;e&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;,&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27; &#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;w&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;r&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;d&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;!&#x27;</span>: <span class="number">1</span>&#125;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c.update(<span class="string">&#x27;aaaaaa&#x27;</span>) <span class="comment">#可以继续添加字符，统计则会自动更新</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c</span><br><span class="line">Counter(&#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;l&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;o&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;h&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;e&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;,&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27; &#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;w&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;r&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;d&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;!&#x27;</span>: <span class="number">1</span>&#125;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c.get(<span class="string">&#x27;a&#x27;</span>) <span class="comment">#查找指定的key</span></span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure>

<h1 id="3-hashlib-摘要算法"><a href="#3-hashlib-摘要算法" class="headerlink" title="3. hashlib - 摘要算法"></a>3. hashlib - 摘要算法</h1><blockquote>
<p>摘要算法：就像是一篇文章的摘要一样，永远不会变。摘要算法又称哈希算法、散列算法。它是通过一个函数把任意长度的数据转换为固定长度的数据串。只要原始数据没有发生改变，那么生成的数据串也不会变。Python的hashlib提供了常见的摘要算法，如：MD5，SHA1等等。摘要算法一般应用于防篡改。</p>
</blockquote>
<h2 id="3-1-MD5"><a href="#3-1-MD5" class="headerlink" title="3.1. MD5"></a>3.1. MD5</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>md5 = hashlib.md5()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>md5.update(<span class="string">&#x27;hello, world!&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)) <span class="comment">#计算哈希值</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>md5.hexdigest()</span><br><span class="line"><span class="string">&#x27;3adbbad1791fbae3ec908894c4963870&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>md5</span><br><span class="line">&lt;md5 HASH object @ <span class="number">0x10dec70c0</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果数据过长也可多次调用update，结果一致</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>md5 = hashlib.md5()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>md5</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>&lt;md5 HASH object @ <span class="number">0x10dec7600</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>md5.update(<span class="string">&#x27;hello, &#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>md5.update(<span class="string">&#x27;world!&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>md5.hexdigest()</span><br><span class="line"><span class="string">&#x27;3adbbad1791fbae3ec908894c4963870&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果字符串有小小的改动，计算结果会完全不同</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>md5 = hashlib.md5()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>md5.update(<span class="string">&#x27;Hello, world!&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>md5.hexdigest()</span><br><span class="line"><span class="string">&#x27;6cd3556deb0da54bca060b4c39479839&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="3-2-SHA1"><a href="#3-2-SHA1" class="headerlink" title="3.2. SHA1"></a>3.2. SHA1</h2><blockquote>
<p>SHA1算法和MD5使用方法类似，不过生成的摘要更长，摘要越长越安全，但算法会越慢</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sha1 = hashlib.sha1()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sha1.update(<span class="string">&#x27;hello, world!&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>asha1.hexdigest()</span><br><span class="line"><span class="string">&#x27;1f09d30c707d53f3d16c530dd73d70a6ce7596a9&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="3-3-Salt-加盐"><a href="#3-3-Salt-加盐" class="headerlink" title="3.3. Salt(加盐)"></a>3.3. Salt(加盐)</h2><p>md5(password+’the-salt ‘): 这样黑客在不知道’the-salt’ 的情况下，是很难通过MD5反推明文的。不过为了避免两个用户使用了相同的password后生成相同的MD5值，在确定用户无法修改登录名的情况下，会将部分用户名作为’the-salt’的一部分，这样就能保证相同口令的用户存储成不同的MD5值。</p>
<h1 id="4-hmac"><a href="#4-hmac" class="headerlink" title="4. hmac"></a>4. hmac</h1><blockquote>
<p>Hmac算法：Keyed-Hashing for Message Authentication，通过一个标准算法，把key混入计算过程中，代替我们的salt算法，可以使得算法更加标准化。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> hmac</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>message = <span class="string">b&#x27;Hello, world!&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>key = <span class="string">b&#x27;secret&#x27;</span> <span class="comment">#在生产环境中，随机盐是明文保存的。</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>h = hmac.new(key, message, digestmod=<span class="string">&#x27;MD5&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>h</span><br><span class="line">&lt;hmac.HMAC object at <span class="number">0x1087f71d0</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>h.hexdigest()</span><br><span class="line"><span class="string">&#x27;fa4ee7d173f2d97ee79022d1a7355bcf&#x27;</span></span><br></pre></td></tr></table></figure>

<h1 id="5-itertools-用于操作迭代对象的函数"><a href="#5-itertools-用于操作迭代对象的函数" class="headerlink" title="5. itertools - 用于操作迭代对象的函数"></a>5. itertools - 用于操作迭代对象的函数</h1><h2 id="5-1-count-无限迭代器"><a href="#5-1-count-无限迭代器" class="headerlink" title="5.1. count() - 无限迭代器"></a>5.1. count() - 无限迭代器</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> itertools</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nums = itertools.count(<span class="number">1</span>) <span class="comment">#从1开始的自然数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> n <span class="keyword">in</span> nums:</span><br><span class="line"><span class="meta">... </span>    print(n)</span><br><span class="line">...</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line">...Ctrl + c</span><br></pre></td></tr></table></figure>

<h2 id="5-2-cycle-将传入的序列无限循环"><a href="#5-2-cycle-将传入的序列无限循环" class="headerlink" title="5.2. cycle() - 将传入的序列无限循环"></a>5.2. cycle() - 将传入的序列无限循环</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>sequence = itertools.cycle(<span class="string">&#x27;abc&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> c <span class="keyword">in</span> sequence:</span><br><span class="line"><span class="meta">... </span>    print(c)</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">a</span><br><span class="line">...Ctrl + c</span><br></pre></td></tr></table></figure>

<h2 id="5-3-repeat-提供参数限制重复次数"><a href="#5-3-repeat-提供参数限制重复次数" class="headerlink" title="5.3. repeat() -提供参数限制重复次数"></a>5.3. repeat() -提供参数限制重复次数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ns = itertools.repeat(<span class="string">&#x27;ab&#x27;</span>, <span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> n <span class="keyword">in</span> ns:</span><br><span class="line"><span class="meta">... </span>    print(n)</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line">ab</span><br><span class="line">ab</span><br><span class="line">ab</span><br></pre></td></tr></table></figure>

<h2 id="5-4-takewhile-在无限迭代中设置结束条件"><a href="#5-4-takewhile-在无限迭代中设置结束条件" class="headerlink" title="5.4. takewhile() - 在无限迭代中设置结束条件"></a>5.4. takewhile() - 在无限迭代中设置结束条件</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>nums = itertools.count(<span class="number">1</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ns = itertools.takewhile(<span class="keyword">lambda</span> x: x &lt; <span class="number">4</span>, nums)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ns</span><br><span class="line">&lt;itertools.takewhile object at <span class="number">0x1087e1d70</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list(ns)</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br></pre></td></tr></table></figure>

<h2 id="5-5-chain-串联一组迭代对象，形成更大的迭代器"><a href="#5-5-chain-串联一组迭代对象，形成更大的迭代器" class="headerlink" title="5.5. chain() - 串联一组迭代对象，形成更大的迭代器"></a>5.5. chain() - 串联一组迭代对象，形成更大的迭代器</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> c <span class="keyword">in</span> itertools.chain(<span class="string">&#x27;AB&#x27;</span>, <span class="string">&#x27;YZ&#x27;</span>):</span><br><span class="line"><span class="meta">... </span>    print(c)</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line">A</span><br><span class="line">B</span><br><span class="line">Y</span><br><span class="line">Z</span><br></pre></td></tr></table></figure>

<h2 id="5-6-groupby-把迭代器中相邻的重复元素提取出来"><a href="#5-6-groupby-把迭代器中相邻的重复元素提取出来" class="headerlink" title="5.6. groupby() - 把迭代器中相邻的重复元素提取出来"></a>5.6. groupby() - 把迭代器中相邻的重复元素提取出来</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> key, group <span class="keyword">in</span> itertools.groupby(<span class="string">&#x27;AAABBCAA&#x27;</span>):</span><br><span class="line"><span class="meta">... </span>    print(key, list(group))</span><br><span class="line">...</span><br><span class="line">A [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;A&#x27;</span>]</span><br><span class="line">B [<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;B&#x27;</span>]</span><br><span class="line">C [<span class="string">&#x27;C&#x27;</span>]</span><br><span class="line">A [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;A&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#忽略大小写</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> key, group <span class="keyword">in</span> itertools.groupby(<span class="string">&#x27;AaaBbCaA&#x27;</span>, <span class="keyword">lambda</span> c: c.upper()): <span class="comment">#挑选函数也是通过元素的返回值来判断是否相等的，因此可以通过函数使得&#x27;A&#x27;和&#x27;a&#x27;的返回值一致。</span></span><br><span class="line"><span class="meta">... </span>    print(key, list(group))</span><br><span class="line">...</span><br><span class="line">A [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>]</span><br><span class="line">B [<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;b&#x27;</span>]</span><br><span class="line">C [<span class="string">&#x27;C&#x27;</span>]</span><br><span class="line">A [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;A&#x27;</span>]</span><br></pre></td></tr></table></figure>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>Computer Science</category>
      </categories>
      <tags>
        <tag>Python Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - Theme 4 Functional Programming</title>
    <url>/2020/09/27/Python-Theme-4-Functional-Programming/</url>
    <content><![CDATA[<blockquote>
<p>函数式编程的一个特点是，允许把函数作为参数传入另一个函数，还允许返回一个函数。</p>
</blockquote>
<h1 id="1-高阶函数"><a href="#1-高阶函数" class="headerlink" title="1. 高阶函数"></a>1. 高阶函数</h1><a id="more"></a>

<h2 id="1-1-变量可以指向函数"><a href="#1-1-变量可以指向函数" class="headerlink" title="1.1. 变量可以指向函数"></a>1.1. 变量可以指向函数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 变量可以指向函数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>abs</span><br><span class="line">&lt;built-<span class="keyword">in</span> function abs&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>abs(<span class="number">-6</span>)</span><br><span class="line"><span class="number">6</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = abs</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f</span><br><span class="line">&lt;built-<span class="keyword">in</span> function abs&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f(<span class="number">-6</span>)</span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure>

<h2 id="1-2-函数名也是变量"><a href="#1-2-函数名也是变量" class="headerlink" title="1.2. 函数名也是变量"></a>1.2. 函数名也是变量</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果改变原指向函数的变量 abs 指向其他对象</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>abs</span><br><span class="line">&lt;built-<span class="keyword">in</span> function abs&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>abs = <span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>abs</span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>abs(<span class="number">-6</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: <span class="string">&#x27;int&#x27;</span> object <span class="keyword">is</span> <span class="keyword">not</span> callable</span><br></pre></td></tr></table></figure>

<h2 id="1-3-给函数传入函数"><a href="#1-3-给函数传入函数" class="headerlink" title="1.3. 给函数传入函数"></a>1.3. 给函数传入函数</h2><p>既然变量可以指向函数，函数的参数可以接收变量，因此一个函数就可以接收另一个函数作为参数，即–高阶函数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">addabsolute</span>(<span class="params">x, y, f</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> f(x) + f(y)</span><br><span class="line"><span class="meta">... </span>print(addabsolute(<span class="number">-2</span>, <span class="number">2</span>, abs))</span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure>

<h2 id="1-4-map-reduce"><a href="#1-4-map-reduce" class="headerlink" title="1.4. map/reduce"></a>1.4. map/reduce</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># map(func, Iterable) -&gt; Iterator. map将函数func依次作用在每一个Iterable元素上, 返回一个Iterator.</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">x</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> x * x * x</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>map(f,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">&lt;map object at <span class="number">0x11068c590</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list(map(f,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]))</span><br><span class="line">[<span class="number">1</span>, <span class="number">8</span>, <span class="number">27</span>, <span class="number">64</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> map(f,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]):</span><br><span class="line"><span class="meta">... </span>    print(i)</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">27</span></span><br><span class="line"><span class="number">64</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># reduce(func, Iterable\Iterator)</span></span><br><span class="line"><span class="comment"># 连加</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">x, y</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> x + y</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>reduce(add, [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line"><span class="number">15</span></span><br><span class="line"><span class="comment"># 连乘</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">prod</span>(<span class="params">x, y</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> x * y</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>reduce(prod, [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line"><span class="number">120</span></span><br></pre></td></tr></table></figure>

<h2 id="1-5-fliter"><a href="#1-5-fliter" class="headerlink" title="1.5. fliter"></a>1.5. fliter</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># fliter(func, Iterable) -&gt; Iterator. fliter 将函数作用于序列中的每一个元素，根据返回值是T/F来决定保留或去除该元素.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除偶数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">is_odd</span>(<span class="params">n</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> n % <span class="number">2</span> == <span class="number">1</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list(filter(is_odd, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>]))</span><br><span class="line">[<span class="number">1</span>, <span class="number">5</span>, <span class="number">9</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 回文数 --&lt;绝妙代码&gt;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">is_palindrome</span>(<span class="params">n</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> str(n) == str(n)[::<span class="number">-1</span>]</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>output = filter(is_palindrome, range(<span class="number">1</span>, <span class="number">1000</span>))</span><br></pre></td></tr></table></figure>

<h2 id="1-6-sorted"><a href="#1-6-sorted" class="headerlink" title="1.6. sorted"></a>1.6. sorted</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 高阶排序算法 - sorted()排序其实是实现了一个映射函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.对数字进行排序</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sorted([<span class="number">13</span>,<span class="number">-2</span>,<span class="number">9</span>,<span class="number">35</span>,<span class="number">-22</span>,<span class="number">0</span>,<span class="number">-0.5</span>])</span><br><span class="line">[<span class="number">-22</span>, <span class="number">-2</span>, <span class="number">-0.5</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">13</span>, <span class="number">35</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.接收key函数实现自定义排序</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sorted([<span class="number">13</span>,<span class="number">-2</span>,<span class="number">9</span>,<span class="number">35</span>,<span class="number">-22</span>,<span class="number">0</span>,<span class="number">-0.5</span>], key=abs)</span><br><span class="line">[<span class="number">0</span>, <span class="number">-0.5</span>, <span class="number">-2</span>, <span class="number">9</span>, <span class="number">13</span>, <span class="number">-22</span>, <span class="number">35</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.高阶用法</span></span><br><span class="line"><span class="comment"># 由于大写字母的ASCII比小写字母小</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sorted([<span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Aaron&#x27;</span>, <span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Zoom&#x27;</span>, <span class="string">&#x27;alen&#x27;</span>])</span><br><span class="line">[<span class="string">&#x27;Aaron&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Zoom&#x27;</span>, <span class="string">&#x27;alen&#x27;</span>]</span><br><span class="line"><span class="comment"># 统一大小写进行比较</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sorted([<span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Aaron&#x27;</span>, <span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Zoom&#x27;</span>, <span class="string">&#x27;alen&#x27;</span>], key=str.lower)</span><br><span class="line">[<span class="string">&#x27;Aaron&#x27;</span>, <span class="string">&#x27;alen&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Zoom&#x27;</span>]</span><br><span class="line"><span class="comment"># 排序翻转</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sorted([<span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Aaron&#x27;</span>, <span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Zoom&#x27;</span>, <span class="string">&#x27;alen&#x27;</span>], key=str.lower, reverse=<span class="literal">True</span>)</span><br><span class="line">[<span class="string">&#x27;Zoom&#x27;</span>, <span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;alen&#x27;</span>, <span class="string">&#x27;Aaron&#x27;</span>]</span><br></pre></td></tr></table></figure>

<h1 id="2-返回函数"><a href="#2-返回函数" class="headerlink" title="2. 返回函数"></a>2. 返回函数</h1><h2 id="2-1-高阶函数可将函数作为结果返回"><a href="#2-1-高阶函数可将函数作为结果返回" class="headerlink" title="2.1. 高阶函数可将函数作为结果返回"></a>2.1. 高阶函数可将函数作为结果返回</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 累加函数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">get_sum</span>(<span class="params">*args</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">cal_sum</span>():</span></span><br><span class="line"><span class="meta">... </span>        s = <span class="number">0</span></span><br><span class="line"><span class="meta">... </span>        <span class="keyword">for</span> i <span class="keyword">in</span> args:</span><br><span class="line"><span class="meta">... </span>            s = s + i</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">return</span> s</span><br><span class="line">...</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> cal_sum</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = get_sum(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f <span class="comment">#返回的是求和函数而并非求和结果</span></span><br><span class="line">&lt;function get_sum.&lt;locals&gt;.cal_sum at <span class="number">0x1099d8dd0</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f() <span class="comment"># 调用函数，返回结果</span></span><br><span class="line"><span class="number">15</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在函数 get_sum 中定义和函数 cal_sum , 内部函数cal_sum可以引用外部函数get_sum的参数和局部变量;</span></span><br><span class="line"><span class="comment"># 当get_sum返回cal_sum时候，相应的参数和变量都保存在返回函数中，这种程序结构称为闭包: Closure;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-2-闭包"><a href="#2-2-闭包" class="headerlink" title="2.2. 闭包"></a>2.2. 闭包</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 闭包结构中，返回的函数并没有立即执行, 调用f()才执行</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">squ</span>():</span></span><br><span class="line"><span class="meta">... </span>    l = []</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line"><span class="meta">... </span>        <span class="function"><span class="keyword">def</span> <span class="title">f</span>():</span></span><br><span class="line"><span class="meta">... </span>            <span class="keyword">return</span> i*i</span><br><span class="line"><span class="meta">... </span>        l.append(f)</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> l</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最终调用f()时候, i 已经为3了</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f1, f2, f3, f4 = squ()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f1()</span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f2()</span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f3()</span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f4()</span><br><span class="line"><span class="number">9</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 闭包结构中, 返回函数不要引用任何循环变量, 或后续会发生改变的量</span></span><br><span class="line"><span class="comment"># 解决问题的方法是: 再创建一个函数, 计算出变量的值</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">squ</span>():</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">j</span>):</span></span><br><span class="line"><span class="meta">... </span>        <span class="function"><span class="keyword">def</span> <span class="title">g</span>():</span></span><br><span class="line"><span class="meta">... </span>            <span class="keyword">return</span> j*j</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">return</span> g</span><br><span class="line">...</span><br><span class="line"><span class="meta">... </span>    l = []</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line"><span class="meta">... </span>        l.append(f(i))</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> l</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f1, f2, f3, f4 = squ()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f1()</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f2()</span><br><span class="line"><span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 闭包内函数修改外函数的局部变量 - nonlocal</span></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding : utf-8 -*-</span></span><br><span class="line"></span><br><span class="line">x = <span class="number">20</span></span><br><span class="line">y = <span class="number">-20</span></span><br><span class="line">z = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">outer</span>():</span></span><br><span class="line">    x = <span class="number">5</span></span><br><span class="line">    y = <span class="number">-5</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span>():</span></span><br><span class="line">        <span class="keyword">global</span> x</span><br><span class="line">        x += <span class="number">5</span></span><br><span class="line">        <span class="keyword">nonlocal</span> y</span><br><span class="line">        y -= <span class="number">5</span></span><br><span class="line">        z = <span class="number">0</span></span><br><span class="line">        print(<span class="string">&quot;inner x:&quot;</span>, x)</span><br><span class="line">        print(<span class="string">&quot;inner y:&quot;</span>, y)</span><br><span class="line">        print(<span class="string">&quot;inner z:&quot;</span>, z)</span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">f = outer()</span><br><span class="line">print(<span class="string">&quot;1.&quot;</span>+<span class="string">&quot;=&quot;</span>*<span class="number">10</span>)</span><br><span class="line">f()</span><br><span class="line">print(<span class="string">&quot;2.&quot;</span>+<span class="string">&quot;=&quot;</span>*<span class="number">10</span>)</span><br><span class="line">f()</span><br><span class="line">print(<span class="string">&quot;3.&quot;</span>+<span class="string">&quot;=&quot;</span>*<span class="number">10</span>)</span><br><span class="line">f()</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line"><span class="number">1.</span>==========</span><br><span class="line">inner x: <span class="number">25</span></span><br><span class="line">inner y: <span class="number">-10</span></span><br><span class="line">inner z: <span class="number">0</span></span><br><span class="line"><span class="number">2.</span>==========</span><br><span class="line">inner x: <span class="number">30</span></span><br><span class="line">inner y: <span class="number">-15</span></span><br><span class="line">inner z: <span class="number">0</span></span><br><span class="line"><span class="number">3.</span>==========</span><br><span class="line">inner x: <span class="number">35</span></span><br><span class="line">inner y: <span class="number">-20</span></span><br><span class="line">inner z: <span class="number">0</span></span><br></pre></td></tr></table></figure>

<h1 id="3-匿名函数-lambda"><a href="#3-匿名函数-lambda" class="headerlink" title="3. 匿名函数 - lambda"></a>3. 匿名函数 - lambda</h1><blockquote>
<p>匿名函数无需显示的定义, 冒号前面的表示函数参数, 返回值即表达式的结果.</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>list(filter(<span class="keyword">lambda</span> x: x % <span class="number">2</span> ==<span class="number">1</span>, range(<span class="number">1</span>, <span class="number">10</span>)))</span><br><span class="line">[<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 匿名函数作为返回值</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">perimeter</span>(<span class="params">x, y</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> <span class="keyword">lambda</span> : <span class="number">2</span> * (x+y)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>perimeter(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">&lt;function perimeter.&lt;locals&gt;.&lt;<span class="keyword">lambda</span>&gt; at <span class="number">0x108c57ef0</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>perimeter(<span class="number">1</span>,<span class="number">2</span>)()</span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure>

<h1 id="4-装饰器-decorator"><a href="#4-装饰器-decorator" class="headerlink" title="4. 装饰器 - decorator"></a>4. 装饰器 - decorator</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 装饰器其实就是一个返回函数的高阶函数</span></span><br><span class="line"><span class="comment"># 1.不含参数</span></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding : utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">process_time</span>(<span class="params">func</span>):</span></span><br><span class="line"><span class="meta">    @functools.wraps(func)  #相当于: wrapper.__name__ = func.__name__</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span>(<span class="params">*args, **kw</span>):</span></span><br><span class="line">        start = time.time()</span><br><span class="line">        results = func(*args)</span><br><span class="line">        end = time.time()</span><br><span class="line">        costtime = end - start</span><br><span class="line">        print(func.__name__, <span class="string">&quot;cost:&quot;</span>, costtime)</span><br><span class="line">        <span class="keyword">return</span> results</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@process_time #相当于: squ = process_time(squ), 更换了原指向函数的变量squ的指向.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">squ</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">return</span> x*x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">square = squ(<span class="number">5</span>)</span><br><span class="line">print(<span class="string">&#x27;square =&#x27;</span>,square)</span><br><span class="line">print(<span class="string">&#x27;func name =&#x27;</span>,squ.__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">squ cost: <span class="number">9.5367431640625e-07</span></span><br><span class="line">square = <span class="number">25</span></span><br><span class="line">func name = squ</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.含参数</span></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding : utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">process_time</span>(<span class="params">date</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decorator</span>(<span class="params">func</span>):</span></span><br><span class="line"><span class="meta">        @functools.wraps(func)</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span>(<span class="params">*args, **kw</span>):</span></span><br><span class="line">            start = time.time()</span><br><span class="line">            results = func(*args)</span><br><span class="line">            end = time.time()</span><br><span class="line">            costtime = end - start</span><br><span class="line">            print(date,func.__name__, <span class="string">&quot;cost:&quot;</span>, costtime)</span><br><span class="line">            <span class="keyword">return</span> results</span><br><span class="line">        <span class="keyword">return</span> wrapper</span><br><span class="line">    <span class="keyword">return</span> decorator</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@process_time(datetime.datetime.now()) #相当于: squ = process_time(datetime.datetime.now())(squ)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">squ</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">return</span> x*x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">square = squ(<span class="number">5</span>)</span><br><span class="line">print(<span class="string">&#x27;square =&#x27;</span>,square)</span><br><span class="line">print(<span class="string">&#x27;func name =&#x27;</span>,squ.__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line"><span class="number">2020</span><span class="number">-05</span><span class="number">-08</span> <span class="number">22</span>:<span class="number">58</span>:<span class="number">39.325757</span> squ cost: <span class="number">1.1920928955078125e-06</span></span><br><span class="line">square = <span class="number">25</span></span><br><span class="line">func name = squ</span><br></pre></td></tr></table></figure>

<h1 id="5-偏函数-Partial-function"><a href="#5-偏函数-Partial-function" class="headerlink" title="5. 偏函数 - Partial function"></a>5. 偏函数 - Partial function</h1><blockquote>
<p>Python的 functools 模块提供了很多功能, 偏函数就是其一。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 偏函数的主要作用即将含参的函数设置默认参数后生成新函数, 简化调用.</span></span><br><span class="line"><span class="comment"># int(value, base)</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>int(<span class="string">&#x27;10&#x27;</span>, base = <span class="number">2</span>)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>int(<span class="string">&#x27;10&#x27;</span>, base = <span class="number">16</span>)</span><br><span class="line"><span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过定义函数简化</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">int2</span>(<span class="params">x, base=<span class="number">2</span></span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> int(x, base)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>int2(<span class="string">&#x27;10&#x27;</span>)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 偏函数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> functools</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>int2 = functools.partial(int, base=<span class="number">2</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>int2(<span class="string">&#x27;10&#x27;</span>)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 偏函数可接收函数对象、*args和**kw.</span></span><br><span class="line"><span class="number">1.</span> **kw: base = <span class="number">2</span> 相当于 &#123;<span class="string">&#x27;base&#x27;</span>: <span class="number">2</span>&#125;</span><br><span class="line"><span class="number">2.</span> *args: <span class="string">&#x27;10&#x27;</span> 相当于传给了 int(value, base) 函数的value.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>int2 = functools.partial(int, <span class="string">&#x27;10&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>int2()</span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>Computer Science</category>
      </categories>
      <tags>
        <tag>Python Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>COMP4039 - 0.Module Overview</title>
    <url>/2020/10/07/COMP4039-0-Module-Overview/</url>
    <content><![CDATA[<h1 id="1-Teaching"><a href="#1-Teaching" class="headerlink" title="1. Teaching"></a>1. Teaching</h1><ul>
<li>20 credit Module = 200 hours of study time</li>
<li>3-14 Weeks of Teaching</li>
</ul>
<h1 id="2-Assessment"><a href="#2-Assessment" class="headerlink" title="2. Assessment"></a>2. Assessment</h1><ul>
<li>Open book exam (details TBA) – 40%</li>
<li>Coursework 1: 2-part coursework – total 20%<ul>
<li>Part A (10%): database design</li>
<li>Part B (10%): database manipulation</li>
</ul>
</li>
<li>Coursework 2: Project coursework – 40%<ul>
<li>Database + web interface</li>
</ul>
</li>
</ul>
<a id="more"></a>

<h1 id="3-Resources"><a href="#3-Resources" class="headerlink" title="3. Resources"></a>3. Resources</h1><ul>
<li><a href="https://nostarch.com/mg_databases.htm">The Manga Guide to Databases</a></li>
<li><a href="https://opentextbc.ca/dbdesign01/">Database Design - 2nd Edition</a></li>
</ul>
<h1 id="4-Software"><a href="#4-Software" class="headerlink" title="4. Software"></a>4. Software</h1><ul>
<li>Login shell to (mersey.cs.nott.ac.uk)</li>
<li>MySQL (mysql.cs.nott.ac.uk:3306)</li>
<li>MySQL Workbench</li>
<li>Visual Paradigm (ER, Use Cases)</li>
<li>PHP</li>
<li>HTML / CSS</li>
<li>JS</li>
</ul>
<h1 id="5-Course-amp-amp-Structure"><a href="#5-Course-amp-amp-Structure" class="headerlink" title="5. Course&amp;&amp;Structure"></a>5. Course&amp;&amp;Structure</h1><ol>
<li>Databases: Relational/Nonrelational DBs</li>
<li>Interfaces</li>
<li>Software design principles: Requirements and web-based front-end web design</li>
</ol>
<h1 id="6-Databases-and-Categorisation"><a href="#6-Databases-and-Categorisation" class="headerlink" title="6. Databases and Categorisation"></a>6. Databases and Categorisation</h1><blockquote>
<p>Databases are ways of modelling and shaping the nature of reality</p>
</blockquote>
<ul>
<li>Categories and categorisations of the world</li>
<li>The structure of databases structures relations between people, systems, things, circumstances, activities, etc.</li>
</ul>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>UoN</category>
      </categories>
      <tags>
        <tag>COMP4039-DB&amp;WebInterface Design</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - Theme 8 IO programming</title>
    <url>/2020/09/30/Python-Theme-8-IO-programming/</url>
    <content><![CDATA[<h1 id="0-知识背景"><a href="#0-知识背景" class="headerlink" title="0. 知识背景"></a>0. 知识背景</h1><p>IO- Input/Output: 通常涉及数据交换的地方都需要IO接口，例如: 磁盘、网络等<br>基本概念：input, output, stream<br>存在问题：输入和输出速度不匹配<br>解决方法：同步、异步(回调: 好了叫我, 异步: 好了没…好了没)</p>
<a id="more"></a>

<h1 id="1-文件读写"><a href="#1-文件读写" class="headerlink" title="1. 文件读写"></a>1. 文件读写</h1><p>在磁盘上读写文件的功能都是由操作系统提供的，不过不允许程序直接操作磁盘。因此，读写文件其实是程序请求操作系统打开一个文件对象(文件描述符)来实现读写。</p>
<h2 id="1-1-读文件"><a href="#1-1-读文件" class="headerlink" title="1.1. 读文件"></a>1.1. 读文件</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">#示例文件内容(当前路径下)</span></span><br><span class="line"><span class="comment"># This is for read and write test</span></span><br><span class="line">This <span class="keyword">is</span> <span class="number">1</span>st line</span><br><span class="line">This <span class="keyword">is</span> <span class="number">2</span>nd line</span><br><span class="line">This <span class="keyword">is</span> <span class="number">3</span>rd line</span><br><span class="line"></span><br><span class="line"><span class="comment">#一次简单的读文件过程</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = open(<span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="comment">#打开当前目录下名为test的文件</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">FileNotFoundError: [Errno <span class="number">2</span>] No such file <span class="keyword">or</span> directory: <span class="string">&#x27;test&#x27;</span>  <span class="comment">#如果文件不存在，就会抛出错误</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = open(<span class="string">&#x27;rwtest&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="comment">#成功打开了一个文件，&#x27;r&#x27;:读</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.read() <span class="comment">#一次性把文件内容全部读入内存，然后打印出来</span></span><br><span class="line"><span class="string">&#x27;# This is for read and write test\nThis is 1st line\nThis is 2nd line\nThis is 3rd line&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.close() <span class="comment">#关闭文件，避免资源浪费</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#由于在读写文件的时候无论如何都要close()，python提供了一种简洁通用的写法</span></span><br><span class="line">(<span class="number">1</span>). read() -小文件一次性读取</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">with</span> open(<span class="string">&#x27;rwtest&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line"><span class="meta">... </span>    content = f.read()</span><br><span class="line"><span class="meta">... </span>    print(type(content))</span><br><span class="line"><span class="meta">... </span>    print(content)</span><br><span class="line">...</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">str</span>&#x27;&gt;</span></span><br><span class="line"><span class="class"># <span class="title">This</span> <span class="title">is</span> <span class="title">for</span> <span class="title">read</span> <span class="title">and</span> <span class="title">write</span> <span class="title">test</span></span></span><br><span class="line"><span class="class"><span class="title">This</span> <span class="title">is</span> 1<span class="title">st</span> <span class="title">line</span></span></span><br><span class="line"><span class="class"><span class="title">This</span> <span class="title">is</span> 2<span class="title">nd</span> <span class="title">line</span></span></span><br><span class="line"><span class="class"><span class="title">This</span> <span class="title">is</span> 3<span class="title">rd</span> <span class="title">line</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">(<span class="params"><span class="number">2</span></span>). <span class="title">read</span>(<span class="params">size</span>) -因内存考虑，可以反复的按照<span class="title">bytes</span>读取</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">with</span> <span class="title">open</span>(<span class="params"><span class="string">&#x27;rwtest&#x27;</span>, <span class="string">&#x27;r&#x27;</span></span>) <span class="title">as</span> <span class="title">f</span>:</span></span><br><span class="line"><span class="meta">... </span>    content = f.read(<span class="number">8</span>) <span class="comment">#size: bytes</span></span><br><span class="line"><span class="meta">... </span>    print(type(content))</span><br><span class="line"><span class="meta">... </span>    print(content)</span><br><span class="line">...</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">str</span>&#x27;&gt;</span></span><br><span class="line"><span class="class"># <span class="title">This</span> <span class="title">i</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">(<span class="params"><span class="number">2</span></span>). <span class="title">readline</span>() - 文件逐行读入，并将&#x27;/<span class="title">n</span>&#x27;也读入了，因此最好<span class="title">splitlines</span>()掉换行符</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">with</span> <span class="title">open</span>(<span class="params"><span class="string">&#x27;rwtest&#x27;</span>, <span class="string">&#x27;r&#x27;</span></span>) <span class="title">as</span> <span class="title">f</span>:</span></span><br><span class="line"><span class="meta">... </span>    line = f.readline()</span><br><span class="line"><span class="meta">... </span>    print(type(line))</span><br><span class="line"><span class="meta">... </span>    print(line)</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">while</span> line:</span><br><span class="line"><span class="meta">... </span>        print(line)</span><br><span class="line"><span class="meta">... </span>        line = f.readline()</span><br><span class="line">...</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">str</span>&#x27;&gt;</span></span><br><span class="line"><span class="class"># <span class="title">This</span> <span class="title">is</span> <span class="title">for</span> <span class="title">read</span> <span class="title">and</span> <span class="title">write</span> <span class="title">test</span></span></span><br><span class="line"><span class="class"># <span class="title">This</span> <span class="title">is</span> <span class="title">for</span> <span class="title">read</span> <span class="title">and</span> <span class="title">write</span> <span class="title">test</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">This</span> <span class="title">is</span> 1<span class="title">st</span> <span class="title">line</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">This</span> <span class="title">is</span> 2<span class="title">nd</span> <span class="title">line</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">This</span> <span class="title">is</span> 3<span class="title">rd</span> <span class="title">line</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">(<span class="params"><span class="number">3</span></span>). <span class="title">readlines</span>() - 读取整个文件所有行，存入<span class="title">list</span>，每行为一个元素</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">with</span> <span class="title">open</span>(<span class="params"><span class="string">&#x27;rwtest&#x27;</span>, <span class="string">&#x27;r&#x27;</span></span>) <span class="title">as</span> <span class="title">f</span>:</span></span><br><span class="line"><span class="meta">... </span>    lines = f.readlines()</span><br><span class="line"><span class="meta">... </span>    print(type(lines))</span><br><span class="line"><span class="meta">... </span>    print(lines)</span><br><span class="line">...</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">list</span>&#x27;&gt;</span></span><br><span class="line">[&#x27;# This is for read and write test\n&#x27;, &#x27;This is 1st line\n&#x27;, &#x27;This is 2nd line\n&#x27;, &#x27;This is 3rd line&#x27;]</span><br></pre></td></tr></table></figure>

<h2 id="1-2-写文件"><a href="#1-2-写文件" class="headerlink" title="1.2. 写文件"></a>1.2. 写文件</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">with</span> open(<span class="string">&#x27;test&#x27;</span>,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f: <span class="comment">#如果文件不存在就直接创建并写入，如果存在就覆盖</span></span><br><span class="line"><span class="meta">... </span>    f.write(<span class="string">&#x27;Hello&#x27;</span>)</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">with</span> open(<span class="string">&#x27;test&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line"><span class="meta">... </span>    print(f.read())</span><br><span class="line">...</span><br><span class="line">Hello</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">with</span> open(<span class="string">&#x27;rwtest&#x27;</span>,<span class="string">&#x27;a&#x27;</span>) <span class="keyword">as</span> f: <span class="comment">#&#x27;a&#x27;:在文件后追加</span></span><br><span class="line"><span class="meta">... </span>    f.write(<span class="string">&#x27;Hello&#x27;</span>)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">with</span> open(<span class="string">&#x27;rwtest&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line"><span class="meta">... </span>    print(f.read())</span><br><span class="line">...</span><br><span class="line"><span class="comment"># This is for read and write test</span></span><br><span class="line">This <span class="keyword">is</span> <span class="number">1</span>st line</span><br><span class="line">This <span class="keyword">is</span> <span class="number">2</span>nd line</span><br><span class="line">This <span class="keyword">is</span> <span class="number">3</span>rd lineHello</span><br></pre></td></tr></table></figure>

<h2 id="1-3-二进制文件"><a href="#1-3-二进制文件" class="headerlink" title="1.3. 二进制文件"></a>1.3. 二进制文件</h2><blockquote>
<p>图片、视频等都为二进制文件</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">with</span> open(<span class="string">&#x27;WechatIMG191.png&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line"><span class="meta">... </span>    print(f.read())</span><br><span class="line">...</span><br><span class="line"><span class="string">b&#x27;\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x01,......&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="1-4-字符编码"><a href="#1-4-字符编码" class="headerlink" title="1.4. 字符编码"></a>1.4. 字符编码</h2><blockquote>
<p>读取非UTF-8的文本文件，需要给open()函数传入’encoding=’ 参数</p>
</blockquote>
<h1 id="2-StringIO-和-BytesIO-python特性-类文件对象-file-like-object"><a href="#2-StringIO-和-BytesIO-python特性-类文件对象-file-like-object" class="headerlink" title="2. StringIO 和 BytesIO - python特性: 类文件对象(file-like object)"></a>2. StringIO 和 BytesIO - python特性: 类文件对象(file-like object)</h1><p>如果短时间的重复利用，也不希望持久化且对速度的要求较高，则可以使用内存级别的IO。</p>
<h2 id="2-1-StringIO"><a href="#2-1-StringIO" class="headerlink" title="2.1. StringIO"></a>2.1. StringIO</h2><p>在内存中有一个标志位的概念，向里面写入，标志位会后移到下一个空白处；然而读取数据的时候也是从标志位开始读的，因此需要手动移动标志位。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> io <span class="keyword">import</span> StringIO</span><br><span class="line">s = StringIO()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(s)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">_io</span>.<span class="title">StringIO</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">s</span>.<span class="title">write</span>(<span class="params"><span class="string">&#x27;Hello\nWorld\n!&#x27;</span></span>)</span></span><br><span class="line"><span class="class">13</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">s</span>.<span class="title">seek</span>(<span class="params"><span class="number">0</span></span>) #操作标志位移动</span></span><br><span class="line"><span class="class">0</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">s</span>.<span class="title">read</span>()</span></span><br><span class="line"><span class="class">&#x27;<span class="title">Hello</span>\<span class="title">nWorld</span>\<span class="title">n</span>!&#x27;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">s</span>.<span class="title">getvalue</span>() #直接获取全部值</span></span><br><span class="line"><span class="class">&#x27;<span class="title">Hello</span>\<span class="title">nWorld</span>\<span class="title">n</span>!&#x27;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line">&gt;&gt;&gt; f = StringIO(&#x27;Hello\nWorld\n!&#x27;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="meta">... </span>    s = f.readline() <span class="comment">#这里和读写文件的方法一致</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">if</span> s == <span class="string">&quot;&quot;</span>:</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">break</span></span><br><span class="line"><span class="meta">... </span>    print(s.strip())</span><br><span class="line">...</span><br><span class="line">Hello</span><br><span class="line">World</span><br><span class="line">!</span><br></pre></td></tr></table></figure>

<h2 id="2-2-BytesIO"><a href="#2-2-BytesIO" class="headerlink" title="2.2. BytesIO"></a>2.2. BytesIO</h2><p>StringIO用于字符串的存储，对于图像、视频等Bytes类型的内容就需要用到BytesIO对象。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = BytesIO()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.write(<span class="string">&quot;中国&quot;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.getvalue()</span><br><span class="line"><span class="string">b&#x27;\xe4\xb8\xad\xe5\x9b\xbd&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.close()</span><br></pre></td></tr></table></figure>

<h1 id="3-操作文件和目录"><a href="#3-操作文件和目录" class="headerlink" title="3. 操作文件和目录"></a>3. 操作文件和目录</h1><p>python的os模块可以直接调用操作系统提供的接口函数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> os</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.name <span class="comment">#posix指Unix系列</span></span><br><span class="line"><span class="string">&#x27;posix&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.uname() <span class="comment">#显示了更详细的信息</span></span><br><span class="line">posix.uname_result(sysname=<span class="string">&#x27;Darwin&#x27;</span>, nodename=<span class="string">&#x27;AarondeMacBookPro.local&#x27;</span>,....太多了省略)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.environ <span class="comment">#显示系统环境信息</span></span><br><span class="line">environ(&#123;<span class="string">&#x27;PATH&#x27;</span>: <span class="string">&#x27;/Users/...&#x27;</span>, ....,<span class="string">&#x27;HOME&#x27;</span>: <span class="string">&#x27;...&#x27;</span>&#125;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.environ.get(<span class="string">&#x27;PATH&#x27;</span>) <span class="comment">#可以只获取某个信息</span></span><br><span class="line"><span class="string">&#x27;/Users/...&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.abspath(<span class="string">&#x27;.&#x27;</span>) <span class="comment">#显示当前绝对路径</span></span><br><span class="line"><span class="string">&#x27;/Users/...&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.join(<span class="string">&#x27;/user/user1&#x27;</span>,<span class="string">&#x27;testdir&#x27;</span>) <span class="comment">#拼凑路径字符串</span></span><br><span class="line"><span class="string">&#x27;/user/user1/testdir&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.split(<span class="string">&#x27;/user/user1/testdir&#x27;</span>) <span class="comment">#拆分路径字符串</span></span><br><span class="line">(<span class="string">&#x27;/user/user1&#x27;</span>, <span class="string">&#x27;testdir&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.splitext(<span class="string">&#x27;/user/user1/test.txt&#x27;</span>) <span class="comment">#文件后缀</span></span><br><span class="line">(<span class="string">&#x27;/user/user1/test&#x27;</span>, <span class="string">&#x27;.txt&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.listdir() <span class="comment">#当前路径下文件</span></span><br><span class="line">[<span class="string">&#x27;rwtest&#x27;</span>, <span class="string">&#x27;WechatIMG191.png&#x27;</span>, <span class="string">&#x27;.DS_Store&#x27;</span>, <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;test4.py&#x27;</span>, <span class="string">&#x27;Bitcoin.py&#x27;</span>, <span class="string">&#x27;test1.py&#x27;</span>, <span class="string">&#x27;testpackage&#x27;</span>, <span class="string">&#x27;test2.py&#x27;</span>, <span class="string">&#x27;test3.py&#x27;</span>, <span class="string">&#x27;.idea&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[x <span class="keyword">for</span> x <span class="keyword">in</span> os.listdir(<span class="string">&#x27;.&#x27;</span>) <span class="keyword">if</span> os.path.isfile(x) <span class="keyword">and</span> os.path.splitext(x)[<span class="number">1</span>]==<span class="string">&#x27;.py&#x27;</span>] <span class="comment">#查找当前目录下的.py文件</span></span><br><span class="line">[<span class="string">&#x27;test4.py&#x27;</span>, <span class="string">&#x27;Bitcoin.py&#x27;</span>, <span class="string">&#x27;test1.py&#x27;</span>, <span class="string">&#x27;test2.py&#x27;</span>, <span class="string">&#x27;test3.py&#x27;</span>]</span><br></pre></td></tr></table></figure>

<h1 id="4-序列化"><a href="#4-序列化" class="headerlink" title="4. 序列化"></a>4. 序列化</h1><p>序列化(pickling) : 把变量从内存中变成可存储或传输的过程<br>反序列化(unpickling) : 把变量从序列化对象重新读到内存中</p>
<h2 id="4-1-pickle-只能用于python"><a href="#4-1-pickle-只能用于python" class="headerlink" title="4.1. pickle - 只能用于python"></a>4.1. pickle - 只能用于python</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> pickle</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = dict(name = <span class="string">&#x27;Tom&#x27;</span>, age = <span class="number">18</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pickle.dumps(d) <span class="comment">#将一个字典序列化</span></span><br><span class="line"><span class="string">b&#x27;\x80\x03&#125;q\x00(X\x04\x00\x00\x00nameq\x01X\x03\x00\x00\x00Tomq\x02X\x03\x00\x00\x00ageq\x03K\x12u.&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = open(<span class="string">&#x27;dump.txt&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="comment">#以写入bytes的方式打开文件dump.txt</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pickle.dump(d, f) <span class="comment">#将字典以序列化的方式写入文件</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.close()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = open(<span class="string">&#x27;dump.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="comment">#以读bytes的方式打开dump.txt</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = pickle.load(f) <span class="comment">#反序列化</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.close()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d <span class="comment">#得到了内容相同的d变量</span></span><br><span class="line">&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-2-JSON-一种通用型序列化标准格式"><a href="#4-2-JSON-一种通用型序列化标准格式" class="headerlink" title="4.2. JSON - 一种通用型序列化标准格式"></a>4.2. JSON - 一种通用型序列化标准格式</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> json</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = dict(name = <span class="string">&#x27;Tom&#x27;</span>, age = <span class="number">18</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>json.dumps(d) <span class="comment">#返回一个标准json格式的str</span></span><br><span class="line"><span class="string">&#x27;&#123;&quot;name&quot;: &quot;Tom&quot;, &quot;age&quot;: 18&#125;&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>json_str = json.dumps(d)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>json.loads(json_str) <span class="comment">#反序列化</span></span><br><span class="line">&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>&#125;</span><br></pre></td></tr></table></figure>
<p>一般我们习惯用类(class)来定义对象:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, age</span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">peopel2dict</span>(<span class="params">people</span>):</span> <span class="comment">#将实例转化为dict</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: people.name,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: people.age</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dict2people</span>(<span class="params">p</span>):</span></span><br><span class="line">    <span class="keyword">return</span> People(p[<span class="string">&#x27;name&#x27;</span>], p[<span class="string">&#x27;age&#x27;</span>])</span><br><span class="line"></span><br><span class="line">p = People(<span class="string">&#x27;Tom&#x27;</span>, <span class="number">18</span>)</span><br><span class="line">print(p)</span><br><span class="line"></span><br><span class="line"><span class="comment">#序列化</span></span><br><span class="line">print(json.dumps(p, default=peopel2dict)) <span class="comment">#使用定义的转化函数</span></span><br><span class="line">print(p.__dict__)</span><br><span class="line">print(json.dumps(p, default=<span class="keyword">lambda</span> obj: obj.__dict__)) <span class="comment">#也可以直接使用实例自带的__dict__属性</span></span><br><span class="line"><span class="comment">#反序列化</span></span><br><span class="line">json_str = json.dumps(p, default=peopel2dict)</span><br><span class="line">print(json.loads(json_str, object_hook=dict2people))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">&lt;__main__.People object at <span class="number">0x1083f4550</span>&gt;</span><br><span class="line">&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;Tom&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">18</span>&#125;</span><br><span class="line">&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>&#125;</span><br><span class="line">&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;Tom&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">18</span>&#125;</span><br><span class="line">&lt;__main__.People object at <span class="number">0x10840c3d0</span>&gt;</span><br></pre></td></tr></table></figure>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>Computer Science</category>
      </categories>
      <tags>
        <tag>Python Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - Theme 5 Module and Package</title>
    <url>/2020/09/28/Python-Theme-5-Module-and-Package/</url>
    <content><![CDATA[<h1 id="1-模块和包"><a href="#1-模块和包" class="headerlink" title="1. 模块和包"></a>1. 模块和包</h1><a id="more"></a>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.模块和包能大大减少代码的管理维护成本且便于阅读</span></span><br><span class="line"><span class="comment">#2.模块可以避免函数名\变量名的冲突, 但切记避免和内置函数同名.</span></span><br><span class="line"></span><br><span class="line">(venv3<span class="number">.7</span>) ➜  testproject tree</span><br><span class="line">.</span><br><span class="line">├── a.py</span><br><span class="line">├── database  <span class="comment">#包: Package;</span></span><br><span class="line">│   └── __init__.py</span><br><span class="line">├── method</span><br><span class="line">│   └── __init__.py</span><br><span class="line">└── web</span><br><span class="line">    ├── __init__.py <span class="comment">#表示这是一个包,而不是普通目录.</span></span><br><span class="line">    └── b.py <span class="comment">#b模块, testproject.web.b;</span></span><br></pre></td></tr></table></figure>

<h1 id="2-模块的使用"><a href="#2-模块的使用" class="headerlink" title="2. 模块的使用"></a>2. 模块的使用</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#内置模块只要安装完毕即可使用, 也可自行创建模块.举例如下:</span></span><br><span class="line"><span class="comment">#testmodule.py</span></span><br><span class="line">----------------</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding : utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;This is a python file to demonstrate how to use Module and Package in python&quot;&quot;&quot;</span>  <span class="comment">#注释内容, 可以调用__doc__显示</span></span><br><span class="line"></span><br><span class="line">__all__ = [<span class="string">&quot;greeting&quot;</span>,<span class="string">&quot;string&quot;</span>] <span class="comment">#当使用from xx import *时候, 会导入这些.</span></span><br><span class="line"></span><br><span class="line">__author__ = <span class="string">&quot;xxx@email&quot;</span> <span class="comment">#作者</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">string = <span class="string">&quot;I&#x27;m a test program&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#以_或者__开头的被认为是内部函数, 不希望被调用;但是由于python没有这层限制, 因此只是人为约束</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_private_hello</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello, World!&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__private_hi</span>(<span class="params">name</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hi, %s&#x27;</span> % name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">greeting</span>():</span></span><br><span class="line">    args = sys.argv</span><br><span class="line">    <span class="keyword">if</span> len(args) == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> _private_hello()</span><br><span class="line">    <span class="keyword">elif</span> len(args) == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> __private_hi(args[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&#x27;Too many arguments!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>: <span class="comment">#在作为模块使用时，不执行; 因此一般用于运行测试.</span></span><br><span class="line">    result = greeting()</span><br><span class="line">    print(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 命令行输出</span></span><br><span class="line">(venv3<span class="number">.7</span>) ➜  testpackage python testmodule.py</span><br><span class="line">Hello, World!</span><br><span class="line">(venv3<span class="number">.7</span>) ➜  testpackage python testmodule.py Aaron</span><br><span class="line">Hi, Aaron</span><br><span class="line"></span><br><span class="line"><span class="comment">#python交互环境</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> testmodule</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>testmodule.greeting()</span><br><span class="line"><span class="string">&#x27;Hello, World!&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>testmodule.string</span><br><span class="line"><span class="string">&quot;I&#x27;m a test program&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>testmodule.__all__</span><br><span class="line">[<span class="string">&#x27;greeting&#x27;</span>, <span class="string">&#x27;string&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>testmodule.__doc__</span><br><span class="line"><span class="string">&#x27;This is a python file to demonstrate how to use Module and Package in python&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>testmodule._private_hello()</span><br><span class="line"><span class="string">&#x27;Hello, World!&#x27;</span></span><br></pre></td></tr></table></figure>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>Computer Science</category>
      </categories>
      <tags>
        <tag>Python Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - Theme 2 Function</title>
    <url>/2020/06/10/Python-Theme-2-Function/</url>
    <content><![CDATA[<h1 id="0-函数"><a href="#0-函数" class="headerlink" title="0. 函数"></a>0. 函数</h1><p>函数就是最基本的一种代码抽象方式</p>
<a id="more"></a>

<h1 id="1-调用函数"><a href="#1-调用函数" class="headerlink" title="1. 调用函数"></a>1. 调用函数</h1><h2 id="1-1-Python内置函数-直接调用"><a href="#1-1-Python内置函数-直接调用" class="headerlink" title="1.1 Python内置函数-直接调用"></a>1.1 Python内置函数-直接调用</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>help(abs)  <span class="comment">##查看函数的作用；也可在python官网查询</span></span><br><span class="line">Help on built-<span class="keyword">in</span> function abs <span class="keyword">in</span> module builtins:</span><br><span class="line">abs(x, /)</span><br><span class="line">    Return the absolute value of the argument.</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>abs(<span class="number">100</span>)</span><br><span class="line"><span class="number">100</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>abs(<span class="number">-100</span>)</span><br><span class="line"><span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>abs(<span class="number">-100</span>,<span class="number">1</span>) <span class="comment">##参数个数有误</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: abs() takes exactly one argument (<span class="number">2</span> given)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>abs(<span class="string">&#x27;a&#x27;</span>)  <span class="comment">##参数类型有误</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: bad operand type <span class="keyword">for</span> abs(): <span class="string">&#x27;str&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="1-2-数据类型转换"><a href="#1-2-数据类型转换" class="headerlink" title="1.2. 数据类型转换"></a>1.2. 数据类型转换</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>int(<span class="number">12.34</span>)</span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>float(<span class="number">12.34</span>)</span><br><span class="line"><span class="number">12.34</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str(<span class="number">12.34</span>)</span><br><span class="line"><span class="string">&#x27;12.34&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bool(<span class="number">1</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bool(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure>

<h2 id="1-3-函数名"><a href="#1-3-函数名" class="headerlink" title="1.3. 函数名"></a>1.3. 函数名</h2><blockquote>
<p>函数名是指向一个函数对象的引用，因此可以重新赋值，相当于起了一个 <strong>“别名”</strong></p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = abs</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a(<span class="number">-1</span>)</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>

<h1 id="2-定义函数"><a href="#2-定义函数" class="headerlink" title="2. 定义函数"></a>2. 定义函数</h1><h2 id="2-1-普通函数定义"><a href="#2-1-普通函数定义" class="headerlink" title="2.1. 普通函数定义"></a>2.1. 普通函数定义</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_abs</span>(<span class="params">x</span>):</span>   <span class="comment">##定义函数</span></span><br><span class="line">    <span class="keyword">if</span> x &gt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> x <span class="comment">##返回值</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> -x</span><br></pre></td></tr></table></figure>

<h2 id="2-2-空函数"><a href="#2-2-空函数" class="headerlink" title="2.2. 空函数"></a>2.2. 空函数</h2><blockquote>
<p>一般用来占位，什么也不执行</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nop</span>():</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>

<h2 id="2-3-完善函数"><a href="#2-3-完善函数" class="headerlink" title="2.3. 完善函数"></a>2.3. 完善函数</h2><blockquote>
<p>添加参数检查</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_abs</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> isinstance(x,(int,float)):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&#x27;bad operand type&#x27;</span>)  <span class="comment">##自定义抛出异常</span></span><br><span class="line">    <span class="keyword">if</span> x &gt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> -x</span><br></pre></td></tr></table></figure>

<h2 id="2-4-提示"><a href="#2-4-提示" class="headerlink" title="2.4. 提示"></a>2.4. 提示</h2><ul>
<li>定义函数时需要确定函数名和参数的个数</li>
<li>如果有必要需要检查传入参数的类型</li>
<li>函数体内可以用return返回函数结果，如果不加默认返回None</li>
<li>函数看起来可以返回多个值，其实是一个tuple</li>
</ul>
<h1 id="3-函数的参数"><a href="#3-函数的参数" class="headerlink" title="3. 函数的参数"></a>3. 函数的参数</h1><p>Python定义函数的灵活度非常大，除了必选参数外，还可以定义默认参数、可变参数和关键字参数，使得定义出来的接口不但能实现复杂的功能而且方便调用者调用。</p>
<h2 id="3-1-位置参数"><a href="#3-1-位置参数" class="headerlink" title="3.1. 位置参数"></a>3.1. 位置参数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## x**2 计算，x为一个位置参数，必须传入</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">power</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">return</span> x * x</span><br><span class="line"></span><br><span class="line"><span class="comment">## x**n计算，x,n 均为位置参数，必须传入</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">power</span>(<span class="params">x, n</span>):</span></span><br><span class="line">    s = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        n = n - <span class="number">1</span></span><br><span class="line">        s = s * x</span><br><span class="line">    <span class="keyword">return</span> s</span><br></pre></td></tr></table></figure>

<h2 id="3-2-默认参数"><a href="#3-2-默认参数" class="headerlink" title="3.2. 默认参数"></a>3.2. 默认参数</h2><blockquote>
<p>默认参数会降低函数的调用难度</p>
</blockquote>
<ul>
<li>必选参数必须放在默认参数之前</li>
<li>当函数有多个参数时，将变化大的放在前面，变化小的放在后面，变化小的可以当做默认参数</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 学生注册函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">enroll</span>(<span class="params">name, gender, age=<span class="number">6</span>, city=<span class="string">&#x27;Beijing&#x27;</span></span>):</span></span><br><span class="line">    print(<span class="string">&#x27;name:&#x27;</span>, name)</span><br><span class="line">    print(<span class="string">&#x27;gender:&#x27;</span>, gender)</span><br><span class="line">    print(<span class="string">&#x27;age:&#x27;</span>, age)</span><br><span class="line">    print(<span class="string">&#x27;city:&#x27;</span>, city)</span><br><span class="line"></span><br><span class="line">enroll(<span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;M&#x27;</span>)  <span class="comment">##普通调用，均使用默认值</span></span><br><span class="line">enroll(<span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="number">7</span>)  <span class="comment">##按顺序提供默认值</span></span><br><span class="line">enroll(<span class="string">&#x27;Adam&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, city=<span class="string">&#x27;Tianjin&#x27;</span>)  <span class="comment">##不按顺序提供默认值，需要把参数名写上</span></span><br></pre></td></tr></table></figure>

<p>默认参数必须指向 <strong>不变对象</strong>。为什么要设计str、None这样的不变对象呢？因为不变对象一旦创建，对象内部的数据就不能修改，这样就减少了由于修改数据导致的错误。此外，由于对象不变，多任务环境下同时读取对象不需要加锁，同时读一点问题都没有。我们在编写程序时，如果可以设计一个不变对象，那就尽量设计成不变对象。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 可变对象(list)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_end</span>(<span class="params">L=[]</span>):</span></span><br><span class="line">    L.append(<span class="string">&#x27;END&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> L</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>add_end()</span><br><span class="line">[<span class="string">&#x27;END&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>add_end() <span class="comment">##list发生了改变</span></span><br><span class="line">[<span class="string">&#x27;END&#x27;</span>, <span class="string">&#x27;END&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 不变对象None</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_end</span>(<span class="params">L=None</span>):</span></span><br><span class="line">    <span class="keyword">if</span> L <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        L = []</span><br><span class="line">    L.append(<span class="string">&#x27;END&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> L</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>add_end()</span><br><span class="line">[<span class="string">&#x27;END&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>add_end()</span><br><span class="line">[<span class="string">&#x27;END&#x27;</span>]</span><br></pre></td></tr></table></figure>

<h2 id="3-3-可变参数"><a href="#3-3-可变参数" class="headerlink" title="3.3. 可变参数"></a>3.3. 可变参数</h2><blockquote>
<p>顾名思义就是传入参数个数是可变的。（其实这些参数会在函数调用前自动组成一个tuple）</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 计算a**2 + b**2 +...</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span>(<span class="params">*numbers</span>):</span>  <span class="comment">## 可变参数的表达方式</span></span><br><span class="line">    sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> numbers:</span><br><span class="line">        sum = sum + n * n</span><br><span class="line">    <span class="keyword">return</span> sum</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>calc(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="number">5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##如果已经有一个list或者tuple，Python允许你在list或tuple前面加一个*号，把list或tuple的元素变成可变参数传进去</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>calc(*nums)</span><br><span class="line"><span class="number">14</span></span><br></pre></td></tr></table></figure>

<h2 id="3-4-关键字参数"><a href="#3-4-关键字参数" class="headerlink" title="3.4. 关键字参数"></a>3.4. 关键字参数</h2><blockquote>
<p>可以传入一个或多个含参数名的参数。（其实这些参数会在调用的时候自动组成dict）</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 用户注册功能，除了用户名和年龄是必填项外，其他都是可选项</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">person</span>(<span class="params">name, age, **kw</span>):</span></span><br><span class="line">    print(<span class="string">&#x27;name:&#x27;</span>, name, <span class="string">&#x27;age:&#x27;</span>, age, <span class="string">&#x27;other:&#x27;</span>, kw)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">&#x27;Adam&#x27;</span>, <span class="number">45</span>, gender=<span class="string">&#x27;M&#x27;</span>, job=<span class="string">&#x27;Engineer&#x27;</span>)</span><br><span class="line">name: Adam age: <span class="number">45</span> other: &#123;<span class="string">&#x27;gender&#x27;</span>: <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;job&#x27;</span>: <span class="string">&#x27;Engineer&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 如果已经有一个dict，Python允许你在dict前面加**号，传入到 kw 中，kw将获得dict的一份拷贝，并不影响原先的dict</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>extra = &#123;<span class="string">&#x27;city&#x27;</span>: <span class="string">&#x27;Beijing&#x27;</span>, <span class="string">&#x27;job&#x27;</span>: <span class="string">&#x27;Engineer&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">&#x27;Jack&#x27;</span>, <span class="number">24</span>, **extra)</span><br><span class="line">name: Jack age: <span class="number">24</span> other: &#123;<span class="string">&#x27;city&#x27;</span>: <span class="string">&#x27;Beijing&#x27;</span>, <span class="string">&#x27;job&#x27;</span>: <span class="string">&#x27;Engineer&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-5-命名关键字参数"><a href="#3-5-命名关键字参数" class="headerlink" title="3.5. 命名关键字参数"></a>3.5. 命名关键字参数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 只接收city，job作为关键字的参数。需要有 * 分隔，* 后面的被视为命名关键字参数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">person</span>(<span class="params">name, age, *, city, job</span>):</span></span><br><span class="line">    print(name, age, city, job)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 如果函数定义中已经有了一个可变参数，后面跟着的命名关键字参数就不再需要一个特殊分隔符*了</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">person</span>(<span class="params">name, age, *args, city, job</span>):</span></span><br><span class="line">    print(name, age, args, city, job)</span><br></pre></td></tr></table></figure>

<h2 id="3-6-参数组合"><a href="#3-6-参数组合" class="headerlink" title="3.6. 参数组合"></a>3.6. 参数组合</h2><blockquote>
<p>参数定义的 <strong>顺序</strong> 必须是：必选参数、默认参数、可变参数、命名关键字参数和关键字参数。不要使用太多的参数组合，否则会使接口的可读性变差。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 通用函数</span></span><br><span class="line">func(*args, **kw)</span><br><span class="line">	<span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##例1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span>(<span class="params">a, b, c=<span class="number">0</span>, *args, **kw</span>):</span></span><br><span class="line">    print(<span class="string">&#x27;a =&#x27;</span>, a, <span class="string">&#x27;b =&#x27;</span>, b, <span class="string">&#x27;c =&#x27;</span>, c, <span class="string">&#x27;args =&#x27;</span>, args, <span class="string">&#x27;kw =&#x27;</span>, kw)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f1(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, x=<span class="number">99</span>)</span><br><span class="line">a = <span class="number">1</span> b = <span class="number">2</span> c = <span class="number">3</span> args = (<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>) kw = &#123;<span class="string">&#x27;x&#x27;</span>: <span class="number">99</span>&#125;</span><br><span class="line"><span class="comment">## 传入tuple和dict</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>args = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>kw = &#123;<span class="string">&#x27;d&#x27;</span>: <span class="number">99</span>, <span class="string">&#x27;x&#x27;</span>: <span class="string">&#x27;#&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f1(*args, **kw)</span><br><span class="line">a = <span class="number">1</span> b = <span class="number">2</span> c = <span class="number">3</span> args = (<span class="number">4</span>,) kw = &#123;<span class="string">&#x27;d&#x27;</span>: <span class="number">99</span>, <span class="string">&#x27;x&#x27;</span>: <span class="string">&#x27;#&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">##例2    </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f2</span>(<span class="params">a, b, c=<span class="number">0</span>, *, d, **kw</span>):</span></span><br><span class="line">    print(<span class="string">&#x27;a =&#x27;</span>, a, <span class="string">&#x27;b =&#x27;</span>, b, <span class="string">&#x27;c =&#x27;</span>, c, <span class="string">&#x27;d =&#x27;</span>, d, <span class="string">&#x27;kw =&#x27;</span>, kw)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f2(<span class="number">1</span>, <span class="number">2</span>, d=<span class="number">99</span>, ext=<span class="literal">None</span>)</span><br><span class="line">a = <span class="number">1</span> b = <span class="number">2</span> c = <span class="number">0</span> d = <span class="number">99</span> kw = &#123;<span class="string">&#x27;ext&#x27;</span>: <span class="literal">None</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">##例3    </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f3</span>(<span class="params">a, b, c=<span class="number">0</span>, *args, d, **kw</span>):</span></span><br><span class="line">    print(<span class="string">&#x27;a =&#x27;</span>, a, <span class="string">&#x27;b =&#x27;</span>, b, <span class="string">&#x27;c =&#x27;</span>, c, <span class="string">&#x27;args =&#x27;</span>, args, <span class="string">&#x27;d =&#x27;</span>, d, <span class="string">&#x27;kw =&#x27;</span>, kw)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f3(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, d=<span class="number">99</span>, ext=<span class="literal">None</span>)</span><br><span class="line">a = <span class="number">1</span> b = <span class="number">2</span> c = <span class="number">3</span> args = (<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>) d = <span class="number">99</span> kw = &#123;<span class="string">&#x27;ext&#x27;</span>: <span class="literal">None</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">##例4  </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f4</span>(<span class="params">a, b, c=<span class="number">0</span>, *args, d=<span class="number">1</span>, **kw</span>):</span></span><br><span class="line">	print(<span class="string">&#x27;a =&#x27;</span>, a, <span class="string">&#x27;b =&#x27;</span>, b, <span class="string">&#x27;c =&#x27;</span>, c, <span class="string">&#x27;args =&#x27;</span>, args, <span class="string">&#x27;d =&#x27;</span>, d, <span class="string">&#x27;kw =&#x27;</span>, kw)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f4(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, ext=<span class="literal">None</span>)</span><br><span class="line">a = <span class="number">1</span> b = <span class="number">2</span> c = <span class="number">3</span> args = (<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>) d = <span class="number">1</span> kw = &#123;<span class="string">&#x27;ext&#x27;</span>: <span class="literal">None</span>&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-7-小结"><a href="#3-7-小结" class="headerlink" title="3.7. 小结"></a>3.7. 小结</h2><ul>
<li>Python的函数具有非常灵活的参数形态，既可以实现简单的调用，又可以传入非常复杂的参数。</li>
<li>默认参数一定要用不可变对象，如果是可变对象，程序运行时会有逻辑错误！</li>
<li>要注意定义可变参数和关键字参数的语法：<ul>
<li>*args是可变参数，args接收的是一个tuple；</li>
<li>**kw是关键字参数，kw接收的是一个dict。</li>
</ul>
</li>
<li>以及调用函数时如何传入可变参数和关键字参数的语法：<ul>
<li>可变参数既可以直接传入：func(1, 2, 3)，又可以先组装list或tuple，再通过*args传入：func(*(1, 2, 3))；</li>
<li>关键字参数既可以直接传入：func(a=1, b=2)，又可以先组装dict，再通过*<em>kw传入：func(*</em>{‘a’: 1, ‘b’: 2})。</li>
</ul>
</li>
<li>使用*args和**kw是Python的习惯写法，当然也可以用其他参数名，但最好使用习惯用法。</li>
<li>命名的关键字参数是为了限制调用者可以传入的参数名，同时可以提供默认值。</li>
<li>定义命名的关键字参数在没有可变参数的情况下不要忘了写分隔符*，否则定义的将是位置参数。</li>
</ul>
<h1 id="4-递归函数"><a href="#4-递归函数" class="headerlink" title="4. 递归函数"></a>4. 递归函数</h1><blockquote>
<p>如果一个函数在内部调用自身函数，则为递归函数。递归函数的优点是定义简单，逻辑清晰。<strong>理论上所有的递归函数都可以写成循环的方式</strong>，但是不如递归清晰。使用递归函数时需要注意 <strong>栈溢出问题</strong>。在计算机中，函数调用是通过栈(stack)实现的，每进入一个函数调用，栈就会加一层栈帧，每当函数返回，栈帧就会减一层。栈的大小是有限的因此存在溢出问题。</p>
</blockquote>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">##阶乘计算</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fact</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line">    <span class="keyword">return</span> n * fact(n<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">##验证</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fact(<span class="number">1</span>)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fact(<span class="number">5</span>)</span><br><span class="line"><span class="number">120</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fact(<span class="number">1000</span>)  <span class="comment">##栈溢出</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">    ......</span><br><span class="line">    ......</span><br><span class="line"> RecursionError: maximum recursion depth exceeded <span class="keyword">in</span> comparison</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##计算过程</span></span><br><span class="line">===&gt; fact(5)</span><br><span class="line">===&gt; 5 * fact(4)</span><br><span class="line">===&gt; 5 * (4 * fact(3))</span><br><span class="line">===&gt; 5 * (4 * (3 * fact(2)))</span><br><span class="line">===&gt; 5 * (4 * (3 * (2 * fact(1))))</span><br><span class="line">===&gt; 5 * (4 * (3 * (2 * 1)))</span><br><span class="line">===&gt; 5 * (4 * (3 * 2))</span><br><span class="line">===&gt; 5 * (4 * 6)</span><br><span class="line">===&gt; 5 * 24</span><br><span class="line">===&gt; 120</span><br></pre></td></tr></table></figure>

<p><strong>栈溢出问题可以通过尾递归的方法来解决</strong>。尾递归是指函数在调用自身的时候，return不能包含表达式。这样编译器或解释器会对尾递归做优化，使得无论调用自身多少次都是用一个栈，这样就不会溢出了。把循环看成一种尾递归也是可以的。遗憾的是大部分编程语言都没有做尾递归优化，包括Python。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">## return中不含表达式</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fact</span>(<span class="params">num , product</span>):</span></span><br><span class="line">    <span class="keyword">if</span> num == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> product</span><br><span class="line">    <span class="keyword">return</span> fact(num<span class="number">-1</span> ,num * product)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 验证</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fact(<span class="number">5</span>, <span class="number">1</span>)</span><br><span class="line"><span class="number">120</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##计算过程</span></span><br><span class="line">===&gt; fact(5, 1)</span><br><span class="line">===&gt; fact(4, 5)</span><br><span class="line">===&gt; fact(3, 20)</span><br><span class="line">===&gt; fact(2, 60)</span><br><span class="line">===&gt; fact(1, 120)</span><br><span class="line">===&gt; 120</span><br></pre></td></tr></table></figure>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>Computer Science</category>
      </categories>
      <tags>
        <tag>Python Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - Theme 9 Process and Thread</title>
    <url>/2020/09/30/Python-Theme-9-Process-and-Thread/</url>
    <content><![CDATA[<h1 id="0-背景知识"><a href="#0-背景知识" class="headerlink" title="0. 背景知识"></a>0. 背景知识</h1><p>现代操作系统之所以可以执行多任务其实是轮流让各个任务交替执行，由于CPU速度足够快，所以看起来就像是所有任务在同时进行一样。<br>多任务的实现方式：</p>
<ul>
<li>多进程模式</li>
<li>多线程模式</li>
<li>多进程+多线程模式<br>进程、线程之间的通信、协调、同步、数据共享等问题，增加了编程的复杂性。</li>
</ul>
<a id="more"></a>

<h1 id="1-多进程"><a href="#1-多进程" class="headerlink" title="1. 多进程"></a>1. 多进程</h1><h2 id="1-1-fork-Unix"><a href="#1-1-fork-Unix" class="headerlink" title="1.1. fork() - Unix"></a>1.1. fork() - Unix</h2><p>在Unix操作环境下，系统提供fork()系统调用，将当前进程(也称为父进程)复制一份(称为子进程)。父进程返回子进程的ID，子进程返回0，子进程可以通过getppid()来获取父进程的ID。<br>Apache服务器就是由父进程监听端口，有请求进来时，就会fork出子进程来处理。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;Process (%s) start...&#x27;</span> % os.getpid())</span><br><span class="line">pid = os.fork()</span><br><span class="line"><span class="keyword">if</span> pid == <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">&#x27;I am child process (%s) and my parent is %s.&#x27;</span> % (os.getpid(), os.getppid()))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&#x27;I (%s) just created a child process (%s).&#x27;</span> % (os.getpid(), pid))</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">Process (<span class="number">15807</span>) start...</span><br><span class="line">I (<span class="number">15807</span>) just created a child process (<span class="number">15808</span>).</span><br><span class="line">I am child process (<span class="number">15808</span>) <span class="keyword">and</span> my parent <span class="keyword">is</span> <span class="number">15807.</span></span><br></pre></td></tr></table></figure>

<h2 id="1-2-multiprocessing-跨平台多进程模块"><a href="#1-2-multiprocessing-跨平台多进程模块" class="headerlink" title="1.2. multiprocessing - 跨平台多进程模块"></a>1.2. multiprocessing - 跨平台多进程模块</h2><blockquote>
<p>multiprocessing提供一个Process类代表一个进程对象</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 子进程要执行的代码</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_proc</span>(<span class="params">name</span>):</span></span><br><span class="line">    print(<span class="string">&#x27;Run child process %s (%s)...&#x27;</span> % (name, os.getpid()))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    print(<span class="string">&#x27;Parent process %s.&#x27;</span> % os.getpid())</span><br><span class="line">    p = Process(target=run_proc, args=(<span class="string">&#x27;test&#x27;</span>,)) <span class="comment">#创建子进程时，只需要传入一个执行函数和函数的参数</span></span><br><span class="line">    print(<span class="string">&#x27;Child process will start.&#x27;</span>)</span><br><span class="line">    p.start()</span><br><span class="line">    p.join() <span class="comment">#等待子进程p结束后才向下进行；常用于进程间的同步</span></span><br><span class="line">    <span class="comment">#p.join(5) 可以设置阻塞时间</span></span><br><span class="line">    print(<span class="string">&#x27;Child process end.&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">Parent process <span class="number">54062.</span></span><br><span class="line">Child process will start.</span><br><span class="line">Run child process test (<span class="number">54063</span>)...</span><br><span class="line">Child process end.</span><br></pre></td></tr></table></figure>

<h2 id="1-3-Pool-进程池"><a href="#1-3-Pool-进程池" class="headerlink" title="1.3. Pool - 进程池"></a>1.3. Pool - 进程池</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line"><span class="keyword">import</span> os, time, random</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">long_time_task</span>(<span class="params">name</span>):</span> <span class="comment">#运行时间</span></span><br><span class="line">    print(<span class="string">&#x27;Run task %s (%s)...&#x27;</span> % (name, os.getpid()))</span><br><span class="line">    start = time.time()</span><br><span class="line">    time.sleep(random.random())</span><br><span class="line">    end = time.time()</span><br><span class="line">    print(<span class="string">&#x27;Task %s runs %0.2f seconds.&#x27;</span> % (name, (end - start)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    print(<span class="string">&#x27;Parent process %s.&#x27;</span> % os.getpid())</span><br><span class="line">    p = Pool(<span class="number">4</span>) <span class="comment">#设置进程池为4; 进程池默认为CPU核数</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        p.apply_async(long_time_task, args=(i,)) <span class="comment">#apply_async为异步非阻塞；apply为阻塞的，类似于单进程串行</span></span><br><span class="line">    print(<span class="string">&#x27;Waiting for all subprocesses done...&#x27;</span>)</span><br><span class="line">    p.close() <span class="comment">#关闭进程池后不再接收新的进程(已启动的子进程还会继续)</span></span><br><span class="line">    p.join() <span class="comment">#等待进程池内的所有子进程执行完毕</span></span><br><span class="line">    print(<span class="string">&#x27;All subprocesses done.&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">Parent process <span class="number">54349.</span></span><br><span class="line">Waiting <span class="keyword">for</span> all subprocesses done...</span><br><span class="line">Run task <span class="number">0</span> (<span class="number">54350</span>)...</span><br><span class="line">Run task <span class="number">1</span> (<span class="number">54351</span>)...</span><br><span class="line">Run task <span class="number">2</span> (<span class="number">54352</span>)...</span><br><span class="line">Run task <span class="number">3</span> (<span class="number">54353</span>)...</span><br><span class="line">Task <span class="number">3</span> runs <span class="number">0.46</span> seconds.</span><br><span class="line">Run task <span class="number">4</span> (<span class="number">54353</span>)...</span><br><span class="line">Task <span class="number">0</span> runs <span class="number">0.59</span> seconds.</span><br><span class="line">Task <span class="number">1</span> runs <span class="number">0.68</span> seconds.</span><br><span class="line">Task <span class="number">2</span> runs <span class="number">0.75</span> seconds.</span><br><span class="line">Task <span class="number">4</span> runs <span class="number">0.56</span> seconds.</span><br><span class="line">All subprocesses done.</span><br></pre></td></tr></table></figure>

<h2 id="1-4-subprocess"><a href="#1-4-subprocess" class="headerlink" title="1.4. subprocess"></a>1.4. subprocess</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#(1). subprocess.run()</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>subprocess.run([<span class="string">&#x27;echo&#x27;</span>,<span class="string">&#x27;hello&#x27;</span>])</span><br><span class="line">hello</span><br><span class="line">CompletedProcess(args=[<span class="string">&#x27;echo&#x27;</span>, <span class="string">&#x27;hello&#x27;</span>], returncode=<span class="number">0</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>subprocess.run(<span class="string">&#x27;echo hello&#x27;</span>, shell = <span class="literal">True</span>)</span><br><span class="line">hello</span><br><span class="line">CompletedProcess(args=<span class="string">&#x27;echo hello&#x27;</span>, returncode=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#(2). subprocess.call() - 返回值</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>res = subprocess.call([<span class="string">&#x27;echo&#x27;</span>,<span class="string">&#x27;hello&#x27;</span>])</span><br><span class="line">hello</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>res</span><br><span class="line"><span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#(3). subprocess.Popen() - subprocess的使用方法都是对subprocess.Popen的封装</span></span><br><span class="line"><span class="comment">#(3.1).利用subprocess.PIPE可以将多个子进程的输入和输出连接在一起。subprocess.PIPE实际上为文本流提供了一个缓存区</span></span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">child1 = subprocess.Popen([<span class="string">&#x27;echo&#x27;</span>, <span class="string">&#x27;hello\nworld&#x27;</span>], stdout=subprocess.PIPE) <span class="comment">#将child1的stdout输出到缓存区</span></span><br><span class="line">child2 = subprocess.Popen([<span class="string">&quot;wc&quot;</span>], stdin=child1.stdout, stdout=subprocess.PIPE) <span class="comment">#child2的stdin读取 PIPE</span></span><br><span class="line">res = child2.communicate() <span class="comment">#communicate()方法从PIPE中读取内容返回；communicate()会阻塞父进程</span></span><br><span class="line">print(res)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">(<span class="string">b&#x27;       2       2      12\n&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#(3.2). 可以利用communicate()方法来使用PIPE给子进程输入</span></span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">p = subprocess.Popen([<span class="string">&#x27;python&#x27;</span>], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)</span><br><span class="line">output, err = p.communicate(<span class="string">b&#x27;print(&quot;hello, python&quot;)&#x27;</span>)</span><br><span class="line">print(output, err)</span><br><span class="line">print(output.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">print(<span class="string">&#x27;Exit code:&#x27;</span>, p.returncode)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出: 相当于打开python交互模式, 执行print(&quot;hello, python&quot;)</span></span><br><span class="line"><span class="string">b&#x27;hello, python\n&#x27;</span> <span class="string">b&#x27;&#x27;</span></span><br><span class="line">hello, python</span><br><span class="line"></span><br><span class="line">Exit code: <span class="number">0</span></span><br></pre></td></tr></table></figure>

<h2 id="1-5-进程间通信"><a href="#1-5-进程间通信" class="headerlink" title="1.5. 进程间通信"></a>1.5. 进程间通信</h2><blockquote>
<p>Python的multiprocessing提供了Queue，Pipes等多种方式来交换数据。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process, Queue</span><br><span class="line"><span class="keyword">import</span> os, time, random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写数据进程执行的代码:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span>(<span class="params">q</span>):</span></span><br><span class="line">    print(<span class="string">&#x27;Process to write: %s&#x27;</span> % os.getpid())</span><br><span class="line">    <span class="keyword">for</span> value <span class="keyword">in</span> [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>]:</span><br><span class="line">        print(<span class="string">&#x27;Put %s to queue...&#x27;</span> % value)</span><br><span class="line">        q.put(value)</span><br><span class="line">        time.sleep(random.random())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读数据进程执行的代码:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span>(<span class="params">q</span>):</span></span><br><span class="line">    print(<span class="string">&#x27;Process to read: %s&#x27;</span> % os.getpid())</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        value = q.get(<span class="literal">True</span>)</span><br><span class="line">        print(<span class="string">&#x27;Get %s from queue.&#x27;</span> % value)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 父进程创建Queue，并传给各个子进程：</span></span><br><span class="line">    q = Queue()</span><br><span class="line">    pw = Process(target=write, args=(q,))</span><br><span class="line">    pr = Process(target=read, args=(q,))</span><br><span class="line">    <span class="comment"># 启动子进程pw，写入:</span></span><br><span class="line">    pw.start()</span><br><span class="line">    <span class="comment"># 启动子进程pr，读取:</span></span><br><span class="line">    pr.start()</span><br><span class="line">    <span class="comment"># 等待pw结束:</span></span><br><span class="line">    pw.join()</span><br><span class="line">    <span class="comment"># pr进程里是死循环，无法等待其结束，只能强行终止:</span></span><br><span class="line">    pr.terminate()</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">Process to write: <span class="number">5305</span></span><br><span class="line">Put A to queue...</span><br><span class="line">Process to read: <span class="number">5306</span></span><br><span class="line">Get A <span class="keyword">from</span> queue.</span><br><span class="line">Put B to queue...</span><br><span class="line">Get B <span class="keyword">from</span> queue.</span><br><span class="line">Put C to queue...</span><br><span class="line">Get C <span class="keyword">from</span> queue.</span><br></pre></td></tr></table></figure>

<h1 id="2-多线程"><a href="#2-多线程" class="headerlink" title="2. 多线程"></a>2. 多线程</h1><blockquote>
<p>线程是操作系统直接支持的执行单元，一个进程至少有一个线程。</p>
</blockquote>
<h2 id="2-1-高级模块-threading"><a href="#2-1-高级模块-threading" class="headerlink" title="2.1. 高级模块-threading"></a>2.1. 高级模块-threading</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time, threading</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新线程执行的代码:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">loop</span>():</span></span><br><span class="line">    print(<span class="string">&#x27;thread %s is running...&#x27;</span> % threading.current_thread().name)</span><br><span class="line">    n = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> n &lt; <span class="number">3</span>:</span><br><span class="line">        n = n + <span class="number">1</span></span><br><span class="line">        print(<span class="string">&#x27;thread %s &gt;&gt;&gt; %s&#x27;</span> % (threading.current_thread().name, n))</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">    print(<span class="string">&#x27;thread %s ended.&#x27;</span> % threading.current_thread().name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;thread %s is running...&#x27;</span> % threading.current_thread().name) <span class="comment">#任何进程默认会启动一个线程，称为主线程 MainThread</span></span><br><span class="line">t = threading.Thread(target=loop, name=<span class="string">&#x27;LoopThread&#x27;</span>) <span class="comment">#这里传入子线程要执行的函数；并且可以自定义线程名。若不定义，系统会自动命名为：Thread-1，Thread-2</span></span><br><span class="line">t.start()</span><br><span class="line">t.join()</span><br><span class="line">print(<span class="string">&#x27;thread %s ended.&#x27;</span> % threading.current_thread().name)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">thread MainThread <span class="keyword">is</span> running...</span><br><span class="line">thread LoopThread <span class="keyword">is</span> running...</span><br><span class="line">thread LoopThread &gt;&gt;&gt; <span class="number">1</span></span><br><span class="line">thread LoopThread &gt;&gt;&gt; <span class="number">2</span></span><br><span class="line">thread LoopThread &gt;&gt;&gt; <span class="number">3</span></span><br><span class="line">thread LoopThread ended.</span><br><span class="line">thread MainThread ended.</span><br></pre></td></tr></table></figure>

<h2 id="2-2-Lock"><a href="#2-2-Lock" class="headerlink" title="2.2. Lock"></a>2.2. Lock</h2><p>多进程：同一个变量，各自拷贝一份存于各个进程中，互不影响。<br>多线程：所有的变量由所有线程共享，因此可能会造成多个线程同时修改一个变量，导致出错</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="comment"># 假定这是银行存款:</span></span><br><span class="line">balance = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change_it</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="comment"># 先存后取，结果应该为0:</span></span><br><span class="line">    <span class="keyword">global</span> balance</span><br><span class="line">    balance = balance + n</span><br><span class="line">    balance = balance - n</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_thread</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100000</span>):</span><br><span class="line">        change_it(n)</span><br><span class="line"></span><br><span class="line">t1 = threading.Thread(target=run_thread, args=(<span class="number">100</span>,))</span><br><span class="line">t2 = threading.Thread(target=run_thread, args=(<span class="number">50</span>,))</span><br><span class="line">t1.start()</span><br><span class="line">t2.start()</span><br><span class="line">t1.join()</span><br><span class="line">t2.join()</span><br><span class="line">print(balance)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line"><span class="number">0</span>/<span class="number">50</span>/<span class="number">-50</span>/<span class="number">100</span> ... <span class="comment">#由于两个线程在同时操作一个变量，因此出现了错误</span></span><br></pre></td></tr></table></figure>

<p>threading.Lock() 创建锁: 由于创建了锁，因此其他线程不能同时执行change_it(n)函数；又由于锁只有一个，同一时刻只有一个线程持有该锁。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="comment"># 假定这是银行存款:</span></span><br><span class="line">balance = <span class="number">0</span></span><br><span class="line">lock = threading.Lock()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change_it</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="comment"># 先存后取，结果应该为0:</span></span><br><span class="line">    <span class="keyword">global</span> balance</span><br><span class="line">    balance = balance + n</span><br><span class="line">    balance = balance - n</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_thread</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100000</span>):</span><br><span class="line">        lock.acquire() <span class="comment">#获取锁</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            change_it(n)</span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            lock.release() <span class="comment">#释放锁</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">t1 = threading.Thread(target=run_thread, args=(<span class="number">100</span>,))</span><br><span class="line">t2 = threading.Thread(target=run_thread, args=(<span class="number">50</span>,))</span><br><span class="line">t1.start()</span><br><span class="line">t2.start()</span><br><span class="line">t1.join()</span><br><span class="line">t2.join()</span><br><span class="line">print(balance)</span><br></pre></td></tr></table></figure>

<h2 id="2-3-锁的优劣"><a href="#2-3-锁的优劣" class="headerlink" title="2.3. 锁的优劣"></a>2.3. 锁的优劣</h2><p>好处：确保了某段关键代码同时只能由一个线程执行<br>坏处：</p>
<ul>
<li>阻止了多线程的并发能力，大大降低了效率</li>
<li>当存在多个锁时，不同线程持有不同的锁，当试图获取对方持有的锁时，可能会造成死锁，导致多个线程全部挂起</li>
</ul>
<h2 id="2-4-多核CPU"><a href="#2-4-多核CPU" class="headerlink" title="2.4. 多核CPU"></a>2.4. 多核CPU</h2><p>由于Python有GIL(Global Interpreter Lock)全局锁，因此不能利用多线程实现多核任务。只能使用多进程来实现。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#多线程(尽管创建了和系统核数相同数量的线程，但是也只能跑满单核):</span></span><br><span class="line"><span class="keyword">import</span> threading, multiprocessing</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">loop</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(multiprocessing.cpu_count()):</span><br><span class="line">    t = threading.Thread(target=loop)</span><br><span class="line">    t.start()</span><br><span class="line"></span><br><span class="line"><span class="comment">#多进程(跑满CPU)</span></span><br><span class="line"><span class="keyword">import</span> multiprocessing, os</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">loop</span>():</span></span><br><span class="line">    print(os.getpid())</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">numCpu = multiprocessing.cpu_count()</span><br><span class="line">p = multiprocessing.Pool(numCpu)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(numCpu):</span><br><span class="line">    p.apply_async(loop)</span><br><span class="line"></span><br><span class="line">p.close()</span><br><span class="line">p.join()</span><br></pre></td></tr></table></figure>

<h1 id="3-ThreadLocal"><a href="#3-ThreadLocal" class="headerlink" title="3. ThreadLocal"></a>3. ThreadLocal</h1><p>多线程环境下，每个线程使用自己的局部变量比全局变量好，这样一来能减少各个线程间的相互影响。<br>ThreadLocal 解决了参数在一个线程中的各个函数之间相互传递的问题。ThreadLocal虽然是全局变量，但是每个线程只能读写自己的独立副本。<br>ThreadLocal 最常用的地方就是为每个线程绑定一个数据库连接、Http请求，用户身份信息等，这样一个线程所有用到的处理函数就可以非常方便的访问这些资源了。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建全局ThreadLocal对象:</span></span><br><span class="line">local_school = threading.local()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">process_student</span>():</span></span><br><span class="line">    <span class="comment"># 获取当前线程关联的student:</span></span><br><span class="line">    std = local_school.student</span><br><span class="line">    print(<span class="string">&#x27;Hello, %s (in %s)&#x27;</span> % (std, threading.current_thread().name))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">process_thread</span>(<span class="params">name</span>):</span></span><br><span class="line">    <span class="comment"># 绑定ThreadLocal的student:</span></span><br><span class="line">    local_school.student = name</span><br><span class="line">    process_student()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">t1 = threading.Thread(target=process_thread, args=(<span class="string">&#x27;Alice&#x27;</span>,), name=<span class="string">&#x27;Thread-A&#x27;</span>)</span><br><span class="line">t2 = threading.Thread(target=process_thread, args=(<span class="string">&#x27;Bob&#x27;</span>,), name=<span class="string">&#x27;Thread-B&#x27;</span>)</span><br><span class="line">t1.start()</span><br><span class="line">t2.start()</span><br><span class="line">t1.join()</span><br><span class="line">t2.join()</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">Hello, Alice (<span class="keyword">in</span> Thread-A)</span><br><span class="line">Hello, Bob (<span class="keyword">in</span> Thread-B)</span><br></pre></td></tr></table></figure>

<h1 id="4-进程Vs线程"><a href="#4-进程Vs线程" class="headerlink" title="4. 进程Vs线程"></a>4. 进程Vs线程</h1><h2 id="4-1-多任务"><a href="#4-1-多任务" class="headerlink" title="4.1. 多任务"></a>4.1. 多任务</h2><p>通常多任务都会设计为：Master-Worker 模式，Master来分配任务，worker来执行任务。<br>多进程：稳定性高，资源消耗大。（早期的Apache服务）<br>多线程：由于共享的模式，子线程可能会导致整个进程挂掉，但是通常比多进程快一些</p>
<h2 id="4-2-任务切换"><a href="#4-2-任务切换" class="headerlink" title="4.2. 任务切换"></a>4.2. 任务切换</h2><p>无论是多进程还是多线程，只要数量一多，效率就会下降。因为切换作业是有代价的，需要保存现场环境(CPU寄存器状态、内存页等等)，切换的速度虽然快，但如果作业一多，也是相当耗费时间。</p>
<h2 id="4-3-计算密集型-Vs-IO密集型"><a href="#4-3-计算密集型-Vs-IO密集型" class="headerlink" title="4.3. 计算密集型 Vs IO密集型"></a>4.3. 计算密集型 Vs IO密集型</h2><p>计算密集型：这类任务通常需要大量计算，消耗CPU，如：视频解码。这种类型虽然也可以多任务完成，但是任务越多，花在切换任务的时间越多，CPU执行效率越低。如果要高效的利用CPU，就要使计算任务的数量等于CPU核心数。同时，代码的执行效率也至关重要，选择效率高的语言，如：C，比较合适。<br>IO密集型：这类任务通常是主要涉及网络、磁盘的任务。对CPU消耗少，大部分时间都用在等待IO操作完成，因此一般情况下，任务越多，效率越高，比如：Wed应用。但是，在这种情况下使用执行效率高的编程语言并不会产生很大作用，因此可以选择有利于开发效率的语言，例如：python</p>
<h2 id="4-4-异步IO"><a href="#4-4-异步IO" class="headerlink" title="4.4. 异步IO"></a>4.4. 异步IO</h2><p>由于CPU和IO之间的速度差异，大多数时间都会花在IO等待上，因此我们才需要多进程和多线程来并发的执行任务。不过现代操作系统也做出了巨大改进，支持了异步IO。这种全新的模型称为事件驱动模型，如Nginx，在单核CPU上采用单进程模式就可以高效的支持多任务了。Python语言中的单线程异步模型称为: 协程，这样一来就可以基于事件驱动的来编写多任务程序了。</p>
<h1 id="5-分布式进程"><a href="#5-分布式进程" class="headerlink" title="5. 分布式进程"></a>5. 分布式进程</h1><p>Python的multiprocessing模块不但支持多进程，其中的managers子模块还支持把多进程分布到多个机器上。依靠网络通信，一个服务进程可以作为调度者，将任务分布到其他机器上。<br>将通过Queue通信的多进程分布到两台机器上: 通过managers模块把Queue通过网络暴露出去即可。</p>
<h2 id="5-1-Master机器-进程"><a href="#5-1-Master机器-进程" class="headerlink" title="5.1. Master机器(进程)"></a>5.1. Master机器(进程)</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random, time, queue</span><br><span class="line"><span class="keyword">from</span> multiprocessing.managers <span class="keyword">import</span> BaseManager</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送任务的队列</span></span><br><span class="line">task_queue = queue.Queue()</span><br><span class="line"><span class="comment"># 接收结果的队列</span></span><br><span class="line">result_queue = queue.Queue()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 继承BaseManager</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QueueManager</span>(<span class="params">BaseManager</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将两个Queue注册到网络上，callable参数关联了Queue对象</span></span><br><span class="line">QueueManager.register(<span class="string">&#x27;get_task_queue&#x27;</span>, callable=<span class="keyword">lambda</span>: task_queue)</span><br><span class="line">QueueManager.register(<span class="string">&#x27;get_result_queue&#x27;</span>, callable=<span class="keyword">lambda</span>: result_queue)</span><br><span class="line"><span class="comment"># 绑定端口8000，设置验证码: &#x27;test&#x27;</span></span><br><span class="line">manager = QueueManager(address=(<span class="string">&#x27;&#x27;</span>, <span class="number">8000</span>), authkey=<span class="string">b&#x27;test&#x27;</span>)</span><br><span class="line"><span class="comment"># 启动Queue</span></span><br><span class="line">manager.start()</span><br><span class="line"><span class="comment"># 通过网络访问的Queue对象</span></span><br><span class="line">task = manager.get_task_queue()</span><br><span class="line">result = manager.get_result_queue()</span><br><span class="line"><span class="comment"># 放入几个任务</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">    n = random.randint(<span class="number">0</span>, <span class="number">1000</span>)</span><br><span class="line">    print(<span class="string">&#x27;Put task %d...&#x27;</span> % n)</span><br><span class="line">    task.put(n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从result队列读取结果</span></span><br><span class="line">print(<span class="string">&#x27;Try get results...&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">    r = result.get(timeout=<span class="number">10</span>)</span><br><span class="line">    print(<span class="string">&#x27;Result: %s&#x27;</span> % r)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭</span></span><br><span class="line">manager.shutdown()</span><br><span class="line">print(<span class="string">&#x27;Master Exit.&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="5-2-Worker机器-进程-因为Queue对象存储在Master的进程中，因此worker中并没有创建Queue的代码"><a href="#5-2-Worker机器-进程-因为Queue对象存储在Master的进程中，因此worker中并没有创建Queue的代码" class="headerlink" title="5.2. Worker机器(进程) : 因为Queue对象存储在Master的进程中，因此worker中并没有创建Queue的代码"></a>5.2. Worker机器(进程) : 因为Queue对象存储在Master的进程中，因此worker中并没有创建Queue的代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time, sys, queue</span><br><span class="line"><span class="keyword">from</span> multiprocessing.managers <span class="keyword">import</span> BaseManager</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建类似的QueueManger</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QueueManager</span>(<span class="params">BaseManager</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 由于QueueManager只从网络上获取Queue, 因此注册时只提供名字</span></span><br><span class="line">QueueManager.register(<span class="string">&#x27;get_task_queue&#x27;</span>)</span><br><span class="line">QueueManager.register(<span class="string">&#x27;get_result_queue&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接到Master服务器</span></span><br><span class="line">server_addr = <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">print(<span class="string">&#x27;Connect to server %s...&#x27;</span> % server_addr)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 端口和验证码与Master保持一致</span></span><br><span class="line">m = QueueManager(address=(<span class="string">&#x27;&#x27;</span>, <span class="number">8000</span>), authkey=<span class="string">b&#x27;test&#x27;</span>)</span><br><span class="line"><span class="comment"># 通过网络连接</span></span><br><span class="line">m.connect()</span><br><span class="line"><span class="comment"># 获取Queue的对象</span></span><br><span class="line">task = m.get_task_queue()</span><br><span class="line">result = m.get_result_queue()</span><br><span class="line"><span class="comment"># 从task队列读取任务，并把结果写入result队列</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        n = task.get(timeout=<span class="number">1</span>)</span><br><span class="line">        print(<span class="string">&#x27;Run task %d * %d&#x27;</span> % (n, n))</span><br><span class="line">        r = <span class="string">&#x27;%d * %d = %d&#x27;</span> % (n, n, n*n)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        result.put(r)</span><br><span class="line">    <span class="keyword">except</span> queue.Empty:</span><br><span class="line">        print(<span class="string">&#x27;Task queue is empty.&#x27;</span>)</span><br><span class="line"><span class="comment"># 处理结果</span></span><br><span class="line">print(<span class="string">&#x27;Worker Exit.&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="5-3-输出"><a href="#5-3-输出" class="headerlink" title="5.3. 输出"></a>5.3. 输出</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(<span class="number">1</span>). Master</span><br><span class="line">Try get results...</span><br><span class="line">Result: <span class="number">463</span> * <span class="number">463</span> = <span class="number">214369</span></span><br><span class="line">Result: <span class="number">322</span> * <span class="number">322</span> = <span class="number">103684</span></span><br><span class="line">Result: <span class="number">567</span> * <span class="number">567</span> = <span class="number">321489</span></span><br><span class="line">Result: <span class="number">372</span> * <span class="number">372</span> = <span class="number">138384</span></span><br><span class="line">Result: <span class="number">120</span> * <span class="number">120</span> = <span class="number">14400</span></span><br><span class="line">Master Exit.</span><br><span class="line"></span><br><span class="line">(<span class="number">2</span>). Worker</span><br><span class="line">Connect to server <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>...</span><br><span class="line">Run task <span class="number">463</span> * <span class="number">463</span></span><br><span class="line">Run task <span class="number">322</span> * <span class="number">322</span></span><br><span class="line">Run task <span class="number">567</span> * <span class="number">567</span></span><br><span class="line">Run task <span class="number">372</span> * <span class="number">372</span></span><br><span class="line">Run task <span class="number">120</span> * <span class="number">120</span></span><br><span class="line">Worker Exit.</span><br></pre></td></tr></table></figure>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>Computer Science</category>
      </categories>
      <tags>
        <tag>Python Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - Theme 7 Error and Debugging</title>
    <url>/2020/09/28/Python-Theme-7-Error-and-Debugging/</url>
    <content><![CDATA[<h1 id="1-错误处理"><a href="#1-错误处理" class="headerlink" title="1. 错误处理"></a>1. 错误处理</h1><h2 id="1-1-异常"><a href="#1-1-异常" class="headerlink" title="1.1. 异常"></a>1.1. 异常</h2><p>异常: 因为程序出现了错误而在正常控制流以外采取的行为<br>异常也是一个类，类的继承关系：<a href="https://docs.python.org/3/library/exceptions.html#exception-hierarchy">https://docs.python.org/3/library/exceptions.html#exception-hierarchy</a></p>
<a id="more"></a>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">div</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(a / b) <span class="comment">#在try块中出现错误会直接去找except块，不执行try块中剩下代码</span></span><br><span class="line">        print(b)</span><br><span class="line">    <span class="keyword">except</span> ZeroDivisionError: <span class="comment">#精准捕获后可自定义输出提示</span></span><br><span class="line">        print(<span class="string">&quot;Error: b should not be 0 !!&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e: <span class="comment">#没有被捕获的异常全部在Exception中，这时最好将捕获到的信息输出提示</span></span><br><span class="line">        print(<span class="string">&quot;Unexpected Error: &#123;&#125;&quot;</span>.format(e))</span><br><span class="line">    <span class="keyword">else</span>: <span class="comment">#如果没有异常会执行else语句</span></span><br><span class="line">        print(<span class="string">&#x27;Run into else only when everything goes well&#x27;</span>)</span><br><span class="line">    <span class="keyword">finally</span>: <span class="comment">#finally语句一定会被执行; 一般会用于最后释放资源(文件、网络连接)</span></span><br><span class="line">        print(<span class="string">&#x27;Always run into finally block.&#x27;</span>)</span><br><span class="line">    print(<span class="string">&quot;END&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Test1</span></span><br><span class="line">div(<span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">Error: b should <span class="keyword">not</span> be <span class="number">0</span> !!</span><br><span class="line">Always run into <span class="keyword">finally</span> block.</span><br><span class="line">END</span><br><span class="line"></span><br><span class="line"><span class="comment">#Test2</span></span><br><span class="line">div(<span class="number">2</span>, <span class="string">&#x27;bad type&#x27;</span>)</span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">Unexpected Error: unsupported operand type(s) <span class="keyword">for</span> /: <span class="string">&#x27;int&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;str&#x27;</span></span><br><span class="line">Always run into <span class="keyword">finally</span> block.</span><br><span class="line">END</span><br><span class="line"></span><br><span class="line"><span class="comment">#Test3</span></span><br><span class="line">div(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line"><span class="number">0.5</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">Run into <span class="keyword">else</span> only when everything goes well</span><br><span class="line">Always run into <span class="keyword">finally</span> block.</span><br><span class="line">END</span><br></pre></td></tr></table></figure>

<h2 id="1-2-程序的调用栈"><a href="#1-2-程序的调用栈" class="headerlink" title="1.2. 程序的调用栈"></a>1.2. 程序的调用栈</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">div</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> a/b</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">double</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> div(a, b) * <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> double(a, b)</span><br><span class="line"></span><br><span class="line">main(<span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果没有捕获异常，则由python解释器抛出的错误。错误一直向上抛，直至被解释器捕获</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;/Users/peterson/PycharmProjects/LiaoxuefengLearn/test3.py&quot;</span>, line <span class="number">18</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    print(main(<span class="number">2</span>, <span class="number">0</span>))</span><br><span class="line">  File <span class="string">&quot;/Users/peterson/PycharmProjects/LiaoxuefengLearn/test3.py&quot;</span>, line <span class="number">14</span>, <span class="keyword">in</span> main</span><br><span class="line">    <span class="keyword">return</span> double(a, b)</span><br><span class="line">  File <span class="string">&quot;/Users/peterson/PycharmProjects/LiaoxuefengLearn/test3.py&quot;</span>, line <span class="number">10</span>, <span class="keyword">in</span> double</span><br><span class="line">    <span class="keyword">return</span> div(a, b) * <span class="number">2</span></span><br><span class="line">  File <span class="string">&quot;/Users/peterson/PycharmProjects/LiaoxuefengLearn/test3.py&quot;</span>, line <span class="number">6</span>, <span class="keyword">in</span> div</span><br><span class="line">    <span class="keyword">return</span> a/b</span><br><span class="line">ZeroDivisionError: division by zero</span><br></pre></td></tr></table></figure>

<h2 id="1-3-在合适的地方捕获错误"><a href="#1-3-在合适的地方捕获错误" class="headerlink" title="1.3. 在合适的地方捕获错误"></a>1.3. 在合适的地方捕获错误</h2><p>python捕获可以跨越多层调用，也就是说只需要在合适的层次捕获错误即可</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">div</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> a/b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">double</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> div(a, b) * <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> double(a, b)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">&quot;Unexpected Error: &#123;&#125;&quot;</span>.format(e))</span><br><span class="line"></span><br><span class="line"><span class="comment">#Test1</span></span><br><span class="line">main(<span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">Unexpected Error: division by zero</span><br><span class="line"></span><br><span class="line"><span class="comment">#Test2</span></span><br><span class="line">main(<span class="number">2</span>, <span class="string">&#x27;bad type&#x27;</span>)</span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">Unexpected Error: unsupported operand type(s) <span class="keyword">for</span> /: <span class="string">&#x27;int&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;str&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="1-4-错误记录-log"><a href="#1-4-错误记录-log" class="headerlink" title="1.4. 错误记录(log)"></a>1.4. 错误记录(log)</h2><p>异常捕获可以把错误栈记录下来，同时让程序继续执行下去</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">div</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> a/b</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">double</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> div(a, b) * <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> double(a, b)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        logging.exception(e)</span><br><span class="line">    print(<span class="string">&quot;=&quot;</span> * <span class="number">6</span>, <span class="string">&#x27;END&#x27;</span>, <span class="string">&quot;=&quot;</span> * <span class="number">6</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main(<span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出(在没有触发程序中断的情况下并记录了log)</span></span><br><span class="line">====== END ======</span><br><span class="line">ERROR:root:division by zero</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;/Users/xxx/test3.py&quot;</span>, line <span class="number">16</span>, <span class="keyword">in</span> main</span><br><span class="line">    <span class="keyword">return</span> double(a, b)</span><br><span class="line">  File <span class="string">&quot;/Users/xxx/test3.py&quot;</span>, line <span class="number">11</span>, <span class="keyword">in</span> double</span><br><span class="line">    <span class="keyword">return</span> div(a, b) * <span class="number">2</span></span><br><span class="line">  File <span class="string">&quot;/Users/xxx/test3.py&quot;</span>, line <span class="number">7</span>, <span class="keyword">in</span> div</span><br><span class="line">    <span class="keyword">return</span> a/b</span><br><span class="line">ZeroDivisionError: division by zero</span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure>

<h2 id="1-5-自定义错误类并抛出错误"><a href="#1-5-自定义错误类并抛出错误" class="headerlink" title="1.5. 自定义错误类并抛出错误"></a>1.5. 自定义错误类并抛出错误</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 一般只有在特别必要的时候才自己定义</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyError</span>(<span class="params">BaseException</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">error</span>():</span></span><br><span class="line">    <span class="keyword">raise</span> MyError(<span class="string">&quot;This is an error raised by myself&quot;</span>)</span><br><span class="line"></span><br><span class="line">error()</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;/Users/xxx/test3.py&quot;</span>, line <span class="number">12</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    error()</span><br><span class="line">  File <span class="string">&quot;/Users/xxx/test3.py&quot;</span>, line <span class="number">10</span>, <span class="keyword">in</span> error</span><br><span class="line">    <span class="keyword">raise</span> MyError(<span class="string">&quot;This is an error raised by myself&quot;</span>)</span><br><span class="line">__main__.MyError: This <span class="keyword">is</span> an error raised by myself</span><br></pre></td></tr></table></figure>

<h1 id="2-调试"><a href="#2-调试" class="headerlink" title="2. 调试"></a>2. 调试</h1><h2 id="2-1-print-简单粗暴"><a href="#2-1-print-简单粗暴" class="headerlink" title="2.1. print() - 简单粗暴"></a>2.1. print() - 简单粗暴</h2><p>可以直接把可能有问题的变量打印出来。但是未来还需要手动删除这些print，在运行结果中也包含了过多垃圾信息。</p>
<h2 id="2-2-assert-断言"><a href="#2-2-assert-断言" class="headerlink" title="2.2. assert - 断言"></a>2.2. assert - 断言</h2><p>凡是用print()的地方都可以替换成assert，如果断言失败就会抛出 AssertionError。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">div</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">assert</span> b != <span class="number">0</span>, <span class="string">&#x27;b is zero!&#x27;</span> <span class="comment">#设置断言</span></span><br><span class="line">    <span class="keyword">return</span> a/b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">double</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> div(a, b) * <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> double(a, b)</span><br><span class="line">    print(<span class="string">&quot;=&quot;</span> * <span class="number">6</span>, <span class="string">&#x27;END&#x27;</span>, <span class="string">&quot;=&quot;</span> * <span class="number">6</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main(<span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;/Users/xxx/test3.py&quot;</span>, line <span class="number">20</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    main(<span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line">  File <span class="string">&quot;/Users/xxx/test3.py&quot;</span>, line <span class="number">16</span>, <span class="keyword">in</span> main</span><br><span class="line">    <span class="keyword">return</span> double(a, b)</span><br><span class="line">  File <span class="string">&quot;/Users/xxx/test3.py&quot;</span>, line <span class="number">12</span>, <span class="keyword">in</span> double</span><br><span class="line">    <span class="keyword">return</span> div(a, b) * <span class="number">2</span></span><br><span class="line">  File <span class="string">&quot;/Users/xxx/test3.py&quot;</span>, line <span class="number">7</span>, <span class="keyword">in</span> div</span><br><span class="line">    <span class="keyword">assert</span> b != <span class="number">0</span>, <span class="string">&#x27;b is zero!&#x27;</span></span><br><span class="line">AssertionError: b <span class="keyword">is</span> zero!  <span class="comment">#断言在此</span></span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>关闭断言: python -O xx.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>python3 -O test3.py</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;test3.py&quot;</span>, line <span class="number">20</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    main(<span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line">  File <span class="string">&quot;test3.py&quot;</span>, line <span class="number">16</span>, <span class="keyword">in</span> main</span><br><span class="line">    <span class="keyword">return</span> double(a, b)</span><br><span class="line">  File <span class="string">&quot;test3.py&quot;</span>, line <span class="number">12</span>, <span class="keyword">in</span> double</span><br><span class="line">    <span class="keyword">return</span> div(a, b) * <span class="number">2</span></span><br><span class="line">  File <span class="string">&quot;test3.py&quot;</span>, line <span class="number">8</span>, <span class="keyword">in</span> div</span><br><span class="line">    <span class="keyword">return</span> a/b</span><br><span class="line">ZeroDivisionError: division by zero <span class="comment">#这样一来就忽略了所有 assert</span></span><br></pre></td></tr></table></figure>

<h2 id="2-3-logging-记录日志分析"><a href="#2-3-logging-记录日志分析" class="headerlink" title="2.3. logging - 记录日志分析"></a>2.3. logging - 记录日志分析</h2><p>和assert相比，logging并不会抛出错误而是记录，可以选择记录形式、保存文件等方式。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logging.basicConfig(level=logging.INFO)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">div</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    logging.info(<span class="string">&#x27;b=%d&#x27;</span> % b)</span><br><span class="line">    <span class="keyword">return</span> a/b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">double</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> div(a, b) * <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> double(a, b)</span><br><span class="line">    print(<span class="string">&quot;=&quot;</span> * <span class="number">6</span>, <span class="string">&#x27;END&#x27;</span>, <span class="string">&quot;=&quot;</span> * <span class="number">6</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main(<span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">INFO:root:b=<span class="number">0</span>  <span class="comment">#日志输出在此</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;/Users/xxx/test3.py&quot;</span>, line <span class="number">21</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    main(<span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line">  File <span class="string">&quot;/Users/xxx/test3.py&quot;</span>, line <span class="number">17</span>, <span class="keyword">in</span> main</span><br><span class="line">    <span class="keyword">return</span> double(a, b)</span><br><span class="line">  File <span class="string">&quot;/Users/xxx/test3.py&quot;</span>, line <span class="number">13</span>, <span class="keyword">in</span> double</span><br><span class="line">    <span class="keyword">return</span> div(a, b) * <span class="number">2</span></span><br><span class="line">  File <span class="string">&quot;/Users/xxx/test3.py&quot;</span>, line <span class="number">9</span>, <span class="keyword">in</span> div</span><br><span class="line">    <span class="keyword">return</span> a/b</span><br><span class="line">ZeroDivisionError: division by zero</span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>日志配置tips：</p>
<ol>
<li>日志级别：CRITICAL &gt; ERROR &gt; WARNING &gt; INFO &gt; DEBUG &gt; NOTSET</li>
<li>可以将日志配置保存到一个文件中方便管理</li>
<li>自定义日志的记录格式方便日后的分析</li>
</ol>
<h2 id="2-4-pdb-python调试器"><a href="#2-4-pdb-python调试器" class="headerlink" title="2.4. pdb - python调试器"></a>2.4. pdb - python调试器</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>python3 -m pdb test3.py <span class="comment">#启动调试器</span></span><br><span class="line">&gt; /Users/peterson/PycharmProjects/LiaoxuefengLearn/test3.py(<span class="number">5</span>)&lt;module&gt;()</span><br><span class="line">-&gt; def div(a, b):</span><br><span class="line">(Pdb) n <span class="comment">#单步调试</span></span><br><span class="line">&gt; /Users/peterson/PycharmProjects/LiaoxuefengLearn/test3.py(<span class="number">9</span>)&lt;module&gt;()</span><br><span class="line">-&gt; def double(a, b):</span><br><span class="line">(Pdb) n</span><br><span class="line">&gt; /Users/peterson/PycharmProjects/LiaoxuefengLearn/test3.py(<span class="number">13</span>)&lt;module&gt;()</span><br><span class="line">-&gt; def main(a, b):</span><br><span class="line">(Pdb) n</span><br><span class="line">&gt; /Users/peterson/PycharmProjects/LiaoxuefengLearn/test3.py(<span class="number">18</span>)&lt;module&gt;()</span><br><span class="line">-&gt; main(2, 0)</span><br><span class="line">(Pdb) n</span><br><span class="line">ZeroDivisionError: division by zero</span><br><span class="line">&gt; /Users/peterson/PycharmProjects/LiaoxuefengLearn/test3.py(<span class="number">18</span>)&lt;module&gt;()</span><br><span class="line">-&gt; main(2, 0)</span><br><span class="line">(Pdb) q <span class="comment">#退出</span></span><br></pre></td></tr></table></figure>

<p>设置断点：pdb.set_trace()</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pdb</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">div</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    pdb.set_trace() <span class="comment">#程序运行到这里会自动暂停</span></span><br><span class="line">    <span class="keyword">return</span> a/b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">double</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> div(a, b) * <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> double(a, b)</span><br><span class="line">    print(<span class="string">&quot;=&quot;</span> * <span class="number">6</span>, <span class="string">&#x27;END&#x27;</span>, <span class="string">&quot;=&quot;</span> * <span class="number">6</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main(<span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">-&gt; return a/b</span><br><span class="line">(Pdb) p b <span class="comment">#当程序暂停到这里时，可以查看b变量的内容</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure>

<h2 id="2-5-IDE-最佳推荐-Pycharm"><a href="#2-5-IDE-最佳推荐-Pycharm" class="headerlink" title="2.5. IDE - 最佳推荐(Pycharm)"></a>2.5. IDE - 最佳推荐(Pycharm)</h2><h1 id="3-单元测试"><a href="#3-单元测试" class="headerlink" title="3. 单元测试"></a>3. 单元测试</h1><p>单元测试就是对一个模块、一个函数或者一个类进行正确性检测的工作。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestStringMethods</span>(<span class="params">unittest.TestCase</span>):</span> <span class="comment">#编写一个测试类，继承unittest.TestCase就创建了一个测试样例</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUp</span>(<span class="params">self</span>):</span> <span class="comment">#测试前置方法: 测试框架会应用于每一个测试方法</span></span><br><span class="line">        print(<span class="string">&#x27;setUp...&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_upper</span>(<span class="params">self</span>):</span> <span class="comment">#测试方法以&quot;test&quot;开头</span></span><br><span class="line">        self.assertEqual(<span class="string">&#x27;foo&#x27;</span>.upper(), <span class="string">&#x27;FOO&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_isupper</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.assertTrue(<span class="string">&#x27;FOO&#x27;</span>.isupper())</span><br><span class="line">        self.assertFalse(<span class="string">&#x27;Foo&#x27;</span>.isupper())</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_split</span>(<span class="params">self</span>):</span></span><br><span class="line">        s = <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">        self.assertEqual(s.split(), [<span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;world&#x27;</span>])</span><br><span class="line">        <span class="comment"># check that s.split fails when the separator is not a string</span></span><br><span class="line">        <span class="keyword">with</span> self.assertRaises(TypeError): <span class="comment">#抛出一个特定异常</span></span><br><span class="line">            s.split(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDown</span>(<span class="params">self</span>):</span> <span class="comment">#一旦setUp()运行成功，无论如何都会执行后续清理工作</span></span><br><span class="line">        print(<span class="string">&#x27;tearDown...&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    unittest.main()</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出:</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>python test4.py -v</span><br><span class="line">test_isupper (__main__.TestStringMethods) ... setUp...</span><br><span class="line">tearDown...</span><br><span class="line">ok</span><br><span class="line">test_split (__main__.TestStringMethods) ... setUp...</span><br><span class="line">tearDown...</span><br><span class="line">ok</span><br><span class="line">test_upper (__main__.TestStringMethods) ... setUp...</span><br><span class="line">tearDown...</span><br><span class="line">ok</span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">Ran <span class="number">3</span> tests <span class="keyword">in</span> <span class="number">0.000</span>s</span><br><span class="line"></span><br><span class="line">OK</span><br></pre></td></tr></table></figure>
<p>(1). 单元测试可以有效地测试某个程序的行为，也为重构代码提供了便利。<br>(2). 单元测试要覆盖常用的输入输出组合、边界条件和异常<br>(3). 单元测试要尽可能简单以避免测试代码出现bug</p>
<h1 id="4-文档测试"><a href="#4-文档测试" class="headerlink" title="4. 文档测试"></a>4. 文档测试</h1><p>可以看到在很多python官方文档中都会附有示例代码，这些代码不仅可以粘贴出来在命令行执行，而且也可以直接执行。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">This is the &quot;example&quot; module.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The example module supplies one function, factorial().  For example,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"><span class="meta">&gt;&gt;&gt; </span>factorial(5)</span></span><br><span class="line"><span class="string">120</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">factorial</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Return the factorial of n, an exact integer &gt;= 0.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; [factorial(n) for n in range(6)]</span></span><br><span class="line"><span class="string">    [1, 1, 2, 6, 24, 120]</span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; factorial(30)</span></span><br><span class="line"><span class="string">    265252859812191058636308480000000</span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; factorial(-1)</span></span><br><span class="line"><span class="string">    Traceback (most recent call last):</span></span><br><span class="line"><span class="string">        ...</span></span><br><span class="line"><span class="string">    ValueError: n must be &gt;= 0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Factorials of floats are OK, but the float must be an exact integer:</span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; factorial(30.1)</span></span><br><span class="line"><span class="string">    Traceback (most recent call last):</span></span><br><span class="line"><span class="string">        ...</span></span><br><span class="line"><span class="string">    ValueError: n must be exact integer</span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; factorial(30.0)</span></span><br><span class="line"><span class="string">    265252859812191058636308480000000</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    It must also not be ridiculously large:</span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; factorial(1e100)</span></span><br><span class="line"><span class="string">    Traceback (most recent call last):</span></span><br><span class="line"><span class="string">        ...</span></span><br><span class="line"><span class="string">    OverflowError: n too large</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> math</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> n &gt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&quot;n must be &gt;= 0&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> math.floor(n) != n:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&quot;n must be exact integer&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> n+<span class="number">1</span> == n:  <span class="comment"># catch a value like 1e300</span></span><br><span class="line">        <span class="keyword">raise</span> OverflowError(<span class="string">&quot;n too large&quot;</span>)</span><br><span class="line">    result = <span class="number">1</span></span><br><span class="line">    factor = <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> factor &lt;= n:</span><br><span class="line">        result *= factor</span><br><span class="line">        factor += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">import</span> doctest</span><br><span class="line">    doctest.testmod()</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>python test4.py -v <span class="comment">#写在注释中的示例都会被测试</span></span><br><span class="line">Trying:</span><br><span class="line">    factorial(<span class="number">5</span>)</span><br><span class="line">Expecting:</span><br><span class="line">    <span class="number">120</span></span><br><span class="line">ok</span><br><span class="line">Trying:</span><br><span class="line">    [factorial(n) <span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">6</span>)]</span><br><span class="line">Expecting:</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">24</span>, <span class="number">120</span>]</span><br><span class="line">ok</span><br><span class="line">Trying:</span><br><span class="line">    factorial(<span class="number">30</span>)</span><br><span class="line">Expecting:</span><br><span class="line">    <span class="number">265252859812191058636308480000000</span></span><br><span class="line">ok</span><br><span class="line">Trying:</span><br><span class="line">    factorial(<span class="number">-1</span>)</span><br><span class="line">Expecting:</span><br><span class="line">    Traceback (most recent call last):</span><br><span class="line">        ...</span><br><span class="line">    ValueError: n must be &gt;= <span class="number">0</span></span><br><span class="line">ok</span><br><span class="line">Trying:</span><br><span class="line">    factorial(<span class="number">30.1</span>)</span><br><span class="line">Expecting:</span><br><span class="line">    Traceback (most recent call last):</span><br><span class="line">        ...</span><br><span class="line">    ValueError: n must be exact integer</span><br><span class="line">ok</span><br><span class="line">Trying:</span><br><span class="line">    factorial(<span class="number">30.0</span>)</span><br><span class="line">Expecting:</span><br><span class="line">    <span class="number">265252859812191058636308480000000</span></span><br><span class="line">ok</span><br><span class="line">Trying:</span><br><span class="line">    factorial(<span class="number">1e100</span>)</span><br><span class="line">Expecting:</span><br><span class="line">    Traceback (most recent call last):</span><br><span class="line">        ...</span><br><span class="line">    OverflowError: n too large</span><br><span class="line">ok</span><br><span class="line"><span class="number">2</span> items passed all tests:</span><br><span class="line">   <span class="number">1</span> tests <span class="keyword">in</span> __main__</span><br><span class="line">   <span class="number">6</span> tests <span class="keyword">in</span> __main__.factorial</span><br><span class="line"><span class="number">7</span> tests <span class="keyword">in</span> <span class="number">2</span> items.</span><br><span class="line"><span class="number">7</span> passed <span class="keyword">and</span> <span class="number">0</span> failed.</span><br><span class="line">Test passed.</span><br></pre></td></tr></table></figure>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>Computer Science</category>
      </categories>
      <tags>
        <tag>Python Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Theme 1 - Introducing Research</title>
    <url>/2019/11/09/Theme-1-Introducing-Research/</url>
    <content><![CDATA[<h1 id="1-Introduction-to-Research"><a href="#1-Introduction-to-Research" class="headerlink" title="1. Introduction to Research"></a>1. Introduction to Research</h1><h2 id="1-1-Why-do-a-research-project"><a href="#1-1-Why-do-a-research-project" class="headerlink" title="1.1. Why do a research project?"></a>1.1. Why do a research project?</h2><blockquote>
<p>To develop the following skills essential for your future study at the University of Nottingham.</p>
</blockquote>
<ul>
<li>Knowledge and understanding</li>
<li>Reviewing literature</li>
<li>Synthesising ideas</li>
<li>Constructing arguments</li>
<li>Planning and design</li>
<li>Academic writing</li>
</ul>
<a id="more"></a>

<h2 id="1-2-What-is-research"><a href="#1-2-What-is-research" class="headerlink" title="1.2. What is research?"></a>1.2. What is research?</h2><ul>
<li>“…a process that people undertake in a systematic way in order to find out things, thereby increasing their knowledge” (Source: Saunders et al, 2016, p. 5)</li>
<li>“a detailed study of a subject, especially in order to discover (new) information or reach a (new) understanding” (Source: Cambridge Online Dictionary)</li>
</ul>
<h2 id="1-3-Who-undertakes-research"><a href="#1-3-Who-undertakes-research" class="headerlink" title="1.3. Who undertakes research?"></a>1.3. Who undertakes research?</h2><ul>
<li>Global alliances/partnerships<ul>
<li>Global organisations: The United Nations, the World Economic     Forum and the World Health Organization</li>
<li>Research areas: Environmental, economic and health issues</li>
<li>People: Leading scientists and academics from across the globe, with a range of backgrounds, work together</li>
</ul>
</li>
<li>Charitable organisations<ul>
<li>Charities can have a research function. Eg. <a href="https://www.cancerresearchuk.org/">CANCER RESEARCH UK</a></li>
</ul>
</li>
<li>Practitioners<ul>
<li>Workplace-led research</li>
<li>Conducted by individuals within their professional field</li>
<li>Researchers include: Teachers, nurses and social workers</li>
<li>The purpose of the research could be to: solve current problems in the workplace or to evaluate current service provision</li>
</ul>
</li>
<li>Academics<ul>
<li>All academic disciplines have their own areas of research</li>
</ul>
</li>
</ul>
<h2 id="1-4-The-benefits-of-research"><a href="#1-4-The-benefits-of-research" class="headerlink" title="1.4. The benefits of research"></a>1.4. The benefits of research</h2><ul>
<li>Deepen understanding</li>
<li>Widen knowledge</li>
<li>Improve practice</li>
<li>Solve problems / find solutions</li>
<li>Reduce uncertainty</li>
<li>Secure advantage</li>
<li>Gain inspiration</li>
</ul>
<h1 id="2-Starting-Research"><a href="#2-Starting-Research" class="headerlink" title="2. Starting Research"></a>2. Starting Research</h1><h2 id="2-1-The-research-cycle"><a href="#2-1-The-research-cycle" class="headerlink" title="2.1. The research cycle"></a>2.1. The research cycle</h2><blockquote>
<p>Research needs to be properly organised and carefully planned. It needs to be systematic. This is often referred to as the ‘research cycle’.</p>
</blockquote>
<ol>
<li>Identify the research topic and research questions</li>
<li>Conduct a search of the existing literature</li>
<li>Design and plan the research project</li>
<li>Gather data</li>
<li>Collate and analyse results</li>
<li>Write up the project</li>
<li>Present/publish research</li>
</ol>
<h2 id="2-2-Types-of-Research"><a href="#2-2-Types-of-Research" class="headerlink" title="2.2. Types of Research"></a>2.2. Types of Research</h2><blockquote>
<p>A research project may adopt more than one of these approaches</p>
</blockquote>
<h3 id="2-2-1-Exploratory"><a href="#2-2-1-Exploratory" class="headerlink" title="2.2.1. Exploratory"></a>2.2.1. Exploratory</h3><ul>
<li>Preliminary investigation into a relatively unknown topic</li>
<li>Focuses on discovering ideas and gaining insights</li>
<li>Methods:<ul>
<li>literature search</li>
<li>individual interviews</li>
<li>focus group interviews</li>
</ul>
</li>
<li>Research is flexible and adaptable</li>
<li>Findings can lead to further, more focused studies</li>
</ul>
<h3 id="2-2-2-Descriptive"><a href="#2-2-2-Descriptive" class="headerlink" title="2.2.2. Descriptive"></a>2.2.2. Descriptive</h3><ul>
<li>Can follow exploratory research to provide a researcher with a better understanding of a topic</li>
<li>Aims to construct an accurate, in-depth profile of events, persons, situations or phenomena</li>
<li>Focuses on <strong><em>‘what’</em></strong> rather than ‘why’</li>
<li>Research results will be accurate but will not offer explanations</li>
<li>Findings can lead to explanatory research</li>
</ul>
<h3 id="2-2-3-Explanatory"><a href="#2-2-3-Explanatory" class="headerlink" title="2.2.3. Explanatory"></a>2.2.3. Explanatory</h3><ul>
<li>Can follow descriptive research</li>
<li>Researchers test a hypothesis or theory rather than seek to answer a question</li>
<li>The researcher wants to establish evidence for cause/effect relationships or to explain a phenomenon</li>
<li>Research focuses on answering <strong><em>‘why’ and ‘how’</em></strong> questions</li>
<li>Forms of explanatory research include:<ul>
<li>experimental research</li>
<li>non-experimental research</li>
<li>causal modeling</li>
</ul>
</li>
</ul>
<h3 id="2-2-4-Evaluative"><a href="#2-2-4-Evaluative" class="headerlink" title="2.2.4. Evaluative"></a>2.2.4. Evaluative</h3><ul>
<li>Involves judging the effectiveness of a process, strategy, programme or service in achieving its intended purpose(s)</li>
<li>Research aims to establish evidence of the effectiveness of this process etc</li>
<li>Focuses on answering <strong><em>‘what’, ‘how’, ‘why’ and ‘to what extent’</em></strong> questions</li>
<li>Research methods can include:<ul>
<li>surveys</li>
<li>questionnaires</li>
<li>interviews</li>
<li>focus groups</li>
</ul>
</li>
<li>Findings can be used to assess impact, improve practice and inform decision-making</li>
</ul>
<h2 id="2-3-Primary-vs-Secondary"><a href="#2-3-Primary-vs-Secondary" class="headerlink" title="2.3. Primary vs Secondary"></a>2.3. Primary vs Secondary</h2><ul>
<li>Primary research: uses information which researchers gather for themselves<ul>
<li>Experiment</li>
<li>Field test</li>
<li>Questionnaire</li>
<li>Direct observation</li>
<li>Face-to-face interview</li>
<li>Focus Group</li>
</ul>
</li>
<li>Secondary research: uses information gathered by other people in earlier studies<ul>
<li>Encyclopaedia</li>
<li>Journal article</li>
<li>Website</li>
<li>Newspaper</li>
<li>Magazine</li>
<li>Public records</li>
<li>Report</li>
<li>Book</li>
<li>Dictionary</li>
</ul>
</li>
</ul>
<h2 id="2-4-Textbook-Reading"><a href="#2-4-Textbook-Reading" class="headerlink" title="2.4. Textbook Reading"></a>2.4. Textbook Reading</h2><ul>
<li>pp.1~7</li>
</ul>
<hr>
<h1 id="3-Introducing-Primary-Research"><a href="#3-Introducing-Primary-Research" class="headerlink" title="3. Introducing Primary Research"></a>3. Introducing Primary Research</h1><h2 id="3-1-What-is-primary-research"><a href="#3-1-What-is-primary-research" class="headerlink" title="3.1. What is primary research?"></a>3.1. What is primary research?</h2><blockquote>
<p>Key characteristics of primary research</p>
</blockquote>
<ul>
<li>Role of researcher<ul>
<li>The researcher designs the project and collects the data themselves</li>
<li>The researcher is very involved in the process</li>
</ul>
</li>
<li>Data collection methods<ul>
<li>Survey</li>
<li>interview</li>
<li>questionnaire</li>
<li>poll</li>
<li>focus group</li>
<li>observation</li>
</ul>
</li>
<li>Time<ul>
<li>Data is collected during a specific research project and timeframe controlled by the researcher</li>
</ul>
</li>
<li>Advantages/Disadvantages:<ul>
<li>pros: The research will address the specific needs of the researcher</li>
<li>cons: Completion time is long, and the cost is generally high</li>
</ul>
</li>
</ul>
<h2 id="3-2-Data-collection-methods"><a href="#3-2-Data-collection-methods" class="headerlink" title="3.2. Data collection methods"></a>3.2. Data collection methods</h2><ul>
<li>Qualitative : (the study of human behaviour in an information rich area)<ul>
<li>Interviews</li>
<li>focus groups</li>
<li>observations</li>
<li>questionnaires(<strong>open questions</strong>)</li>
</ul>
</li>
<li>Quantitative: (objective, statistical analysis used)<ul>
<li>Structured methods  Eg. a questionnaire with <strong>closed questions</strong></li>
</ul>
</li>
<li>Mixed: A combination of qualitative and quantitative methods are used</li>
</ul>
<h2 id="3-3-Research-steps"><a href="#3-3-Research-steps" class="headerlink" title="3.3. Research steps"></a>3.3. Research steps</h2><ol>
<li>Be aware of strengths and limitations</li>
<li>Select a data collection method(qualitative/quantitative/mixed)</li>
<li>Select participants</li>
<li>Select measures</li>
<li>Select analyses</li>
</ol>
<h2 id="3-4-Ethical-considerations"><a href="#3-4-Ethical-considerations" class="headerlink" title="3.4. Ethical considerations"></a>3.4. Ethical considerations</h2><ul>
<li>Whichever research method you choose, you will need to ensure that your primary research is ethical</li>
<li>It is extremely important that no harm is done to your participants</li>
<li>Before beginning your primary research<ul>
<li>You will submit your research proposal to an ethics committee</li>
<li>Here, you will specify how you will deal with all possible ethical issues that may arise during your study</li>
</ul>
</li>
</ul>
<h2 id="3-5-Textbook-Reading"><a href="#3-5-Textbook-Reading" class="headerlink" title="3.5. Textbook Reading"></a>3.5. Textbook Reading</h2><ul>
<li>Ethics: pp. 36 - 40</li>
<li>Primary and secondary sources: pp. 58 - 62</li>
</ul>
<hr>
<h1 id="4-Introducing-Secondary-Research"><a href="#4-Introducing-Secondary-Research" class="headerlink" title="4. Introducing Secondary Research"></a>4. Introducing Secondary Research</h1><h2 id="4-1-What-is-secondary-research"><a href="#4-1-What-is-secondary-research" class="headerlink" title="4.1. What is secondary research?"></a>4.1. What is secondary research?</h2><blockquote>
<p>Key characteristics of secondary research</p>
</blockquote>
<ul>
<li>Role of researcher<ul>
<li>The researcher analyses, interprets or reviews existing data</li>
<li>The researcher must specify how this past data informs his/her current research</li>
</ul>
</li>
<li>Data collection methods<ul>
<li>Existing data available (online) e.g. government records such as census reports</li>
</ul>
</li>
<li>Time<ul>
<li>Secondary research can be quicker than primary research as data does not need to be collected</li>
</ul>
</li>
<li>Advantages/Disadvantages<ul>
<li>pros<ul>
<li>Quality of secondary data should be high</li>
<li>Very large data sets are available</li>
</ul>
</li>
<li>cons<ul>
<li>The data may not be fully appropriate for your research purposes</li>
<li>Data was originally collected with a different research question in mind</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="4-2-Methods-and-purposes-of-secondary-research"><a href="#4-2-Methods-and-purposes-of-secondary-research" class="headerlink" title="4.2. Methods and purposes of secondary research"></a>4.2. Methods and purposes of secondary research</h2><table>
<thead>
<tr>
<th>Method</th>
<th align="center">Purpose</th>
</tr>
</thead>
<tbody><tr>
<td>Using secondary data set in isolation</td>
<td align="center">Re-assessing a data set with a different research question in mind</td>
</tr>
<tr>
<td>Combining two secondary data sets</td>
<td align="center">Investigating the relationship between variables in two data sets or comparing findings from two past studies</td>
</tr>
<tr>
<td>Combining secondary and primary data sets</td>
<td align="center">Obtaining existing information that informs your primary research</td>
</tr>
</tbody></table>
<h2 id="4-3-Types-of-secondary-data"><a href="#4-3-Types-of-secondary-data" class="headerlink" title="4.3. Types of secondary data"></a>4.3. Types of secondary data</h2><blockquote>
<p>Quantitative and Qualitative</p>
</blockquote>
<ul>
<li>inform your current research with past data</li>
<li>re-assess a past data set</li>
</ul>
<h2 id="4-4-Sources-of-secondary-data"><a href="#4-4-Sources-of-secondary-data" class="headerlink" title="4.4. Sources of secondary data"></a>4.4. Sources of secondary data</h2><blockquote>
<p>The two most common sources of secondary data are internal and external</p>
</blockquote>
<h3 id="4-4-1-Internal-sources"><a href="#4-4-1-Internal-sources" class="headerlink" title="4.4.1. Internal sources"></a>4.4.1. Internal sources</h3><ul>
<li>Internal sources of data are those that are internal to the organisation you are researching<ul>
<li>Sales data</li>
<li>Financial data</li>
<li>Transport data</li>
<li>Marketing data</li>
<li>Customer data</li>
<li>Safety data</li>
</ul>
</li>
<li>The benefit of using these sources is that they are easily accessible and there is no associated financial cost in obtaining them.</li>
</ul>
<h3 id="4-4-2-External-sources"><a href="#4-4-2-External-sources" class="headerlink" title="4.4.2. External sources"></a>4.4.2. External sources</h3><ul>
<li>External sources of data have been collected by “somebody else<ul>
<li>Government sources</li>
<li>National and international institutions</li>
<li>Trade, business, and professional associations</li>
<li>Scientific journals</li>
<li>Commercial research organisations</li>
</ul>
</li>
<li>The benefit of external sources of data is that they provide comprehensive data.However, you may sometimes need more effort (or money) to obtain it.</li>
</ul>
<h2 id="4-5-Further-reading"><a href="#4-5-Further-reading" class="headerlink" title="4.5. Further reading:"></a>4.5. Further reading:</h2><blockquote>
<p>Church, R. M. (2002) The effective use of secondary data. Learning and Motivation. 33(1) pp. 32 – 45.</p>
</blockquote>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>TUNIC</category>
      </categories>
      <tags>
        <tag>PM600 Research Project</tag>
      </tags>
  </entry>
  <entry>
    <title>COMP4035 - 1.Basics</title>
    <url>/2020/10/08/COMP4035-1-Basics/</url>
    <content><![CDATA[<h1 id="1-Challenges-of-Computer-Networks"><a href="#1-Challenges-of-Computer-Networks" class="headerlink" title="1. Challenges of Computer Networks"></a>1. Challenges of Computer Networks</h1><h2 id="1-1-What-is-a-Computer-Network"><a href="#1-1-What-is-a-Computer-Network" class="headerlink" title="1.1.What is a Computer Network?"></a>1.1.What is a Computer Network?</h2><p>Wikipedia: A computer network is a group of computers that use a set of common communication protocols over digital interconnections for the purpose of sharing resources located on or provided by the network nodes.</p>
<h2 id="1-2-Classifying-Networks"><a href="#1-2-Classifying-Networks" class="headerlink" title="1.2. Classifying Networks"></a>1.2. Classifying Networks</h2><ul>
<li>By size: Local area networks (LANs) versus Wide area networks (WANs)</li>
<li>By connectivity: Point to point versus broadcast networks</li>
<li>By communication medium: Wired, wireless, satellite, Bluetooth, even your TV remote control!!</li>
<li>By mobility: Fixed versus mobile</li>
</ul>
<a id="more"></a>

<h2 id="1-3-Top-level-challenges"><a href="#1-3-Top-level-challenges" class="headerlink" title="1.3. Top level challenges"></a>1.3. Top level challenges</h2><ul>
<li>Security!</li>
<li>Problem determination/isolation</li>
<li>Heterogeneity</li>
<li>Providing a unified service environment</li>
</ul>
<h1 id="2-Challenges-of-sending-data"><a href="#2-Challenges-of-sending-data" class="headerlink" title="2.  Challenges of sending data"></a>2.  Challenges of sending data</h1><h2 id="2-1-Common-Issues-in-Networking"><a href="#2-1-Common-Issues-in-Networking" class="headerlink" title="2.1. Common Issues in Networking"></a>2.1. Common Issues in Networking</h2><ul>
<li>Framing and encoding</li>
<li>Addressing</li>
<li>Routing</li>
<li>Error detection and correction</li>
<li>Flow and congestion</li>
</ul>
<h1 id="3-Distributed-Systems"><a href="#3-Distributed-Systems" class="headerlink" title="3. Distributed Systems"></a>3. Distributed Systems</h1><h2 id="3-1-Definition"><a href="#3-1-Definition" class="headerlink" title="3.1. Definition"></a>3.1. Definition</h2><p>Wikipedia: A distributed system is a system whose components are located on different networked computers, which communicate and coordinate their actions by passing messages to one another. The components interact with one another in order to achieve a common goal.</p>
<h2 id="3-2-Advantages"><a href="#3-2-Advantages" class="headerlink" title="3.2. Advantages"></a>3.2. Advantages</h2><ul>
<li>Access to remote resources (sharing)</li>
<li>Access to computing power that you don’t have locally</li>
<li>Scalability</li>
<li>Robustness (duplication of resources)</li>
</ul>
<h2 id="3-3-What-is-IP-address"><a href="#3-3-What-is-IP-address" class="headerlink" title="3.3. What is IP address?"></a>3.3. What is IP address?</h2><p>Wikipedia: An Internet Protocol address is a numerical label assigned to each device connected to a computer network that uses the Internet Protocol for communication.</p>
<h2 id="3-4-Types-of-Address"><a href="#3-4-Types-of-Address" class="headerlink" title="3.4. Types of Address"></a>3.4. Types of Address</h2><ul>
<li>Hostname address, e.g. severn.cs.nott.ac.uk</li>
<li>IP address, e.g. 128.243.10.4</li>
<li>Hardware address, e.g. 00-8C-39-7C-B3-14</li>
</ul>
<h2 id="3-5-Identifying-Applications"><a href="#3-5-Identifying-Applications" class="headerlink" title="3.5. Identifying Applications"></a>3.5. Identifying Applications</h2><p>Port Numbers:</p>
<ul>
<li>80/443</li>
<li>8080 …</li>
</ul>
<h2 id="3-6-IP-Addresses-Sending-to-Many"><a href="#3-6-IP-Addresses-Sending-to-Many" class="headerlink" title="3.6. IP Addresses - Sending to Many"></a>3.6. IP Addresses - Sending to Many</h2><p>There are special IP addresses for sending to more than one host (computer):</p>
<ul>
<li>A Multicast address allows a message to be sent to a group</li>
<li>A Broadcast address allows a message to be sent to all hosts on a network</li>
</ul>
<h2 id="3-7-Types-of-IP-V4-Addresses"><a href="#3-7-Types-of-IP-V4-Addresses" class="headerlink" title="3.7. Types of IP(V4) Addresses"></a>3.7. Types of IP(V4) Addresses</h2><table>
<thead>
<tr>
<th>Address Type</th>
<th>Meaning and Packet Delivery</th>
</tr>
</thead>
<tbody><tr>
<td>Unicast</td>
<td>Uniquely identifies a single computer, and specifies that only the identified computer should receive a copy of the packet</td>
</tr>
<tr>
<td>Broadcast</td>
<td>Corresponds to all computers, and specifies that each computer on the network should receive a copy of the packet</td>
</tr>
<tr>
<td>Multicast</td>
<td>Identifies a subset of the computers on a given network, and specifies that each computer in the subset should receive a copy of the packet</td>
</tr>
</tbody></table>
<h1 id="4-Introduction-of-Unix"><a href="#4-Introduction-of-Unix" class="headerlink" title="4. Introduction of Unix"></a>4. Introduction of Unix</h1><h2 id="4-1-Operating-Systems"><a href="#4-1-Operating-Systems" class="headerlink" title="4.1. Operating Systems"></a>4.1. Operating Systems</h2><ul>
<li>The program that controls all the other parts of the computer system, manages hardware and software</li>
<li>Enables you to use the computer system and its facilities</li>
</ul>
<h2 id="4-2-What-does-the-Kernel-do"><a href="#4-2-What-does-the-Kernel-do" class="headerlink" title="4.2. What does the Kernel do?"></a>4.2. What does the Kernel do?</h2><ul>
<li>Managing the machine’s memory and allocating it to each process</li>
<li>Scheduling the work done by the CPU so that the work of each user is carried out as efficiently as possible</li>
<li>Organising the transfer of data from one part of the machine to another</li>
<li>Accepting instructions from the user interface and carrying them out.</li>
<li>Enforcing the access permissions that are set on the file system</li>
</ul>
<h2 id="4-3-Command-involved"><a href="#4-3-Command-involved" class="headerlink" title="4.3. Command involved"></a>4.3. Command involved</h2><ul>
<li>ssh</li>
<li>sftp</li>
<li>passwd</li>
</ul>
<h1 id="5-Unix-Filestore"><a href="#5-Unix-Filestore" class="headerlink" title="5. Unix Filestore"></a>5. Unix Filestore</h1><h2 id="5-1-Files"><a href="#5-1-Files" class="headerlink" title="5.1. Files"></a>5.1. Files</h2><ul>
<li>From the user’s point of view, all information on the computer is stored in files</li>
<li>Files may contain many kinds of information, including programs, data and documents</li>
<li>Like paper files, they have a name (chosen by the user) and some content</li>
<li>By convention, the filename suffix suggests the type of content</li>
</ul>
<h2 id="5-2-Directories"><a href="#5-2-Directories" class="headerlink" title="5.2. Directories"></a>5.2. Directories</h2><ul>
<li>Files are stored in directories (folders)</li>
<li>Each directory may contain many files and also other directories</li>
<li>By convention, directory names do not usually have suffixes</li>
</ul>
<h2 id="5-3-Command-involved"><a href="#5-3-Command-involved" class="headerlink" title="5.3. Command involved"></a>5.3. Command involved</h2><ul>
<li>cat</li>
<li>more\less</li>
<li>head\tail</li>
</ul>
<h1 id="6-Absolute-and-Relative-Pathnames"><a href="#6-Absolute-and-Relative-Pathnames" class="headerlink" title="6. Absolute and Relative Pathnames"></a>6. Absolute and Relative Pathnames</h1><h2 id="6-1-Two-ways-of-specifying-filenames"><a href="#6-1-Two-ways-of-specifying-filenames" class="headerlink" title="6.1. Two ways of specifying filenames"></a>6.1. Two ways of specifying filenames</h2><ul>
<li>From the current directory - relative pathnames</li>
<li>From the root directory - absolute pathnames</li>
</ul>
<h2 id="6-2-Command-involved"><a href="#6-2-Command-involved" class="headerlink" title="6.2. Command involved"></a>6.2. Command involved</h2><ul>
<li>pwd</li>
<li>cd</li>
<li>ls</li>
<li>mv</li>
<li>cp</li>
<li>rm</li>
<li>mkdir</li>
<li>rmdir</li>
</ul>
<h1 id="Lab1"><a href="#Lab1" class="headerlink" title="Lab1"></a>Lab1</h1><div class="pdf" target="UnixLab1-2020.pdf" height=""></div>

<hr>
<h1 id="7-Unix-File-Operations"><a href="#7-Unix-File-Operations" class="headerlink" title="7. Unix File Operations"></a>7. Unix File Operations</h1><h2 id="7-1-UNIX-thinks-everything-is-a-file"><a href="#7-1-UNIX-thinks-everything-is-a-file" class="headerlink" title="7.1. UNIX thinks everything is a file!"></a>7.1. UNIX thinks everything is a file!</h2><ul>
<li>Directories and programs are all files!</li>
<li>Input and Output channels are files</li>
<li>All of these things can be manipulated like files</li>
</ul>
<h2 id="7-2-Shell-Metacharacters"><a href="#7-2-Shell-Metacharacters" class="headerlink" title="7.2. Shell Metacharacters"></a>7.2. Shell Metacharacters</h2><ul>
<li>*</li>
<li>?</li>
</ul>
<h2 id="7-3-Command-involved"><a href="#7-3-Command-involved" class="headerlink" title="7.3. Command involved"></a>7.3. Command involved</h2><ul>
<li>file</li>
<li>wc</li>
</ul>
<h1 id="8-Security-and-File-Permissions"><a href="#8-Security-and-File-Permissions" class="headerlink" title="8. Security and File Permissions"></a>8. Security and File Permissions</h1><h2 id="8-1-Permissions-lists"><a href="#8-1-Permissions-lists" class="headerlink" title="8.1. Permissions lists"></a>8.1. Permissions lists</h2><ul>
<li>ugo</li>
<li>rwx == 421</li>
</ul>
<h2 id="8-2-The-effect-of-directory-permissions"><a href="#8-2-The-effect-of-directory-permissions" class="headerlink" title="8.2. The effect of directory permissions"></a>8.2. The effect of directory permissions</h2><ul>
<li>Execute lets you change (cd) into that directory<ul>
<li>(i.e. you are searching the directory)</li>
</ul>
</li>
<li>Read lets you list files in the directory<ul>
<li>(i.e. you are reading the directory contents)</li>
</ul>
</li>
<li>Write lets you create and delete files<ul>
<li>(i.e. you are writing to the directory contents)</li>
</ul>
</li>
</ul>
<h2 id="8-3-Command-involved"><a href="#8-3-Command-involved" class="headerlink" title="8.3. Command involved"></a>8.3. Command involved</h2><ul>
<li>chmod</li>
</ul>
<h1 id="9-Unix-Input-Output"><a href="#9-Unix-Input-Output" class="headerlink" title="9. Unix Input/Output"></a>9. Unix Input/Output</h1><h2 id="9-1-Input-and-Output-in-UNIX"><a href="#9-1-Input-and-Output-in-UNIX" class="headerlink" title="9.1. Input and Output in UNIX"></a>9.1. Input and Output in UNIX</h2><blockquote>
<p>UNIX considers input and output to programs to be “streams of data”.</p>
</blockquote>
<ul>
<li>Could be from the user</li>
<li>Could be from a file</li>
<li>Could be from another program</li>
</ul>
<h2 id="9-2-Redirecting-I-O"><a href="#9-2-Redirecting-I-O" class="headerlink" title="9.2.Redirecting I/O"></a>9.2.Redirecting I/O</h2><blockquote>
<p>Each UNIX command has a number of input and output channels, these are files that are specified in arguments.</p>
</blockquote>
<ul>
<li>STDIN (0)</li>
<li>STDOUT (1)</li>
<li>STDERR (2)</li>
</ul>
<h2 id="9-3-STDIN"><a href="#9-3-STDIN" class="headerlink" title="9.3. STDIN"></a>9.3. STDIN</h2><ul>
<li>Stands for Standard Input</li>
<li>This is where programs expect to find their input</li>
<li>Everything you type at the command line goes onto STDIN</li>
<li>If you want to read the input from a file instead, use &lt;</li>
</ul>
<h2 id="9-4-STDOUT"><a href="#9-4-STDOUT" class="headerlink" title="9.4. STDOUT"></a>9.4. STDOUT</h2><ul>
<li>Stands for standard output</li>
<li>This is where programs (usually) write any output they generate. By default STDOUT appears in your terminal window</li>
<li>If you want to save the output to a file instead, use &gt;</li>
<li>You can also use &gt;&gt; which appends the output onto a file’s contents</li>
</ul>
<h2 id="9-5-STDERR"><a href="#9-5-STDERR" class="headerlink" title="9.5. STDERR"></a>9.5. STDERR</h2><ul>
<li>Stands for standard error</li>
<li>This is where programs usually write error messages. So even if you are redirecting the normal output, you can still see error messages</li>
<li>You can redirect STDERR using 2&gt;</li>
</ul>
<h2 id="9-6-Redirecting-symbol"><a href="#9-6-Redirecting-symbol" class="headerlink" title="9.6. Redirecting symbol"></a>9.6. Redirecting symbol</h2><table>
<thead>
<tr>
<th>Symbol</th>
<th>Meaning</th>
</tr>
</thead>
<tbody><tr>
<td>&gt;</td>
<td>redirect STDOUT</td>
</tr>
<tr>
<td>&gt;&gt;</td>
<td>appends</td>
</tr>
<tr>
<td>2&gt;&amp;1</td>
<td>redirect both(STDOUT&amp;STDERR) outputs</td>
</tr>
<tr>
<td>&lt;</td>
<td>redirects the standard input</td>
</tr>
</tbody></table>
<h2 id="9-7-Piping"><a href="#9-7-Piping" class="headerlink" title="9.7. Piping"></a>9.7. Piping</h2><ul>
<li>|</li>
</ul>
<h1 id="10-Searching-and-RegularExpressions"><a href="#10-Searching-and-RegularExpressions" class="headerlink" title="10. Searching and RegularExpressions"></a>10. Searching and RegularExpressions</h1><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>UoN</category>
      </categories>
      <tags>
        <tag>COMP4035-System&amp;Network</tag>
      </tags>
  </entry>
  <entry>
    <title>Theme 1 - Emerging Technologies</title>
    <url>/2019/11/16/Theme-1-Emerging-Technologies/</url>
    <content><![CDATA[<h1 id="1-Types-of-Emerging-Technologies"><a href="#1-Types-of-Emerging-Technologies" class="headerlink" title="1. Types of Emerging Technologies"></a>1. Types of Emerging Technologies</h1><blockquote>
<p>From a business perspective, an emerging technology is a technology that is capable of changing existing contextual methods and dynamics, often by integrating digital resources with creative thinking and rigorous research and testing, to introduce new products, services, initiatives and events.</p>
</blockquote>
<ul>
<li>Emerging-Technology <strong>Product</strong> : A physical consumer product that utilizes new technology. Eg. 3D printers.</li>
<li>Emerging-Technology <strong>Service</strong> : A set of new technological processes, activities and systems that collectively meet a public or business need. Eg. Artificially intelligent public transport system.</li>
<li>Emerging-Technology <strong>Initiative</strong> : An enterprise that utilizes new technology to tackle applied problems or social issues. Eg. Desalination projects to provide drinking water.</li>
<li>Emerging-Technology <strong>Event</strong> : A planed gathering that utilizes new technology. Eg. WWDC</li>
</ul>
<a id="more"></a>

<h1 id="2-Emerging-Technology"><a href="#2-Emerging-Technology" class="headerlink" title="2. Emerging Technology"></a>2. Emerging Technology</h1><blockquote>
<p>A new product, service, initiative or event developed and launched in response to a gap in the market.</p>
</blockquote>
<ul>
<li>Artificial Intelligence</li>
<li>IOT</li>
<li>Robots</li>
<li>3D Printing</li>
</ul>
<div class="video-container"><iframe src="https://www.youtube.com/embed/hUsDdbqr0c8" frameborder="0" loading="lazy" allowfullscreen></iframe></div>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>TUNIC</category>
      </categories>
      <tags>
        <tag>PM605 Project Management</tag>
      </tags>
  </entry>
  <entry>
    <title>Theme 1 - Science, knowledge and truth across scientific disciplines</title>
    <url>/2019/11/10/Theme-1-Science-knowledge-and-truth-across-scientific-disciplines/</url>
    <content><![CDATA[<h1 id="1-What-is-Science"><a href="#1-What-is-Science" class="headerlink" title="1. What is Science"></a>1. What is Science</h1><h2 id="1-1-Science"><a href="#1-1-Science" class="headerlink" title="1.1. Science"></a>1.1. Science</h2><ul>
<li>Science is the pursuit and application of knowledge and understanding of the natural and social world following a systematic methodology based on evidence (sciencecouncil.org)</li>
<li>A material force dispelling illusions</li>
<li>An ideological superstructure of capitalism</li>
</ul>
<h2 id="1-2-Engineering"><a href="#1-2-Engineering" class="headerlink" title="1.2. Engineering"></a>1.2. Engineering</h2><ul>
<li>The application of science and mathematics by which the properties of matter and the sources of energy in nature are made useful to people. (Merriam-Webster.com)</li>
<li>Aims to produce the best solution given resources and constraints.</li>
</ul>
<a id="more"></a>

<h2 id="1-3-Technology"><a href="#1-3-Technology" class="headerlink" title="1.3. Technology"></a>1.3. Technology</h2><ul>
<li>A manner of accomplishing a task especially using technical processes, methods or knowledge (Merriam-Webster.com)</li>
<li>The body of knowledge, systems, processes and artefacts that result from engineering.</li>
</ul>
<h2 id="1-4-Science-Engineering-and-Technology"><a href="#1-4-Science-Engineering-and-Technology" class="headerlink" title="1.4. Science, Engineering and Technology"></a>1.4. Science, Engineering and Technology</h2><ul>
<li>Science, engineering and technology are all situated in the context of a larger society that determines what science and engineering get done.</li>
<li>Human values, needs and problems determine what scientists investigate and what engineers tackle.</li>
</ul>
<p><img src="science-engineering-technology.png?20" alt="Science, Engineering and Technology"></p>
<h2 id="1-5-The-traditional-view-of-science"><a href="#1-5-The-traditional-view-of-science" class="headerlink" title="1.5. The traditional view of science"></a>1.5. The traditional view of science</h2><ul>
<li>Many early discoveries were made by people who were interested in the world around them and trying to make sense of how it works. Gravity, magnetism, radioactivity were all discovered by people thinking “I wonder what happens if…”  </li>
<li>They tended to be working alone and be financially independent – Marie Curie did most of her research in a converted shed.</li>
</ul>
<h2 id="1-6-The-modern-view-of-science"><a href="#1-6-The-modern-view-of-science" class="headerlink" title="1.6. The modern view of science"></a>1.6. The modern view of science</h2><blockquote>
<p>Science as a business</p>
</blockquote>
<ul>
<li>Equipment, labs, materials, computers…</li>
<li>All of these cost money which has to come from somewhere – business becomes involved.</li>
</ul>
<h2 id="1-7-The-conventional-image-of-science"><a href="#1-7-The-conventional-image-of-science" class="headerlink" title="1.7. The conventional image of science"></a>1.7. The conventional image of science</h2><ul>
<li>The role of the scientist is to study the world around us and explain it. They should come up with theories and laws that will predict the outcomes of experiments.</li>
<li>Science is a reliable form of knowledge, with strict methods that scientists follow.</li>
</ul>
<h2 id="1-8-Summary"><a href="#1-8-Summary" class="headerlink" title="1.8. Summary"></a>1.8. Summary</h2><ul>
<li>Science, engineering and technology are all interlinked.</li>
<li>The perception of science has changed as business becomes more involved with scientific discoveries.</li>
<li>Due to new technology and wider media coverage the public image of science can change rapidly.</li>
</ul>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>TUNIC</category>
      </categories>
      <tags>
        <tag>PM602 Engineering, Science and Society</tag>
      </tags>
  </entry>
  <entry>
    <title>Theme 3 - Framework for Planning Research</title>
    <url>/2019/11/10/Theme-3-Framework-for-Planning-Research/</url>
    <content><![CDATA[<h1 id="1-What-is-a-research-proposal"><a href="#1-What-is-a-research-proposal" class="headerlink" title="1. What is a research proposal?"></a>1. What is a research proposal?</h1><h2 id="1-1-What-is-the-purpose-of-a-research-proposal"><a href="#1-1-What-is-the-purpose-of-a-research-proposal" class="headerlink" title="1.1. What is the purpose of a research proposal?"></a>1.1. What is the purpose of a research proposal?</h2><ul>
<li>define a clear question to answer</li>
<li>to plan an approach to answering it</li>
<li>to explain how the proposed research will add to / develop / challenge existing literature in the field</li>
<li>to persuade the audience of the importance of the work, that it is feasible and that you are the right person to undertake it</li>
</ul>
<a id="more"></a>

<h2 id="1-2-Who-is-likely-to-read-a-research-proposal"><a href="#1-2-Who-is-likely-to-read-a-research-proposal" class="headerlink" title="1.2. Who is likely to read a research proposal?"></a>1.2. Who is likely to read a research proposal?</h2><ul>
<li>Potential supervisors</li>
<li>Research committees</li>
<li>Potential funders</li>
</ul>
<h2 id="1-3-Why-is-it-necessary-for-a-researcher-to-prepare-a-proposal-before-starting-their-research"><a href="#1-3-Why-is-it-necessary-for-a-researcher-to-prepare-a-proposal-before-starting-their-research" class="headerlink" title="1.3. Why is it necessary for a researcher to prepare a proposal before starting their research?"></a>1.3. Why is it necessary for a researcher to prepare a proposal before starting their research?</h2><ul>
<li>it demonstrates that your proposed research is feasible</li>
<li>it demonstrates that you have the necessary knowledge and expertise to conduct the research</li>
<li>it allows research committees to allocate the most suitable supervisor to guide and support you</li>
</ul>
<h2 id="1-4-Structure-of-research-proposal"><a href="#1-4-Structure-of-research-proposal" class="headerlink" title="1.4. Structure of research proposal"></a>1.4. Structure of research proposal</h2><ul>
<li>A working title</li>
<li>Introduction / Rationale</li>
<li>Research questions</li>
<li>Literature review</li>
<li>Methodology</li>
<li>Ethics</li>
<li>Reference list</li>
</ul>
<h3 id="1-4-1-A-working-title"><a href="#1-4-1-A-working-title" class="headerlink" title="1.4.1. A working title"></a>1.4.1. A working title</h3><ul>
<li>Your title should give a <strong>clear indication</strong> of the intent of your project, directing attention explicitly to the central issue that you will address</li>
<li>Your title must show that you have thought through what you are hoping to achieve</li>
<li>The working title <strong>can change</strong> during the course of your research</li>
</ul>
<h3 id="1-4-2-Introduction-Rationale"><a href="#1-4-2-Introduction-Rationale" class="headerlink" title="1.4.2. Introduction /Rationale"></a>1.4.2. Introduction /Rationale</h3><blockquote>
<p>The introduction gives a <strong><em>brief overview of the general area of study</em></strong></p>
</blockquote>
<ul>
<li>provide the <strong>background</strong> against which your research will be carried out</li>
<li>be a brief introduction <strong>outlining the general area</strong> of study and identifying the <strong>subject area</strong> within which your study falls</li>
<li>include the <strong>key issue(s)</strong> that you wish to investigate and why these are important (the <strong>rationale</strong>)</li>
<li>include <strong>who would benefit</strong> from your research (e.g. practitioners, researchers)</li>
</ul>
<h3 id="1-4-3-Research-questions"><a href="#1-4-3-Research-questions" class="headerlink" title="1.4.3. Research questions"></a>1.4.3. Research questions</h3><blockquote>
<p>list the research question(s) your project will <strong>aim to answer</strong> through the course of your research</p>
</blockquote>
<ul>
<li>questions (ending with a <strong>question mark</strong>)</li>
<li><strong>answerable</strong> by means of the methods outlined in your methodology section</li>
</ul>
<div class="video-container"><iframe src="https://www.youtube.com/embed/mrWeLJZydUU" frameborder="0" loading="lazy" allowfullscreen></iframe></div>
<hr>
<h3 id="1-4-4-Literature-review"><a href="#1-4-4-Literature-review" class="headerlink" title="1.4.4. Literature review"></a>1.4.4. Literature review</h3><ul>
<li>identify <strong>relevant</strong> literature, theories and concepts</li>
<li>reference <strong>the most important texts</strong> related to the research</li>
<li><strong>briefly demonstrate your understanding</strong> of the research issues</li>
<li>identify <strong>existing gaps</strong> that your research is intended to address</li>
<li>include <strong>theoretical and practical issues</strong> you may have found</li>
</ul>
<h3 id="1-4-5-Methodology"><a href="#1-4-5-Methodology" class="headerlink" title="1.4.5. Methodology"></a>1.4.5. Methodology</h3><ul>
<li>explain which approach you are planning to use to research the answer to your research questions: <strong>primary or secondary research</strong></li>
<li>outline your <strong>data collection method</strong> (existing data source(s) / qualitative or quantitative methods or both)</li>
<li>provide a <strong>justification</strong> for why these methods are suitable for your study and the limits and potential you envisage</li>
<li>give an indication of <strong>how you intend to analyse your research data</strong></li>
</ul>
<h3 id="1-4-6-Ethics"><a href="#1-4-6-Ethics" class="headerlink" title="1.4.6. Ethics"></a>1.4.6. Ethics</h3><ul>
<li>If you are planning to undertake primary research that involves humans, you should identify any risk to the researcher or participants, and explain how you will <strong>minimise those risks</strong>.</li>
<li>This section should consider relevant <strong>ethical issues</strong> (e.g. informed consent, confidentiality, anonymity, privacy, avoiding harm to participants)</li>
</ul>
<h2 id="1-5-Characteristics-of-a-good-research-proposal"><a href="#1-5-Characteristics-of-a-good-research-proposal" class="headerlink" title="1.5. Characteristics of a good research proposal"></a>1.5. Characteristics of a good research proposal</h2><ul>
<li>demonstrates you are capable of independent critical thinking and analysis</li>
<li>demonstrates you are capable of communicating your ideas clearly</li>
<li>follows the appropriate guidelines</li>
<li>is refined and edited a number of times before it is submitted to ensure that it is well written, without any errors</li>
<li>leaves the reader with a clear sense of the purpose and direction of your research project</li>
<li>leaves the reader interested, excited and wanting to find out more about your ideas and your project!</li>
</ul>
<h2 id="1-6-Textbook-Reading"><a href="#1-6-Textbook-Reading" class="headerlink" title="1.6. Textbook Reading"></a>1.6. Textbook Reading</h2><ul>
<li>PP. 7~23</li>
</ul>
<h1 id="2-Key-words"><a href="#2-Key-words" class="headerlink" title="2. Key words"></a>2. Key words</h1><h2 id="2-1-Key-word-Aim"><a href="#2-1-Key-word-Aim" class="headerlink" title="2.1. Key word: Aim"></a>2.1. Key word: Aim</h2><blockquote>
<p>A strategic statement of what the researcher would like to do if no constraints exist</p>
</blockquote>
<ul>
<li>Having a topic for your project is just the starting point. You must also be able to define the aim of your project. In other words: <strong>‘What do I want to know?’</strong></li>
<li>In the simplest terms, your aim is meant to let your reader know <strong>what you hope to achieve</strong> overall with your project.</li>
</ul>
<h2 id="2-2-Key-word-Rationale"><a href="#2-2-Key-word-Rationale" class="headerlink" title="2.2. Key word: Rationale"></a>2.2. Key word: Rationale</h2><ul>
<li>Along with general background information, the Introduction is also where you should explain the <strong>rationale</strong> of your research.</li>
<li>In short, the rationale tells your reader <strong>why this research is important.</strong></li>
</ul>
<h2 id="2-3-Key-word-Objectives"><a href="#2-3-Key-word-Objectives" class="headerlink" title="2.3. Key word: Objectives"></a>2.3. Key word: Objectives</h2><blockquote>
<p>If your aim is what you want to learn by doing your research, then your <strong>objectives</strong> are the steps you take to get there.</p>
</blockquote>
<ul>
<li>Objectives: (How am I going to find that out?)<br>The objectives can be considered as <strong>tactical statements</strong> that, in the light of constraints, translate the aims into inter-related yet self-sufficient coherent statements of what the researcher hopes to achieve. Objectives specify <strong>what will be known at the end of the project</strong> that isn’t known at its beginning and has been revealed by the research.</li>
<li>The objectives are usually the steps you will take to achieve your aim.<br>Your objectives often play a <strong>huge role</strong> in structuring your report and in determining what kind of sources you need!</li>
</ul>
<h2 id="2-4-Key-word-Hypothesis"><a href="#2-4-Key-word-Hypothesis" class="headerlink" title="2.4. Key word: Hypothesis"></a>2.4. Key word: Hypothesis</h2><blockquote>
<p>The hypothesis is the predicted answer to the problem</p>
</blockquote>
<ul>
<li>takes a position</li>
<li>justifies further research</li>
<li>is specific</li>
<li>is testable</li>
</ul>
<h2 id="2-5-Key-word-Scope"><a href="#2-5-Key-word-Scope" class="headerlink" title="2.5. Key word: Scope"></a>2.5. Key word: Scope</h2><blockquote>
<p>Most projects have very <strong>specific parameters or boundaries</strong> in order to make them convincing research</p>
</blockquote>
<ul>
<li>ask yourself how you plan to limit your study.<ul>
<li>by time period?</li>
<li>by location?</li>
<li>by industry? etc.</li>
</ul>
</li>
</ul>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>TUNIC</category>
      </categories>
      <tags>
        <tag>PM600 Research Project</tag>
      </tags>
  </entry>
  <entry>
    <title>Theme 4 - Writing a Proposal</title>
    <url>/2019/11/15/Theme-4-Writing-a-Proposal/</url>
    <content><![CDATA[<h1 id="★PM600-Research-Project-Proposal-Assessment-Brief-Sep-19"><a href="#★PM600-Research-Project-Proposal-Assessment-Brief-Sep-19" class="headerlink" title="★PM600 Research Project Proposal Assessment Brief_Sep 19"></a>★PM600 Research Project Proposal Assessment Brief_Sep 19</h1><a id="more"></a>
<div class="pdf" target="PM600ResearchProjectProposalAssessmentBrief_Sep19.pdf" height=""></div>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>TUNIC</category>
      </categories>
      <tags>
        <tag>PM600 Research Project</tag>
      </tags>
  </entry>
  <entry>
    <title>Theme 2 - Types of Project Management</title>
    <url>/2020/01/07/Theme-2-Types-of-Project-Management/</url>
    <content><![CDATA[<h1 id="1-Project-and-Project-Management"><a href="#1-Project-and-Project-Management" class="headerlink" title="1. Project and Project Management"></a>1. Project and Project Management</h1><h2 id="1-1-What-is-a-project"><a href="#1-1-What-is-a-project" class="headerlink" title="1.1. What is a project?"></a>1.1. What is a project?</h2><ul>
<li>A project is a task with <strong>a desired end point</strong>.</li>
<li>A key factor that distinguishes a project from the day-to-day operation of a company is that it has a defined <strong>product and timespan</strong>.</li>
</ul>
<h2 id="1-2-What-is-project-management"><a href="#1-2-What-is-project-management" class="headerlink" title="1.2. What is project management"></a>1.2. What is project management</h2><ul>
<li>Project management is the <strong>formal discipline</strong> for managing projects</li>
<li>The aim of project management is to ensure that projects are completed and that the end point is achieved</li>
<li>It is about reaching the end point predictably, to a given cost and within a planned amount of time</li>
</ul>
<a id="more"></a>

<h2 id="1-3-Your-role-as-project-manager"><a href="#1-3-Your-role-as-project-manager" class="headerlink" title="1.3. Your role as project manager"></a>1.3. Your role as project manager</h2><blockquote>
<p>Ensure there is a clear understanding of why a project is being done, and what it will produce</p>
</blockquote>
<ul>
<li>Plan the project<ul>
<li>to understand <strong>how long</strong> it will take and <strong>how much</strong> it will cost</li>
</ul>
</li>
<li>Manage the project<ul>
<li>to ensure that as the project progresses, it achieves the objectives you have defined within the time and cost specified</li>
</ul>
</li>
<li>Complete the project properly<ul>
<li>to make sure everything produced by the project is of the <strong>quality expected</strong> and works as required</li>
</ul>
</li>
</ul>
<h2 id="1-4-Delivery-and-deliverables"><a href="#1-4-Delivery-and-deliverables" class="headerlink" title="1.4. Delivery and deliverables"></a>1.4. Delivery and deliverables</h2><ul>
<li>Delivery means getting the things done you set out to do, and bringing the project to completion</li>
<li>Deliverables are what are to be delivered by a project</li>
<li>The deliverables are defined at the start of the project</li>
<li>Your success as a project manager is in delivering them in the <strong>planned time</strong> and to the <strong>expected cost</strong></li>
</ul>
<h2 id="1-5-Project-dimensions"><a href="#1-5-Project-dimensions" class="headerlink" title="1.5. Project dimensions"></a>1.5. Project dimensions</h2><blockquote>
<p>Often a trade-off is needed between these elements.  Finding the right balance is an important part of being a project manager.</p>
</blockquote>
<ul>
<li><strong>5 key elements</strong> of a project<ul>
<li>Scope</li>
<li>Quality</li>
<li>Time</li>
<li>Cost</li>
<li>Risk</li>
</ul>
</li>
</ul>
<h2 id="1-6-Key-players"><a href="#1-6-Key-players" class="headerlink" title="1.6. Key players"></a>1.6. Key players</h2><ul>
<li><strong>Customers</strong><ul>
<li>the persons or the organisations for which the project is being conducted. They usually pay money to another organisation in return for project.  </li>
</ul>
</li>
<li><strong>Contractor</strong><ul>
<li>the organisation that is responsible for executing the project to the customers’ requirement.</li>
</ul>
</li>
<li><strong>End users</strong><ul>
<li>the individual or the organisation that will own and operate the project. It is not the same as the one who paid for the project</li>
</ul>
</li>
</ul>
<h1 id="2-Project-Management-Types"><a href="#2-Project-Management-Types" class="headerlink" title="2. Project Management Types"></a>2. Project Management Types</h1><h2 id="2-1-The-definition-of-project-management"><a href="#2-1-The-definition-of-project-management" class="headerlink" title="2.1. The definition of project management"></a>2.1. The definition of project management</h2><p>Project Management is the <strong>management discipline</strong> that plans, organizes and controls people, money and cash so that projects are completed successfully in spite of all the risks.</p>
<h2 id="2-2-Project-Types"><a href="#2-2-Project-Types" class="headerlink" title="2.2. Project Types"></a>2.2. Project Types</h2><ul>
<li>Type 1: <strong>Civil Engineering, Construction, Petrochemical, Mining and Quarrying</strong><br>“A common feature is the physical work involved, their exposure to the public gaze, and their unappealing visual qualities during construction. They involve high risk, significant capital investment, rigorous management, and special attention to health and safety.”</li>
<li>Type 2: <strong>Manufacturing</strong><br>“A common feature is the production of a piece of specially designed hardware or machinery, for example, an aircraft, a ship, electronic equipment, or a land vehicle. Projects are usually undertaken in an indoor environment. A complex product may involve a consortium of companies and stakeholders across international boundaries.”</li>
<li>Type 3: <strong>IT Projects and Projects Associated with Management or Business Change</strong><br>“All companies, regardless of size, will probably need Project Management at some point. Whether this is to manage office relocation, introduce a new computer system, coordinate a marketing campaign, or develop and launch a new product or service. There are often no tangible outcomes, but successful implementation is imperative to business success, or survival.”</li>
<li>Type 4: <strong>Projects For Pure Scientific Research</strong><br>“These projects involve expanding human knowledge and making new discoveries. Objectives can be difficult to define, and timelines may fluctuate. Significant and continuous levels of commitment and investment required. Strict budgeting and monitoring necessary.”</li>
</ul>
<h2 id="2-3-Project-Management-Approaches"><a href="#2-3-Project-Management-Approaches" class="headerlink" title="2.3. Project Management Approaches"></a>2.3. Project Management Approaches</h2><ul>
<li><strong>Phased Development</strong><ul>
<li>A project that is split into <strong>clearly defined categories</strong> of linear sequential activities and chronological progress. For example, conception, development, planning, launch, completion.</li>
</ul>
</li>
<li><strong>Agile Methods</strong><ul>
<li>A flexible method characterized by <strong>incremental, non-linear and iterative patterns of activity</strong>. Often used when progress is unpredictable.</li>
</ul>
</li>
<li><strong>Prototype Approaches</strong><ul>
<li>A project that involves the creation and development of an early version of a product or system (the prototype) that is build, tested and reconfigured until an acceptable version is ready for launch.</li>
</ul>
</li>
</ul>
<h1 id="3-The-project-life-cycle"><a href="#3-The-project-life-cycle" class="headerlink" title="3. The project life cycle"></a>3. The project life cycle</h1><h2 id="3-1-Five-project-stages"><a href="#3-1-Five-project-stages" class="headerlink" title="3.1. Five project stages"></a>3.1. Five project stages</h2><blockquote>
<p>An example of home decoration</p>
</blockquote>
<ul>
<li>Scope<ul>
<li>How many rooms do I need to paint and decorate ?</li>
</ul>
</li>
<li>Quality<ul>
<li>How fastidious do I want to be ?</li>
</ul>
</li>
<li>Time<ul>
<li>How long will all this painting and decorating take to complete ?</li>
</ul>
</li>
<li>Cost<ul>
<li>How much money do I need to spend on paint and other materials ?</li>
</ul>
</li>
<li>Risk<ul>
<li>Are there dangers involved ? Will I not finish on time? Why? What might be the consequences ?</li>
</ul>
</li>
</ul>
<h2 id="3-2-Traditional-project-life-cycle"><a href="#3-2-Traditional-project-life-cycle" class="headerlink" title="3.2. Traditional project life cycle"></a>3.2. Traditional project life cycle</h2><ul>
<li>Phase 1 : Conception/Initiation<ul>
<li>Stakeholders develop ideas concerning a new product, service, initiative or event</li>
<li>Initial scoping undertaken to gauge potential feasibility and support</li>
</ul>
</li>
<li>Phase 2 : Definition/Planning<ul>
<li>Feasibility studies undertaken</li>
<li>Checklists compiled</li>
<li>Proposals made</li>
<li>Project scope finalized</li>
<li>Strategy and design specification development and documentation completed</li>
<li>Resources scheduled</li>
</ul>
</li>
<li>Phase 3 : Managing Launch/Execution<ul>
<li>Standards and procedures agreed and deployed</li>
<li>Preparations and organization completed</li>
<li>Plans and instructions issued to all stakeholders</li>
<li>Work started</li>
</ul>
</li>
<li>Phase 4 : Performance Control<ul>
<li>Progress monitored</li>
<li>Control systems implemented</li>
<li>Workforce observed and encouraged</li>
<li>Performance data collected</li>
<li>Crisis management contingency plans, and associated processes and trigger points, understood by key stakeholders</li>
<li>Corrective measured implemented, if necessary</li>
</ul>
</li>
<li>Phase 5 : Project Close<ul>
<li>Formal project closure and handover of completed artifact to the client</li>
<li>Disposal of surplus stocks</li>
</ul>
</li>
</ul>
<h2 id="3-3-Modern-project-life-cycle"><a href="#3-3-Modern-project-life-cycle" class="headerlink" title="3.3. Modern project life cycle"></a>3.3. Modern project life cycle</h2><ol>
<li><strong>Project Definition</strong> : Purpose and outline of the project articulated</li>
<li><strong>Preparation and planning</strong> : Declaration of required tasks, activities, responsibilities, resources and timelines</li>
<li><strong>Design</strong> : Declaration of network configuration and pattern of chronology, and interchangeability of tasks and activities</li>
<li><strong>Purchasing</strong> : Acquirement of necessary resources including goods and services required for project fulfillment</li>
<li><strong>Fulfillment</strong> : Make or build the project</li>
<li><strong>Completion and Handover</strong> : Test, commission and handover completed artifact to stakeholder users/customers</li>
</ol>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>TUNIC</category>
      </categories>
      <tags>
        <tag>PM605 Project Management</tag>
      </tags>
  </entry>
  <entry>
    <title>Theme 5 - Identifying the Literature</title>
    <url>/2019/11/16/Theme-5-Identifying-the-Literature/</url>
    <content><![CDATA[<h1 id="1-Introduction-to-Identifying-the-Literature"><a href="#1-Introduction-to-Identifying-the-Literature" class="headerlink" title="1. Introduction to Identifying the Literature"></a>1. Introduction to Identifying the Literature</h1><h2 id="1-1-What-is-a-Literature-Review"><a href="#1-1-What-is-a-Literature-Review" class="headerlink" title="1.1. What is a Literature Review"></a>1.1. What is a Literature Review</h2><ul>
<li>“The process of <strong>evaluating</strong> the work of others in the context of the work you intend to do is called a literature review…” (p. 74, Breach, 2009)</li>
<li>“A literature review is a <strong>search and evaluation</strong> of the available literature in your given subject or chosen topic area.” Royal Literary Fund</li>
<li>“…an intelligent <strong>appraisal</strong> of a range of sources.”(p. 63, Thomas, 2017)</li>
</ul>
<a id="more"></a>

<h2 id="1-2-The-purpose-of-a-literature-review"><a href="#1-2-The-purpose-of-a-literature-review" class="headerlink" title="1.2. The purpose of a literature review"></a>1.2. The purpose of a literature review</h2><ul>
<li>To <strong>compare and contrast</strong> different authors’ views on a topic</li>
<li>To <strong>critically evaluate</strong> the ideas of other writers</li>
<li>To highlight <strong>gaps</strong> in research</li>
<li>To show how your study relates to previous studies</li>
<li>To show how your study builds on and contributes to the literature of the topic</li>
</ul>
<h1 id="2-Key-elements-and-language-in-a-literature-review"><a href="#2-Key-elements-and-language-in-a-literature-review" class="headerlink" title="2. Key elements and language in a literature review"></a>2. Key elements and language in a literature review</h1><h2 id="2-1-Find-out-which-sentences-do-they-usually-use-in-following-parts"><a href="#2-1-Find-out-which-sentences-do-they-usually-use-in-following-parts" class="headerlink" title="2.1. Find out which sentences do they usually use in following parts"></a>2.1. Find out which sentences do they usually use in following parts</h2><ul>
<li>Introductory phrases</li>
<li>Introducing a study / group of studies</li>
<li>Summarising the content of studies / rephrasing what other authors found/said</li>
<li>Commenting on existing literature</li>
<li>Highlighting a gap in the literature</li>
<li>Concluding phrases</li>
</ul>
<h2 id="2-2-Useful-wwebsite"><a href="#2-2-Useful-wwebsite" class="headerlink" title="2.2. Useful wwebsite"></a>2.2. Useful wwebsite</h2><ul>
<li><a href="http://www.phrasebank.manchester.ac.uk/referring-to-sources/" title="Academic Phrasebank">Academic Phrasebank</a></li>
</ul>
<h1 id="3-The-Process"><a href="#3-The-Process" class="headerlink" title="3. The Process"></a>3. The Process</h1><h2 id="3-1-Preparing-a-literature-review"><a href="#3-1-Preparing-a-literature-review" class="headerlink" title="3.1. Preparing a literature review"></a>3.1. Preparing a literature review</h2><ol>
<li>Specifying<ol>
<li>Define: Define your objectives (broadly) to know what you are looking for</li>
<li>Prepare: Identify key words and search terms; Consider where to search for sources</li>
</ol>
</li>
<li>Searching and collecting<ol>
<li>Search: Search for relevant literature</li>
<li>Read: Read titles and abstracts</li>
<li>Note-making: Take notes from sources; Record bibliographic information</li>
<li>Review: Review your research questions and hypotheses</li>
</ol>
</li>
<li>Collating<ol>
<li>Create: Create a matrix to organise ideas by theme</li>
<li>Synthesise: Identify similarities, differences and gaps in the literature</li>
</ol>
</li>
<li>Writing<ol>
<li>Plan: Organise by theme (not source)</li>
<li>Draft: Write a first draft</li>
<li>Review: Re-read, peer review, tutor feedback</li>
<li>Edit: Re-write</li>
<li>Proofread: Final checks prior to submission</li>
</ol>
</li>
</ol>
<h1 id="4-Searching-for-sources"><a href="#4-Searching-for-sources" class="headerlink" title="4. Searching for sources"></a>4. Searching for sources</h1><h2 id="4-1-Undertaking-a-literature-search"><a href="#4-1-Undertaking-a-literature-search" class="headerlink" title="4.1. Undertaking a literature search"></a>4.1. Undertaking a literature search</h2><ul>
<li>The library : NUsearch</li>
<li>The internet<ul>
<li>Google Scholar</li>
<li>Google Books</li>
<li>JSTOR</li>
</ul>
</li>
</ul>
<h2 id="4-2-Search-terms"><a href="#4-2-Search-terms" class="headerlink" title="4.2. Search terms"></a>4.2. Search terms</h2><blockquote>
<p>For an effective search online, you need to have good search terms.</p>
</blockquote>
<ul>
<li>Key concepts from your topic</li>
<li>Synonyms</li>
<li>Spelling variations</li>
</ul>
<p><a href="https://mediaspace.nottingham.ac.uk/media/Search+Skills+Thinking+About+Keywords/1_4jqypm3c" title="Search Skills Thinking About Keywords">Vidoe: Search Skills Thinking About Keywords</a></p>
<h2 id="4-3-Filtering-your-search"><a href="#4-3-Filtering-your-search" class="headerlink" title="4.3. Filtering your search"></a>4.3. Filtering your search</h2><ul>
<li>Publication date</li>
<li>Source type (e.g. book, journal article)</li>
<li>Author</li>
<li>Topic</li>
<li>Language</li>
</ul>
<p><img src="FilterResults.png" alt="Example"></p>
<h2 id="4-4-Textbook-Reading"><a href="#4-4-Textbook-Reading" class="headerlink" title="4.4. Textbook Reading"></a>4.4. Textbook Reading</h2><ul>
<li>PP. 70~83</li>
</ul>
<h1 id="5-Evaluating-sources"><a href="#5-Evaluating-sources" class="headerlink" title="5. Evaluating sources"></a>5. Evaluating sources</h1><h2 id="5-1-CRAAP"><a href="#5-1-CRAAP" class="headerlink" title="5.1. CRAAP"></a>5.1. CRAAP</h2><blockquote>
<p>CRAAP helps you to evaluate your sources by using five criteria.</p>
</blockquote>
<h3 id="5-1-1-C-Currency"><a href="#5-1-1-C-Currency" class="headerlink" title="5.1.1. C(Currency)"></a>5.1.1. C(Currency)</h3><blockquote>
<p>This criteria relates to the <strong>timeliness</strong> of the source</p>
</blockquote>
<ul>
<li>When was the information published/posted?</li>
<li>Do you have the most up-to-date version/edition?</li>
<li>Is it important to have current information, or will older sources work as well?</li>
<li>Websites: Are links in the text working?</li>
</ul>
<h3 id="5-1-2-R-Relevance"><a href="#5-1-2-R-Relevance" class="headerlink" title="5.1.2. R(Relevance)"></a>5.1.2. R(Relevance)</h3><blockquote>
<p>This criteria relates to <strong>how important</strong> the information is to you</p>
</blockquote>
<ul>
<li>Does the information relate to your research?</li>
<li>Who is the intended audience?</li>
<li>Is the information at an appropriate level i.e. not too simple/too advanced for your needs?</li>
<li>Have you looked at a range of sources to be able to judge if this source is relevant?</li>
</ul>
<h3 id="5-1-3-A-Authority"><a href="#5-1-3-A-Authority" class="headerlink" title="5.1.3. A(Authority)"></a>5.1.3. A(Authority)</h3><blockquote>
<p>This criteria relates to <strong>where</strong> the information came from</p>
</blockquote>
<ul>
<li>Who is the author/publisher?</li>
<li>What are the credentials of the author/organisation?</li>
<li>Can you trust the source? What are their credentials?</li>
<li>Websites: Is contact information provided?</li>
<li>Websites: Is it easy for you to find out more about the author/ organisation?</li>
<li>Websites: What is the domain name e.g. co.uk?</li>
</ul>
<h3 id="5-1-4-A-Accuracy"><a href="#5-1-4-A-Accuracy" class="headerlink" title="5.1.4. A(Accuracy)"></a>5.1.4. A(Accuracy)</h3><blockquote>
<p>This criteria relates to the <strong>reliability</strong> of the source</p>
</blockquote>
<ul>
<li>Where does the information come from?</li>
<li>Is the information supported by evidence?</li>
<li>Has the information been reviewed or refereed?</li>
<li>Does the language or tone seem unbiased and free of emotion?</li>
<li>Are there spelling or grammar mistakes?</li>
</ul>
<h3 id="5-1-5-P-Purpose"><a href="#5-1-5-P-Purpose" class="headerlink" title="5.1.5. P(Purpose)"></a>5.1.5. P(Purpose)</h3><blockquote>
<p>This criteria relates to the <strong>reason</strong> the information exists</p>
</blockquote>
<ul>
<li>What is the purpose of the information? Is it to inform, teach, sell etc.?</li>
<li>Is the information fact, opinion or propaganda?</li>
<li>Does the point of view appear objective and impartial?</li>
<li>Is there any bias (e.g. political, cultural, personal)?</li>
</ul>
<h1 id="6-Reading-skills"><a href="#6-Reading-skills" class="headerlink" title="6. Reading skills"></a>6. Reading skills</h1><h2 id="6-1-Reading-strategies"><a href="#6-1-Reading-strategies" class="headerlink" title="6.1. Reading strategies"></a>6.1. Reading strategies</h2><ul>
<li>skimming</li>
<li>scanning</li>
<li>reading intensively</li>
</ul>
<h2 id="6-2-Reading-abstracts"><a href="#6-2-Reading-abstracts" class="headerlink" title="6.2. Reading abstracts"></a>6.2. Reading abstracts</h2><ul>
<li>What was the purpose of the study?</li>
<li>How was the research conducted?</li>
<li>What were the results?</li>
<li>What are the conclusions/implications of this research?</li>
<li>How relevant is the article to your research topic?</li>
</ul>
<p><img src="ReadingAbstracts.jpg" alt="Reading Abstracts Example"></p>
<h1 id="7-Refining-research-questions"><a href="#7-Refining-research-questions" class="headerlink" title="7. Refining research questions"></a>7. Refining research questions</h1><h2 id="7-1-Criteria-for-a-research-question"><a href="#7-1-Criteria-for-a-research-question" class="headerlink" title="7.1. Criteria for a research question"></a>7.1. Criteria for a research question</h2><ol>
<li>Is it answerable?<ul>
<li>The concepts must be distinct and testable</li>
</ul>
</li>
<li>Is it clear?<ul>
<li>Its meaning must be explicit</li>
</ul>
</li>
<li>Does it have theoretical significance or practical relevance?<ul>
<li>It can be basic or applied research</li>
</ul>
</li>
</ol>
<h1 id="8-Reading-journal-articles"><a href="#8-Reading-journal-articles" class="headerlink" title="8. Reading journal articles"></a>8. Reading journal articles</h1><h2 id="8-1-Journal-article-structure"><a href="#8-1-Journal-article-structure" class="headerlink" title="8.1. Journal article structure"></a>8.1. Journal article structure</h2><ol>
<li>Abstract</li>
<li>Introduction</li>
<li>Literature Review</li>
<li>Methods / Methodology</li>
<li>Results</li>
<li>Discussion</li>
<li>Conclusion / Recommendations</li>
<li>Reference List        </li>
<li>Appendices</li>
</ol>
<h2 id="8-2-Reading-strategies"><a href="#8-2-Reading-strategies" class="headerlink" title="8.2. Reading strategies"></a>8.2. Reading strategies</h2><blockquote>
<p>SQ2R</p>
</blockquote>
<ul>
<li>S(Survey): Skim the whole piece, remembering that key nuggets of information occur at the beginning and end of a chapter or article, and at the beginning and end of paragraphs.</li>
<li>Q(Question): Now ask yourself questions, related especially to what you intend to find out. Don’t worry too much about stuff that irrelevant: stick to questions that are important to you.</li>
<li>R(Read): Read the whole piece, again fairly quickly, don’t get hung up on difficult bits - and, if the book is yours, mark it with a highlighter or a pencil for key words or phrases, especially those that are relevant to your questions.</li>
<li>R(Recall): Recall what was in the piece(having shut the book first). Jot down notes. If you aren’t able to remember anything, start again with survey.</li>
</ul>
<h2 id="8-3-Critical-reading-method"><a href="#8-3-Critical-reading-method" class="headerlink" title="8.3. Critical reading method"></a>8.3. Critical reading method</h2><div class="pdf" target="IAD_Critical_reading_form_method_CC_2018.pdf" height=""></div>
<hr>
<h1 id="9-Note-taking"><a href="#9-Note-taking" class="headerlink" title="9. Note-taking"></a>9. Note-taking</h1><h2 id="9-1-Record-keeping"><a href="#9-1-Record-keeping" class="headerlink" title="9.1. Record keeping"></a>9.1. Record keeping</h2><blockquote>
<p>Keep a record of the sources you have read.</p>
</blockquote>
<ul>
<li>It will help you to stay organised</li>
<li>It will help you to locate sources again</li>
<li>The log will help you to prepare your reference list</li>
</ul>
<p><a href="https://www.mybib.com/">MyBib</a><br><img src="MyBib.jpg" alt="MyBib"></p>
<p><a href="www.mendeley.com">Mendeley</a><br><img src="Mendeley.jpg" alt="Mendeley"></p>
<h2 id="9-2-Note-taking-methods"><a href="#9-2-Note-taking-methods" class="headerlink" title="9.2. Note-taking methods"></a>9.2. Note-taking methods</h2><ul>
<li>Linear notes</li>
<li>Pattern notes</li>
<li>Cornell method</li>
<li>Annotate text</li>
</ul>
<div class="video-container"><iframe src="https://www.youtube.com/embed/19E01YLaaIg" frameborder="0" loading="lazy" allowfullscreen></iframe></div>
<hr>
<h2 id="9-3-Note-taking-Tools"><a href="#9-3-Note-taking-Tools" class="headerlink" title="9.3. Note-taking Tools"></a>9.3. Note-taking Tools</h2><ul>
<li><a href="https://www.marginnote.com/">MarginNote</a><br><img src="marginnote3.jpg" alt="MarginNote3"></li>
</ul>
<h2 id="9-3-Critical-reading-notes"><a href="#9-3-Critical-reading-notes" class="headerlink" title="9.3. Critical reading notes"></a>9.3. Critical reading notes</h2><div class="pdf" target="IAD_Reading_notes_record_sheet_CC_2018.pdf" height=""></div>
<hr>
<h1 id="10-Critiquing-sources"><a href="#10-Critiquing-sources" class="headerlink" title="10. Critiquing sources"></a>10. Critiquing sources</h1><h2 id="10-1-What-is-a-critique"><a href="#10-1-What-is-a-critique" class="headerlink" title="10.1. What is a critique?"></a>10.1. What is a critique?</h2><ul>
<li>Analyses, interprets and evaluates research</li>
<li>Evaluates the strengths and weaknesses of the research</li>
<li>Is not necessarily critical!</li>
</ul>
<h2 id="10-2-A-strategy-for-critiquing-research"><a href="#10-2-A-strategy-for-critiquing-research" class="headerlink" title="10.2. A strategy for critiquing research"></a>10.2. A strategy for critiquing research</h2><ul>
<li>A useful strategy for critiquing a research article is to <strong>systematically</strong> appraise each component</li>
<li>Research terminology: It is important you are familiar with key terms (and synonyms)<ul>
<li>Findings are sometimes called results</li>
<li>The discussion section is sometimes called the conclusion</li>
<li>Research appraisal is another term for evaluating research</li>
</ul>
</li>
<li>Understanding the structure of articles<ul>
<li>Some articles include the literature review in the introduction whereas others present it separately afterward</li>
<li>Research questions appear in the literature review in some articles but others present them in the introduction</li>
</ul>
</li>
</ul>
<h2 id="10-3-Critiquing-a-journal-article"><a href="#10-3-Critiquing-a-journal-article" class="headerlink" title="10.3. Critiquing a journal article"></a>10.3. Critiquing a journal article</h2><h3 id="10-3-1-Critiquing-the-abstract"><a href="#10-3-1-Critiquing-the-abstract" class="headerlink" title="10.3.1. Critiquing the abstract"></a>10.3.1. Critiquing the abstract</h3><ul>
<li>Does it present the research questions and purpose of the research?</li>
<li>Does it detail the methods adopted?</li>
<li>Does the abstract present the findings?</li>
<li>Does it present a discussion of the findings?</li>
</ul>
<h3 id="10-3-2-Critiquing-the-introduction"><a href="#10-3-2-Critiquing-the-introduction" class="headerlink" title="10.3.2. Critiquing the introduction"></a>10.3.2. Critiquing the introduction</h3><ul>
<li>An introduction should be judged in terms of:<ul>
<li>how well it justifies the purpose of the research</li>
<li>how clearly it presents the research questions</li>
<li>how comprehensively it reviews relevant theories</li>
</ul>
</li>
<li>Research questions should be appraised by considering their:<ul>
<li>clarity</li>
<li>relevance</li>
<li>importance</li>
<li>practicality</li>
</ul>
</li>
</ul>
<h3 id="10-3-3-Critiquing-the-literature-review"><a href="#10-3-3-Critiquing-the-literature-review" class="headerlink" title="10.3.3. Critiquing the literature review"></a>10.3.3. Critiquing the literature review</h3><ul>
<li>Is the literature review broad, yet focused on the issue?</li>
<li>Is there historical as well as contemporary material to put the area of study into context?</li>
<li>Is there convincing evidence to support assertions?</li>
<li>Does it fairly represent opposing views?</li>
<li>Does the literature review use a theoretical framework?</li>
<li>Does it reveal gaps in the knowledge which this research will fill?</li>
</ul>
<h3 id="10-3-4-Critiquing-methods"><a href="#10-3-4-Critiquing-methods" class="headerlink" title="10.3.4. Critiquing methods"></a>10.3.4. Critiquing methods</h3><h4 id="10-3-4-1-Research-design"><a href="#10-3-4-1-Research-design" class="headerlink" title="10.3.4.1. Research design"></a>10.3.4.1. Research design</h4><ul>
<li>Is the research design adequately described and justified?</li>
<li>Is it qualitative, quantitative or mixed method (both quantitative and quantitative)?</li>
<li>Have the authors considered the appropriateness of each design, and explained how the chosen design suits the research questions?</li>
<li>Are you convinced that the design is appropriate to the research?</li>
</ul>
<h4 id="10-3-4-2-Sampling"><a href="#10-3-4-2-Sampling" class="headerlink" title="10.3.4.2. Sampling"></a>10.3.4.2. Sampling</h4><ul>
<li>How were respondents selected?</li>
<li>What sampling type was used? For example, probability or non-probability?</li>
<li>Is the sampling type sufficiently described and justified?</li>
<li>How many respondents were selected?</li>
<li>Is the sample representative?</li>
<li>Sampling strategy can only be appraised if it is adequately described, therefore consider if you can critique the sampling strategy.</li>
</ul>
<h4 id="10-3-4-3-Data-collection"><a href="#10-3-4-3-Data-collection" class="headerlink" title="10.3.4.3. Data collection"></a>10.3.4.3. Data collection</h4><ul>
<li>Whether the methods (for example, interviews, questionnaires) used to collect data were sufficiently described and justified?</li>
<li>Why the methods were selected. Do you think they were appropriate to the research questions?</li>
<li>How many interviews or questionnaires were undertaken? What type of interview was selected:                 structured or semi-structured? Is the type of interview selected appropriate?</li>
<li>whether the research setting was fully described? Are the merits of the research setting considered? For example, did the setting help or hinder data collection?</li>
<li>How the researcher gained access to respondents?     Are there any ethical or validity issues associated with their approach? For example, did they use gatekeepers?</li>
</ul>
<h4 id="10-3-4-4-Pilot-studies"><a href="#10-3-4-4-Pilot-studies" class="headerlink" title="10.3.4.4. Pilot studies"></a>10.3.4.4. Pilot studies</h4><ul>
<li>Were the methods sufficiently tested?</li>
<li>Are the pilot study procedures fully described and justified?</li>
<li>Were the pilot studies appropriate?</li>
<li>What did the researchers learn from the pilot studies?</li>
<li>Were the pilot study results adhered to or ignored?</li>
</ul>
<h4 id="10-3-4-5-Ethics"><a href="#10-3-4-5-Ethics" class="headerlink" title="10.3.4.5. Ethics"></a>10.3.4.5. Ethics</h4><ul>
<li>Was due care and attention given to the ethical issues involved in the research? Were ethical procedures comprehensively documented?    For example, informed consent, confidentiality,                     anonymity and transcript validation.</li>
<li>Did the researchers consider the ethical issues related to all aspects of the research? For example, access to respondents, seeking informed consent, protecting confidentiality in data         analysis and in presenting findings.</li>
</ul>
<h4 id="10-3-4-6-Analysis"><a href="#10-3-4-6-Analysis" class="headerlink" title="10.3.4.6. Analysis"></a>10.3.4.6. Analysis</h4><ul>
<li>Once the data was collected, how was it analysed? For example, coding, statistical tests</li>
<li>Are the analytical procedures adequately described and justified?</li>
<li>Do you fully understand precisely how the data was analysed?</li>
<li>Why were the analytical procedures chosen?</li>
<li>Do you think these procedures were appropriate to the data?</li>
</ul>
<h3 id="10-3-5-Critiquing-findings"><a href="#10-3-5-Critiquing-findings" class="headerlink" title="10.3.5. Critiquing findings"></a>10.3.5. Critiquing findings</h3><ul>
<li>If the researcher includes particular forms of analysis, such as graphs or tables, in the article, he or she must relate them to the research question. (Such material cannot be    presented in isolation.)</li>
<li>Whether all findings are accompanied by analytical comment otherwise it is just a very long list of    data!</li>
<li>Are the findings clearly presented? Are they presented in context?</li>
<li>Can you assess whether or not the findings are representative of the data? For example, are the findings from all data collection methods presented?</li>
</ul>
<h3 id="10-3-6-Critiquing-discussion"><a href="#10-3-6-Critiquing-discussion" class="headerlink" title="10.3.6. Critiquing discussion"></a>10.3.6. Critiquing discussion</h3><ul>
<li>Is the discussion placed within a broader context? Is it closely related to the literature review?</li>
<li>Would you arrive at the same conclusions?</li>
<li>Are there are limitations to the research, and are they addressed in the discussion?</li>
<li>What has this research added to the body of knowledge?</li>
<li>How could or should it affect future research? Does it suggest any potential future research projects?</li>
</ul>
<h2 id="10-4-Extra-Reading"><a href="#10-4-Extra-Reading" class="headerlink" title="10.4. Extra Reading"></a>10.4. Extra Reading</h2><div class="pdf" target="critiquing-research-articles.pdf" height=""></div>

<h1 id="11-Writing-the-Literature-Review"><a href="#11-Writing-the-Literature-Review" class="headerlink" title="11. Writing the Literature Review"></a>11. Writing the Literature Review</h1><div class="video-container"><iframe src="https://www.youtube.com/embed/70n2-gAp7J0" frameborder="0" loading="lazy" allowfullscreen></iframe></div>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>TUNIC</category>
      </categories>
      <tags>
        <tag>PM600 Research Project</tag>
      </tags>
  </entry>
  <entry>
    <title>Theme 4 - The Project Management Plan</title>
    <url>/2020/01/09/Theme-4-The-Project-Management-Plan/</url>
    <content><![CDATA[<h1 id="1-Project-Management-Plan-PMP"><a href="#1-Project-Management-Plan-PMP" class="headerlink" title="1. Project Management Plan (PMP)"></a>1. Project Management Plan (PMP)</h1><blockquote>
<p>A Project Management Plan is a document that lays out the <strong>tasks, time, people and resources</strong> needed for the project to be successfully completed.</p>
</blockquote>
<ul>
<li>It provides information you can use to explain your project to other people.</li>
<li>The PMP is a tool for allocating work and managing people as well as understanding the time and cost of a project.  It is developed and owned by the project manager.  </li>
<li>Major changes to the PMP must be approved by the <strong>Project Board</strong>.</li>
</ul>
<a id="more"></a>

<h2 id="1-1-PID-and-PMP"><a href="#1-1-PID-and-PMP" class="headerlink" title="1.1. PID and PMP"></a>1.1. PID and PMP</h2><table>
<thead>
<tr>
<th align="center">PID</th>
<th align="center">PMP</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Why? <br> Why do you want to do the project?</td>
<td align="center">How? <br> What tasks are needed to achieve this?</td>
</tr>
<tr>
<td align="center">What? <br> What will the project give you that you don’t have now?</td>
<td align="center">Who and When? <br> Who will do these tasks, when and in what order?</td>
</tr>
</tbody></table>
<h2 id="1-2-Producing-a-PMP"><a href="#1-2-Producing-a-PMP" class="headerlink" title="1.2. Producing a PMP"></a>1.2. Producing a PMP</h2><ol>
<li>Divide the project into <strong>component tasks</strong> to give a full list of things that must be done to complete the project.</li>
<li><strong>Estimate the time</strong> each task will take to complete.</li>
<li>Order the tasks in the <strong>correct sequence</strong>.</li>
<li>Determine the <strong>people, money and other resources</strong> needed to complete each task.</li>
<li>Check resource availability.</li>
<li><strong>Review</strong> – Can this project be achieved?</li>
</ol>
<h1 id="2-Communication"><a href="#2-Communication" class="headerlink" title="2. Communication"></a>2. Communication</h1><ul>
<li>A vital part of managing a project is managing the lines of communication.</li>
<li>A formal communication strategy will help you to organise your communications.</li>
<li>You need to consider <strong>who</strong> you must communicate with, <strong>when</strong> you need to communicate, and the <strong>purpose of the communication</strong>.</li>
</ul>
<h2 id="2-1-Communication-information"><a href="#2-1-Communication-information" class="headerlink" title="2.1. Communication information"></a>2.1. Communication information</h2><blockquote>
<p>The Project Manager is required to communicate her or his plans to stakeholders throughout the project life cycle</p>
</blockquote>
<ul>
<li><strong>Initiation</strong> : An idea for an emerging technology emerges. This needs to be communicated to others.</li>
<li><strong>Planning</strong><ul>
<li>Through electronic communication</li>
<li>In person</li>
</ul>
</li>
<li><strong>Execution</strong> : Doing the tasks identified within the project needs communication and feedback.</li>
<li><strong>Closure</strong> : Similarly, signing off on a project needs communication to check details and receive feedback.</li>
</ul>
<h2 id="2-2-Claude-Shannon’s-Communication-Process-Cycle-Model"><a href="#2-2-Claude-Shannon’s-Communication-Process-Cycle-Model" class="headerlink" title="2.2. Claude Shannon’s Communication Process Cycle Model"></a>2.2. Claude Shannon’s Communication Process Cycle Model</h2><p><img src="ShannonCommunicationProcessCycleModel.jpg"></p>
<ul>
<li><strong>Encoding the message</strong>: Sender must choose an appropriate medium and encode a message that is clear, appropriate, objective(preferably free from bias), detailed, but also persuasive and succinct.</li>
<li><strong>Noise</strong>: Misunderstanding and barriers can emerge which can disrupt, or disort the original meaning of the sender’s message. Misunderstanding can cause tension, conflict, and subsequent project delays.</li>
</ul>
<h2 id="2-3-Communication-Channels"><a href="#2-3-Communication-Channels" class="headerlink" title="2.3. Communication Channels"></a>2.3. Communication Channels</h2><ul>
<li><strong>Face-to-Face</strong><br>Face-to-face communication is <strong>effective for persuading others and seeking agreement</strong>. It is also useful to address sensitive issues e.g. conflict and tension.</li>
<li><strong>Electronic communication</strong><br>It is effective for <strong>communicating across distances, quickly and cheaply</strong>.</li>
</ul>
<h1 id="3-Tasks-of-the-Project-Management-Plan"><a href="#3-Tasks-of-the-Project-Management-Plan" class="headerlink" title="3. Tasks of the Project Management Plan"></a>3. Tasks of the Project Management Plan</h1><h2 id="3-1-Breaking-down-tasks"><a href="#3-1-Breaking-down-tasks" class="headerlink" title="3.1. Breaking down tasks"></a>3.1. Breaking down tasks</h2><p>The purpose of the PMP is to allow the estimation of time and cost, and the allocation of people and resources.  Tasks should be broken down enough to allow you to do this.</p>
<h2 id="3-2-Milestones"><a href="#3-2-Milestones" class="headerlink" title="3.2. Milestones"></a>3.2. Milestones</h2><ul>
<li>Milestones are points in a project that identify when you have completed an <strong>important stage</strong> of the project.</li>
<li>They are useful to track progress at a high level and to communicate to people outside the project.</li>
<li>They are not activities, but reflect the completion of a series of activities and the <strong>production of key deliverables</strong>.</li>
</ul>
<div class="video-container"><iframe src="https://www.youtube.com/embed/aJcd1rQ0Z9w" frameborder="0" loading="lazy" allowfullscreen></iframe></div>

<h2 id="3-3-Estimating-time"><a href="#3-3-Estimating-time" class="headerlink" title="3.3. Estimating time"></a>3.3. Estimating time</h2><p>The part of planning that people usually find the hardest is estimating how long the project will take.  Accurate estimating can be difficult.  Most people are not naturally good at it, this is because they don’t know how to do it.</p>
<ul>
<li>Ask someone who does know</li>
<li>Use any available rules of thumb</li>
<li>Model it against other similar tasks</li>
<li>Break down the task further until you get tasks you can estimate</li>
<li>Make an assumption</li>
</ul>
<h2 id="3-4-Estimating-Methods"><a href="#3-4-Estimating-Methods" class="headerlink" title="3.4. Estimating Methods"></a>3.4. Estimating Methods</h2><ol>
<li>Bottom-Up Estimating<br>Bottom-up estimating allows you to create an estimate for the project as a whole. To analyze from the “bottom up,” <strong>break larger tasks down into detailed tasks</strong>, and then estimate the time needed to complete each one.<br>Because you’re considering each task incrementally, your estimate of the time required for <strong>each task is likely to be more accurate</strong>. You can then <strong>add up</strong> the total amount of time needed to complete the plan.</li>
<li>Top-Down Estimating<br>In top-down analysis, you develop an overview of the expected timeline first, <strong>using past projects or previous experience as a guide</strong>.<br>It’s often helpful to compare top-down estimates against your bottom-up estimates, to ensure accuracy.</li>
<li>Comparative Estimating<br>With comparative estimating, you look at the time it took to do <strong>similar tasks</strong>, on other projects.</li>
<li>Parametric Estimating<br>With this method, you estimate the time required for one deliverable; and then <strong>multiply it</strong> by the number of deliverables required.</li>
<li>Three-Point Estimating<br>To build in a cushion for uncertainty, you can do three estimates – one for the <strong>best case</strong>, another for the <strong>worst case</strong>, and a final one for <strong>the most likely case</strong>.<br>Although this approach requires additional effort to create three separate estimates, it allows you to set more reasonable expectations, based on a more realistic estimate of outcomes.</li>
</ol>
<h2 id="3-5-Contingency"><a href="#3-5-Contingency" class="headerlink" title="3.5. Contingency"></a>3.5. Contingency</h2><blockquote>
<p>In real life things may go wrong.  You deal with this by setting aside time and money that you will try not to use, but will if there are problems.  This is called contingency.</p>
</blockquote>
<ul>
<li><strong>Low risk</strong>, familiar tasks: 5-10% contingency</li>
<li><strong>Medium risk</strong>, less familiar tasks: 20-25% contingency</li>
<li><strong>High risk</strong>, unfamiliar tasks: 50% contingency</li>
</ul>
<h2 id="3-6-Ordering-the-tasks"><a href="#3-6-Ordering-the-tasks" class="headerlink" title="3.6. Ordering the tasks"></a>3.6. Ordering the tasks</h2><ul>
<li><strong>Predecessor dependencies</strong> : Some tasks can only be done when other tasks have been done first</li>
<li><strong>External dependencies</strong> : Some tasks are done outside the project, but the project cannot move forward without them.</li>
<li><strong>Availability of people</strong> : Some tasks can be sped up by adding more people, while others cannot.</li>
</ul>
<h2 id="3-7-Dealing-with-costs"><a href="#3-7-Dealing-with-costs" class="headerlink" title="3.7. Dealing with costs"></a>3.7. Dealing with costs</h2><ul>
<li>Staff wages</li>
<li>Renting space</li>
<li>Materials</li>
<li>Tools</li>
<li>Cost estimation – the more you have to guess costs, the more <strong>contingency</strong> you need</li>
</ul>
<div class="video-container"><iframe src="https://www.youtube.com/embed/n-3rQUjSGtk" frameborder="0" loading="lazy" allowfullscreen></iframe></div>

<h1 id="4-Creating-your-PMP"><a href="#4-Creating-your-PMP" class="headerlink" title="4. Creating your PMP"></a>4. Creating your PMP</h1><ol>
<li>Brainstorm a task list</li>
<li>Add the tasks to the PMP template</li>
<li>Estimate times and dependencies</li>
<li>Allocate staff to tasks</li>
<li>Work out a schedule</li>
<li>Work out costs</li>
<li>Add in milestones and contingency</li>
<li>Review and amend</li>
</ol>
<h1 id="5-Project-Pitch"><a href="#5-Project-Pitch" class="headerlink" title="5. Project Pitch"></a>5. Project Pitch</h1><h2 id="5-1-What-is-a-pitch"><a href="#5-1-What-is-a-pitch" class="headerlink" title="5.1. What is a pitch?"></a>5.1. What is a pitch?</h2><ul>
<li>Pitch is a <strong>presentation of a business idea</strong> to potential investors</li>
<li>People pitch a business because they need resources</li>
<li>If the goal is to raise startup cash, the target of the pitch is an investor.</li>
<li>Other businesses pitch to potential customers to sell their product.</li>
<li>Some organizations pitch because they need a partner or resource to help them accomplish their mission.</li>
</ul>
<h2 id="5-2-What-makes-a-compelling-pitch"><a href="#5-2-What-makes-a-compelling-pitch" class="headerlink" title="5.2. What makes a compelling pitch?"></a>5.2. What makes a compelling pitch?</h2><ul>
<li>A good pitch <strong>balances</strong> business and emotional needs.</li>
<li>A good pitch is <strong>succinct</strong>.</li>
<li>A good pitch tells a <strong>story</strong>.</li>
<li>A good pitch focuses on <strong>benefits</strong></li>
</ul>
<h2 id="5-3-Pitching-Essentials"><a href="#5-3-Pitching-Essentials" class="headerlink" title="5.3. Pitching Essentials"></a>5.3. Pitching Essentials</h2><ul>
<li>Know <strong>who</strong> you’re pitching to</li>
<li>Understand their <strong>needs and motivations</strong></li>
<li>Go deep into what challenges they face</li>
<li>Create a beautiful and powerful presentation</li>
<li>Have an up-to-date rendering/mock-up of your product</li>
<li>Solicit testimonials from current users or investors</li>
<li>Film promotional or explainer videos</li>
<li>Craft an exciting intro</li>
<li>Explain the business opportunity</li>
<li>Highlight the underlying <strong>business model</strong></li>
<li>Answer why you can beat the market</li>
<li>Explain who you are and shape your story</li>
<li>Cover your current traction</li>
<li>Make your ask incredibly clear</li>
<li>Keep it short</li>
<li><strong>Anticipate</strong> and answer key questions (before your audience asks)</li>
<li>Be ready to deal with objections and tough questions</li>
<li><strong>Rehearse</strong></li>
</ul>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>TUNIC</category>
      </categories>
      <tags>
        <tag>PM605 Project Management</tag>
      </tags>
  </entry>
  <entry>
    <title>Theme 6 - Literature Review</title>
    <url>/2019/11/21/Theme-6-Literature-Review/</url>
    <content><![CDATA[<h1 id="1-Identifying-themes"><a href="#1-Identifying-themes" class="headerlink" title="1. Identifying themes"></a>1. Identifying themes</h1><h2 id="1-1-What-do-you-think-is-meant-by-‘themes’-in-the-literature"><a href="#1-1-What-do-you-think-is-meant-by-‘themes’-in-the-literature" class="headerlink" title="1.1. What do you think is meant by ‘themes’ in the literature?"></a>1.1. What do you think is meant by ‘themes’ in the literature?</h2><p>When you read and take notes from sources, you should identify the <strong>ideas/topics/issues</strong> that are discussed. Next, you must <strong>analyse and synthesise</strong> your notes to identify <strong>how different sources deal with the same ideas/topics/ issues</strong>. These will be the <strong>emerging themes</strong> that you have found in the literature.</p>
<h2 id="1-2-Good-ways-to-identify-themes"><a href="#1-2-Good-ways-to-identify-themes" class="headerlink" title="1.2. Good ways to identify themes"></a>1.2. Good ways to identify themes</h2><ul>
<li><strong>colour</strong> to highlight similar ideas in texts</li>
<li>use <strong>mind map</strong> to draw connections between texts</li>
<li><strong>matrix/Excel</strong> to note idears from the texts</li>
</ul>
<a id="more"></a>

<h1 id="2-Literature-review-structure"><a href="#2-Literature-review-structure" class="headerlink" title="2. Literature review structure"></a>2. Literature review structure</h1><h2 id="2-1-Structure-overview"><a href="#2-1-Structure-overview" class="headerlink" title="2.1. Structure overview"></a>2.1. Structure overview</h2><ul>
<li>Introduction</li>
<li>Main body</li>
<li>Conclusion</li>
</ul>
<h2 id="2-2-Introduction"><a href="#2-2-Introduction" class="headerlink" title="2.2. Introduction"></a>2.2. Introduction</h2><ul>
<li>Why the topic is important - is it an area of current interest?</li>
<li>The scope of the review - the aspects of the topic that will be covered</li>
<li>How the review is organised</li>
<li>Whether the topic has been widely researched</li>
<li>Whether there is debate and controversy about the topic or a consensus</li>
<li>How the review links to your research topic</li>
</ul>
<h2 id="2-3-Main-body"><a href="#2-3-Main-body" class="headerlink" title="2.3. Main body"></a>2.3. Main body</h2><ul>
<li>be clearly and logically organised<ul>
<li>by theme (not source)</li>
<li>by methodology</li>
<li>by theory</li>
<li>chronologically</li>
</ul>
</li>
<li>a heading(<strong>optional</strong>) for each section/idea/theme</li>
<li><strong>summarise and synthesise</strong> the key literature in your chosen area</li>
<li>include your <strong>evaluation/comments</strong> on the literature</li>
<li>adopt a <strong>critical</strong> (not descriptive) tone</li>
</ul>
<h2 id="2-4-Conclusion"><a href="#2-4-Conclusion" class="headerlink" title="2.4. Conclusion"></a>2.4. Conclusion</h2><ul>
<li>summarise the key points discussed in the main body (e.g. the main agreements/disagreements in the literature)</li>
<li>provide an overall evaluation of the literature in your field</li>
<li>identify gaps/issues in the literature</li>
<li>explain how your research will address the gap(s)</li>
</ul>
<h2 id="2-5-Tips"><a href="#2-5-Tips" class="headerlink" title="2.5. Tips"></a>2.5. Tips</h2><ul>
<li>Don’t simply describe sources one by one</li>
<li>Only <strong>summarise the key points</strong> from sources –     do not focus on every detail</li>
<li>Sources should be paraphrased or summarised.     <strong>Avoid copying chunks</strong> of text from sources</li>
<li>Ensure all sources are <strong>cited correctly</strong> in the literature review and all are included in the reference list</li>
</ul>
<h1 id="3-Paraphrasing-and-summarising"><a href="#3-Paraphrasing-and-summarising" class="headerlink" title="3. Paraphrasing and summarising"></a>3. Paraphrasing and summarising</h1><h2 id="3-1-What-is-paraphrasing"><a href="#3-1-What-is-paraphrasing" class="headerlink" title="3.1. What is paraphrasing?"></a>3.1. What is paraphrasing?</h2><ul>
<li>allows a writer to use the ideas or information from a source in their own work</li>
<li>shows <strong>you’ve understood</strong> somebody else’s idea; you’re not presenting it as your own</li>
<li>helps you to <strong>avoid plagiarism</strong></li>
</ul>
<h2 id="3-2-What-is-summarising"><a href="#3-2-What-is-summarising" class="headerlink" title="3.2. What is summarising?"></a>3.2. What is summarising?</h2><ul>
<li>use the ideas of others in your writing</li>
<li>focus on the <strong>key points</strong> from a source</li>
<li><strong>demonstrate your understanding</strong> of different viewpoints on a topic</li>
<li>avoid plagiarism</li>
</ul>
<h2 id="3-3-Why-should-I-paraphrase-summarise-in-the-literature-review"><a href="#3-3-Why-should-I-paraphrase-summarise-in-the-literature-review" class="headerlink" title="3.3. Why should I paraphrase/summarise in the literature review?"></a>3.3. Why should I paraphrase/summarise in the literature review?</h2><ul>
<li>it <strong>demonstrates understanding</strong> of what you have read</li>
<li>sometimes <strong>difficult ideas</strong> can be communicated more <strong>simply and directly</strong></li>
<li>it better shows how your ideas are <strong>related to or are different from</strong> what you have read</li>
<li>you should <strong>not rely</strong> heavily on <strong>direct quotations</strong></li>
</ul>
<h2 id="3-4-What-does-paraphrasing-involve"><a href="#3-4-What-does-paraphrasing-involve" class="headerlink" title="3.4. What does paraphrasing involve?"></a>3.4. What does paraphrasing involve?</h2><ul>
<li><strong>changing</strong> the <strong>words</strong> of a text</li>
<li>significantly <strong>changing the structure</strong> of the original text, but <strong>maintaining the same meaning</strong></li>
<li>keeping the <strong>length</strong> of the paraphrase <strong>approximately the same</strong> as the original text</li>
</ul>
<h2 id="3-5-Seven-steps-to-a-successful-paraphrase"><a href="#3-5-Seven-steps-to-a-successful-paraphrase" class="headerlink" title="3.5. Seven steps to a successful paraphrase"></a>3.5. Seven steps to a successful paraphrase</h2><ol>
<li>Read original sentence</li>
<li>Note key points</li>
<li>Identify technical/specialist words</li>
<li>Select synonyms for other words</li>
<li>Change the grammatical structure</li>
<li>Add a citation</li>
<li>Check your paraphrase retains the original meaning</li>
</ol>
<h2 id="3-6-What-does-Summarising-involve"><a href="#3-6-What-does-Summarising-involve" class="headerlink" title="3.6. What does Summarising involve?"></a>3.6. What does Summarising involve?</h2><ul>
<li>be significantly <strong>shorter</strong> than the original text</li>
<li><strong>retain the same meaning</strong> as the original text</li>
<li>have a different structure and/or use different words (preferably both)</li>
<li>be accompanied by a <strong>reference</strong> to the source</li>
</ul>
<h2 id="3-7-Six-steps-to-a-successful-summary"><a href="#3-7-Six-steps-to-a-successful-summary" class="headerlink" title="3.7. Six steps to a successful summary"></a>3.7. Six steps to a successful summary</h2><ol>
<li>Make notes of the <strong>key points</strong> in your own words</li>
<li>Include an <strong>in-text citation</strong></li>
<li>Identify the key points</li>
<li>Write the summary <strong>from your notes</strong> (not the original text)</li>
<li>Read the text carefully, check vocabulary and ensure full understanding</li>
<li>Check that the summary does not distort the meaning of the original text</li>
</ol>
<h2 id="3-8-In-text-Citation"><a href="#3-8-In-text-Citation" class="headerlink" title="3.8. In-text Citation"></a>3.8. In-text Citation</h2><h3 id="3-8-1-Information-prominent"><a href="#3-8-1-Information-prominent" class="headerlink" title="3.8.1. Information prominent"></a>3.8.1. Information prominent</h3><blockquote>
<p>Hightlight the <strong>infromation</strong>. The author’s name and publication year are both given in brackets before the full stop.</p>
</blockquote>
<p>……xxxxxx.(Wakefield,2015).</p>
<ul>
<li>Reporting facts and statistic ect.</li>
<li>It also helps to keep your word count lower.</li>
</ul>
<h3 id="3-8-2-Author-prominent"><a href="#3-8-2-Author-prominent" class="headerlink" title="3.8.2. Author prominent"></a>3.8.2. Author prominent</h3><blockquote>
<p>Hightlight the <strong>author’s name</strong> and use a reporting word to introduce the information. The publication year is given in brackets after the author’s name.</p>
</blockquote>
<p> Wakefield(2015) states that ……</p>
<ul>
<li>The reporting verb you choose can show opinion, distance and attitude as well as the type of infromation or research cited.</li>
</ul>
<h3 id="3-8-3-Reporting-verbs"><a href="#3-8-3-Reporting-verbs" class="headerlink" title="3.8.3. Reporting verbs"></a>3.8.3. Reporting verbs</h3><blockquote>
<p>Author prominent always need a reporting verb. <a href="https://www.eapfoundation.com/writing/references/reporting/"><strong><em>URL</em></strong></a></p>
</blockquote>
<ul>
<li>verb + preposition<ul>
<li>Adames(2009) <strong>defines</strong> the education <strong>as</strong> the process of …</li>
<li>Brown(2014) <strong>compares</strong> the modern classroom <strong>to</strong> a circus where …</li>
<li>Clarke(2016) <strong>subscribes to</strong> the view of technology as a disruptive …  </li>
</ul>
</li>
<li>verb + that<ul>
<li>Adames(2019) <strong>argues that</strong> vegetarians have better …</li>
<li>Brown(2014) <strong>warns that</strong> too much meat in the diet can cause …</li>
<li>Clarke(2016) <strong>found that</strong> more than 90% of vegans had …</li>
<li>verbs: assert; demonstrate; state; observe; reveal; explain; discover; maintain; believe; imply; conclude;</li>
</ul>
</li>
<li>verb + none(or -ing form)<ul>
<li>Adames(2009) <strong>discusses the importance</strong> of …</li>
<li>Brown(2014) <strong>supports using</strong> mobile devices in …</li>
<li>Clarke(2016) <strong>considers the impact</strong> on the environment …</li>
<li>verbs: describe; examine; investigate; refute; analyse; reject; study; justify</li>
</ul>
</li>
</ul>
<h3 id="3-8-4-According-to"><a href="#3-8-4-According-to" class="headerlink" title="3.8.4. According to"></a>3.8.4. According to</h3><blockquote>
<p>You can start a citation with “According to…”.</p>
</blockquote>
<p>According to Adames(2009), <del>he found that</del> vegans are …<br>According to Adames(2009), <del>found that</del> vegans are …<br>According to Brown(2014), using mobile devices in …<br>According to Clarke(2016), the impact on the environment …<br>According to Clarke(2016), <del>describes</del> the impact on the environment …</p>
<h3 id="3-8-5-Targeted-Reading-and-Use-of-Evidence"><a href="#3-8-5-Targeted-Reading-and-Use-of-Evidence" class="headerlink" title="3.8.5. Targeted Reading and Use of Evidence"></a>3.8.5. Targeted Reading and Use of Evidence</h3><p><img src="UsingEvidence.jpeg"></p>
<ul>
<li><a href="https://www.screencast.com/t/T1v0QZeS"><strong>Targeted Reading and Use of Evidence</strong></a></li>
</ul>
<h2 id="3-8-6-Research-Question-with-Justification-Example"><a href="#3-8-6-Research-Question-with-Justification-Example" class="headerlink" title="3.8.6. Research Question with Justification Example"></a>3.8.6. Research Question with Justification Example</h2><p>According to <strong>Smith and Jones (2017)</strong> and <strong>Tyler (2016)</strong>, audience engagement is motivated primarily by interest in the exhibit itself whereas <strong>Johns, Barber and Lewis et al (2015)</strong> claim that environmental factors play a much greater part. <strong>The significance and purpose of this question is that</strong>, through conducting primary research, in the form of qualitative data this research aims to apply and build on existing studies to determine the dominant influences in audience engagement with museum exhibits.</p>
<h1 id="4-Synthesising-sources"><a href="#4-Synthesising-sources" class="headerlink" title="4. Synthesising sources"></a>4. Synthesising sources</h1><h2 id="4-1-The-definition-of-synthesis"><a href="#4-1-The-definition-of-synthesis" class="headerlink" title="4.1. The definition of synthesis"></a>4.1. The definition of synthesis</h2><p>Synthesising involves <strong>combining ideas from a range of sources</strong> in order to group and present common ideas or arguments.</p>
<h2 id="4-2-The-importance-of-synthesis-in-literature-review"><a href="#4-2-The-importance-of-synthesis-in-literature-review" class="headerlink" title="4.2. The importance of synthesis in literature review"></a>4.2. The importance of synthesis in literature review</h2><p>Synthesising allows you to show that you have read widely on a topic, combined information from multiple sources and used and cited multiple sources – all of which are required in a literature review.</p>
<h2 id="4-3-A-step-by-step-guide-to-synthesis"><a href="#4-3-A-step-by-step-guide-to-synthesis" class="headerlink" title="4.3. A step-by-step guide to synthesis"></a>4.3. A step-by-step guide to synthesis</h2><ol>
<li>Read <strong>all</strong> the texts.</li>
<li>Take notes in your <strong>own</strong> words.</li>
<li>Write a <strong>short outline</strong> of each text on one piece of paper so it is easy to <strong>compare</strong> all the texts.</li>
<li>Look for common themes in the texts. Use different colours to <strong>highlight similar themes</strong>. Make a list of the similarities.</li>
<li>Draft the <strong>topic sentence</strong>.</li>
<li>Write the ideas in your own words using <strong>summary or paraphrase</strong>. Cite all authors who have expressed the same or similar ideas.  </li>
</ol>
<h2 id="4-4-A-sample-of-synthesis"><a href="#4-4-A-sample-of-synthesis" class="headerlink" title="4.4. A sample of synthesis"></a>4.4. A sample of synthesis</h2><p><img src="synthesis.jpg"></p>
<h1 id="5-Academic-writing"><a href="#5-Academic-writing" class="headerlink" title="5. Academic writing"></a>5. Academic writing</h1><h2 id="5-1-Paragraph-structure"><a href="#5-1-Paragraph-structure" class="headerlink" title="5.1. Paragraph structure"></a>5.1. Paragraph structure</h2><ol>
<li>Topic sentence</li>
<li>Introduction to a particular/group of studies</li>
<li>Summary of the content of the studies</li>
<li>Evaluation of the literature</li>
<li>Concluding sentence</li>
</ol>
<h2 id="5-2-Signposting-language"><a href="#5-2-Signposting-language" class="headerlink" title="5.2. Signposting language"></a>5.2. Signposting language</h2><blockquote>
<p>It is important to guide the reader from one point/paragraph to the next in your literature review.</p>
</blockquote>
<ul>
<li><a href="http://www.phrasebank.manchester.ac.uk/summary-and-transition/"><strong>Signalling Transition</strong></a></li>
</ul>
<h2 id="5-3-Reporting-verbs"><a href="#5-3-Reporting-verbs" class="headerlink" title="5.3. Reporting verbs"></a>5.3. Reporting verbs</h2><blockquote>
<p>Reporting verbs are important as they indicate your view of the source.</p>
</blockquote>
<ul>
<li><a href="https://www.eapfoundation.com/writing/references/reporting/"><strong>Reporting verbs</strong></a></li>
</ul>
<h2 id="5-4-Academic-writing-style"><a href="#5-4-Academic-writing-style" class="headerlink" title="5.4. Academic writing style"></a>5.4. Academic writing style</h2><blockquote>
<p><a href="http://www.uefap.com/writing/writfram.htm"><strong>Academic writing style</strong></a></p>
</blockquote>
<ul>
<li>Do not use contractions<ul>
<li>don’t ——&gt; do not</li>
</ul>
</li>
<li>Do not use personal language<ul>
<li>I think… ——&gt; the research highlights…</li>
</ul>
</li>
<li>Do not use phrasal verbs if there is a single verb alternative<ul>
<li>to go up ——&gt; to increase</li>
</ul>
</li>
<li>Do not use informal vocabulary<ul>
<li>pretty big ——&gt; quite large</li>
</ul>
</li>
</ul>
<h1 id="6-An-Example-of-Literature-Review"><a href="#6-An-Example-of-Literature-Review" class="headerlink" title="6. An Example of Literature Review"></a>6. An Example of Literature Review</h1><p><img src="RQ&LR.png"></p>
<h1 id="7-PM600-Research-Qs-and-Literature-Review-Assessment-Brief-Sep-19"><a href="#7-PM600-Research-Qs-and-Literature-Review-Assessment-Brief-Sep-19" class="headerlink" title="7. PM600 Research Qs and Literature Review Assessment Brief_Sep 19"></a>7. PM600 Research Qs and Literature Review Assessment Brief_Sep 19</h1><div class="pdf" target="PM600ResearchQsandLiteratureReviewAssessmentBrief_Sep19.pdf" height=""></div>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>TUNIC</category>
      </categories>
      <tags>
        <tag>PM600 Research Project</tag>
      </tags>
  </entry>
  <entry>
    <title>Theme 3 - Starting a Project</title>
    <url>/2020/01/08/Theme-3-Starting-a-Project/</url>
    <content><![CDATA[<h1 id="1-Project-definitions-and-requirements"><a href="#1-Project-definitions-and-requirements" class="headerlink" title="1. Project definitions and requirements"></a>1. Project definitions and requirements</h1><h2 id="1-1-The-importance-of-initial-project-definition"><a href="#1-1-The-importance-of-initial-project-definition" class="headerlink" title="1.1. The importance of initial project definition"></a>1.1. The importance of initial project definition</h2><ul>
<li>The <strong>investors</strong> need to know how much <strong>money will be spent</strong> on the project and what <strong>the benefit</strong> they would generate</li>
<li>The contracting organisation needs to know for what it is <strong>bidding</strong> and what is its <strong>commitments</strong> when signing the contract</li>
<li>The managers involved in this project needs to know <strong>what is expected from them</strong> to make this project successful.</li>
</ul>
<a id="more"></a>

<h2 id="1-2-Project-definitions"><a href="#1-2-Project-definitions" class="headerlink" title="1.2. Project definitions"></a>1.2. Project definitions</h2><blockquote>
<p>Definitions come from the following questions</p>
</blockquote>
<ul>
<li>Why is the project needed?</li>
<li>What will exist at the end of the project that doesn’t exist now? (This does not have to be a physical object)</li>
<li>Will (or should) the project <strong>deliver</strong> anything else?</li>
<li>Is anything explicitly excluded from the project?</li>
<li>What assumptions are you making?</li>
<li>Are there any significant problems you are aware of?</li>
<li>Are there any specific conditions or constraints?</li>
<li>Who will you need to carry out this project?</li>
</ul>
<h2 id="1-3-PID-Project-Initiation-Document"><a href="#1-3-PID-Project-Initiation-Document" class="headerlink" title="1.3. PID (Project Initiation Document)"></a>1.3. PID (Project Initiation Document)</h2><p>The PID will form the basis of your project pitch.  It is a formal document that lays out the intentions and scope of the project.  The PID must be agreed before work can start on the project.</p>
<h2 id="1-4-Key-objectives-for-any-project"><a href="#1-4-Key-objectives-for-any-project" class="headerlink" title="1.4. Key objectives for any project"></a>1.4. Key objectives for any project</h2><h3 id="1-4-1-Cost-objective"><a href="#1-4-1-Cost-objective" class="headerlink" title="1.4.1. Cost objective"></a>1.4.1. Cost objective</h3><ul>
<li>Every project should be controlled against a detailed budget to ensure the expenses are not exceeded. Otherwise, <strong>profits and ROI</strong> will be reduced.</li>
<li>However, some profits are not made for profits such as <strong>pure scientific research programs</strong>, and local governmental projects. In this case the focus is heavily on the cost management because the whole project might terminate if the funds run out.  </li>
</ul>
<h3 id="1-4-2-Performance-quality-objective"><a href="#1-4-2-Performance-quality-objective" class="headerlink" title="1.4.2. Performance/quality objective"></a>1.4.2. Performance/quality objective</h3><ul>
<li>Reliability and freedom from malfunction</li>
<li>Low operating cost</li>
<li>Safety</li>
<li>Long use and economic life</li>
<li>Environmental friendly</li>
<li>Performance equal to the specifications</li>
</ul>
<h3 id="1-4-3-Time-objective"><a href="#1-4-3-Time-objective" class="headerlink" title="1.4.3. Time objective"></a>1.4.3. Time objective</h3><ul>
<li>All significant stages of a project must finish on the agreed schedule dates</li>
<li>Failure to meet this deadline will ruin the reputation of the contractor</li>
<li>Delay in a project might cause delays in other projects and consume resources beyond its planned finish dates.</li>
</ul>
<h2 id="1-5-Project-Organisation"><a href="#1-5-Project-Organisation" class="headerlink" title="1.5. Project Organisation"></a>1.5. Project Organisation</h2><blockquote>
<p>As a project manager you will need to consider who will be in each of the following groups:</p>
</blockquote>
<ul>
<li>Project board</li>
<li>Project Team</li>
<li>Stakeholders</li>
<li>Quality Assurance</li>
</ul>
<h3 id="1-5-1-Project-Board"><a href="#1-5-1-Project-Board" class="headerlink" title="1.5.1. Project Board"></a>1.5.1. Project Board</h3><ul>
<li>The project board are responsible for <strong>delivering the project</strong></li>
<li>Their job is to <strong>oversee the project</strong> and keep it moving in the right direction.</li>
<li>They are accountable for the project’s success or failure.</li>
</ul>
<h3 id="1-5-2-Project-team"><a href="#1-5-2-Project-team" class="headerlink" title="1.5.2. Project team"></a>1.5.2. Project team</h3><p>A team can be created for each project and can be supervised by the project manager who is responsible not only for planning, progress and work allocation but also for all technical aspects of the project.</p>
<h3 id="1-5-3-Stakeholders-and-Buy-In"><a href="#1-5-3-Stakeholders-and-Buy-In" class="headerlink" title="1.5.3. Stakeholders and Buy-In"></a>1.5.3. Stakeholders and Buy-In</h3><p><strong>Stakeholders are key players in your project.</strong> They may be individuals e.g. your manager, or an investor, and organizations, such as suppliers, and large groups e.g. your customers and employees. You must secure their buy-in, or support, in a number of ways to seek permission, secure investment, induce consumption, and evoke loyalty.</p>
<p>Stakeholders will assess your project and product offering based upon the following:</p>
<ul>
<li><strong>Benefits Realized</strong> : Managers, investors, and customers will pay close attention to the positive attributes of a proposed emerging-technology concept.<ul>
<li>Is your concept likely to meet consumer needs?</li>
<li>Is it likely to be popular?</li>
<li>Is it likely to make a return on investment?</li>
</ul>
</li>
<li><strong>Robust Research</strong><br>Investors in particular will require substantial data in relation to expected product performance and forecasted costs and sales before they commit to providing capital.</li>
<li><strong>Talent Management</strong><br>Emerging technology requires talented and potentially expensive staff. An appropriate talent-management strategy is required to actively recruit and retain an engaged, loyal workforce.</li>
<li><strong>Brand Image</strong><br>Understanding methods and techniques to cultivate an effective brand image, which is promoted using appropriate communication channels, is very important.</li>
</ul>
<h3 id="1-5-4-Quality-Assurance"><a href="#1-5-4-Quality-Assurance" class="headerlink" title="1.5.4. Quality Assurance"></a>1.5.4. Quality Assurance</h3><ul>
<li>List of Factors(Checklist)<br>Quality assurance (QA) is a way of preventing errors and maintaining required levels of performance throughout each stage of a project. QA is judged on a number of factors that can determine a project’s success or failure:<ul>
<li>Good project definition and a sound business case</li>
<li>Appropriate choice of project strategy</li>
<li>Strong support for the project from senior management</li>
<li>Availability of sufficient funds and other resources</li>
<li>Technical competence</li>
<li>A strong quality culture throughout the organization</li>
<li>A suitable organization structure</li>
<li>Appropriate regard for the health and safety of everyone connected with the project</li>
<li>Good project communications</li>
<li>Well-motivated staff</li>
<li>Quick and fair resolution of conflict</li>
</ul>
</li>
<li>Quality Assurance Methods<ul>
<li><strong>Suppliers’ Procedures</strong> : It is important to take an interest in quality control measures taken by your suppliers.</li>
<li><strong>Expediting</strong> : When waiting for your supplier to deliver, you may wish to spur progress by regularly investigating order status.</li>
<li><strong>Inspection</strong> : Visiting participating business units (including suppliers’ premises) coupled with consistent scrutiny of operational processes, performance capability, and results.</li>
<li><strong>Intervention</strong> : If suppliers and other actors cannot deliver on time, or perform to expectations, Project Managers may have to authorize emergency measures.</li>
<li><strong>Prioritize</strong> : Ranking work in terms of importance identifies tasks critical to maintaining performance level expectations.<ul>
<li>Priority A - Urgent tasks</li>
<li>Priority B - Important but less urgent tasks</li>
<li>Priority C - Less important tasks</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="1-6-What-is-SMART"><a href="#1-6-What-is-SMART" class="headerlink" title="1.6. What is SMART?"></a>1.6. What is SMART?</h2><blockquote>
<p>Your project pitch must contain content that is SMART.</p>
</blockquote>
<ul>
<li>S - Specific</li>
<li>M - Measurable</li>
<li>A - Achievable</li>
<li>R - Relevant</li>
<li>T - Time-bound</li>
</ul>
<h2 id="1-7-Organisation-Structures"><a href="#1-7-Organisation-Structures" class="headerlink" title="1.7. Organisation Structures"></a>1.7. Organisation Structures</h2><p>An organization structure defines <strong>lines of authority</strong>, <strong>scope of responsibility</strong>, <strong>task allocation</strong>, and <strong>pathways of communication</strong>. As per Lock, structures are often tailored to meet project requirements, and its own views concerning how work should be organized.</p>
<ul>
<li><strong>Hierarchical</strong> Organisation<br>An organization described as hierarchical is one that values order, identification of clear lines of responsibility, clarification of job tasks and responsibilities, and <strong>several layers of management</strong>.</li>
<li><strong>Flat</strong> Organization<br>A flat organization is characterized as having relatively few layers of management. Managers’ span of control is wider in contrast to a hierarchical structure. Employees tend to have more responsibility and freedom to explore ideas and take decisions without deferring to management. Lines of responsibility are more <strong>fluid</strong>, and lines of communication more <strong>flexible</strong>.</li>
<li><strong>Holacratic</strong> Organizations<br>Moving beyond flat organizations, holacratic organizations lack conventional management structures. Employees are clustered into teams that correspond with a particular function.</li>
</ul>
<h2 id="1-8-Extra-learning-information"><a href="#1-8-Extra-learning-information" class="headerlink" title="1.8. Extra learning information"></a>1.8. Extra learning information</h2><p><a href="https://medium.com/@warren2lynch/what-is-project-initiation-document-pid-using-why-what-how-when-who-template-f639c2a10186">What is PID?</a></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>TUNIC</category>
      </categories>
      <tags>
        <tag>PM605 Project Management</tag>
      </tags>
  </entry>
  <entry>
    <title>Theme 5 - Running a Project</title>
    <url>/2020/02/04/Theme-5-Running-a-Project/</url>
    <content><![CDATA[<h1 id="1-Project-issues"><a href="#1-Project-issues" class="headerlink" title="1. Project issues"></a>1. Project issues</h1><blockquote>
<p>A project issue is an event or condition that has <strong>negative consequences</strong> for a project. The term implies a situation that is recoverable or that can be mitigated in some way.</p>
</blockquote>
<h2 id="1-1-Examples-of-Issues"><a href="#1-1-Examples-of-Issues" class="headerlink" title="1.1. Examples of Issues"></a>1.1. Examples of Issues</h2><ul>
<li>The bus breaks down on the way to college.</li>
<li>You need to have a meeting with a team member, but they are off sick.</li>
<li>A piece of material costs more than you budgeted, and you don’t have enough money.</li>
<li>A piece of work you thought would take 5 days takes 10 days.</li>
</ul>
<a id="more"></a>

<h2 id="1-2-Resolving-issues"><a href="#1-2-Resolving-issues" class="headerlink" title="1.2. Resolving issues"></a>1.2. Resolving issues</h2><blockquote>
<p>Applying a structured process makes it more likely issues will be resolved successfully.</p>
</blockquote>
<ul>
<li>Make sure the issue is <strong>identified and understood</strong>.</li>
<li>Develop some <strong>appropriate action</strong> to resolve the issue.</li>
<li>Allocate someone with responsibility for performing this action and so resolving the issue.</li>
<li><strong>Set a date</strong> for it to be resolved by.</li>
<li>Manage the task of resolving the issue by the set date.</li>
</ul>
<h2 id="1-3-Project-Issue-Type"><a href="#1-3-Project-Issue-Type" class="headerlink" title="1.3. Project Issue Type"></a>1.3. Project Issue Type</h2><blockquote>
<p>Track the progress of the resolution with a clear label <strong>identifying the issue’s overall status</strong>.</p>
</blockquote>
<ul>
<li><strong>Open</strong> – The issue has been identified, but no action has yet been taken.</li>
<li><strong>Investigating</strong> – The issue, and possible solutions, are being investigated.</li>
<li><strong>Implementing</strong> – The issue resolution is in process.</li>
<li><strong>Escalated</strong> – The issue has been raised to management or the project sponsor/steering committee, and directions or approval of a solution is pending.</li>
<li><strong>Resolved</strong> – The resolution has been implemented, and the issue is closed.</li>
</ul>
<p>Tip:</p>
<blockquote>
<p>Use ‘traffic lights’ when reporting issues.</p>
</blockquote>
<ul>
<li><strong>Red</strong> – Cannot proceed before issue is resolved.</li>
<li><strong>Yellow</strong> – Resolution in process, and you’ll be able to proceed soon.</li>
<li><strong>Green</strong> – Resolution implemented, and issue no longer exists.</li>
</ul>
<h2 id="1-4-Project-Issue-Log"><a href="#1-4-Project-Issue-Log" class="headerlink" title="1.4. Project Issue Log"></a>1.4. Project Issue Log</h2><blockquote>
<p>Issues – otherwise known as problems, gaps, inconsistencies, or conflicts – need to be recorded when they happen.</p>
</blockquote>
<p>When you create an issues log, you provide a tool for reporting and communicating <strong>what’s happening with the project</strong>. This makes sure that issues are indeed raised, and then investigated and resolved quickly and effectively. Without a defined process, you risk ignoring issues, or not taking them seriously enough – until it’s too late to deal with them successfully.</p>
<p>The importance of Issue Log:</p>
<ul>
<li>Have a safe and reliable method for the team to raise issues.</li>
<li><strong>Track and assign responsibility</strong> to specific people for each issue.</li>
<li><strong>Analyze and prioritize</strong> issues more easily.</li>
<li><strong>Record issue resolution</strong> for future reference and project learning.</li>
<li><strong>Monitor</strong> overall project health and status.</li>
</ul>
<h2 id="1-5-Project-issue-and-a-Project-risk"><a href="#1-5-Project-issue-and-a-Project-risk" class="headerlink" title="1.5. Project issue and a Project risk"></a>1.5. Project issue and a Project risk</h2><ul>
<li>An issue differs from a risk in that <strong>a risk hasn’t occurred yet</strong>.</li>
<li>Issues and risks are not quite the same thing. However, the exact nature of both is largely unknown before you begin.</li>
<li><strong>With risks, you usually have a general idea in advance</strong> that there’s a cause for concern. An issue tends to be less predictable; it can arise with no warning.</li>
</ul>
<h1 id="2-Project-Risks"><a href="#2-Project-Risks" class="headerlink" title="2. Project Risks"></a>2. Project Risks</h1><h2 id="2-1-Definition"><a href="#2-1-Definition" class="headerlink" title="2.1. Definition"></a>2.1. Definition</h2><blockquote>
<p>Thinking about potential issues is called predicting risks.</p>
</blockquote>
<ul>
<li>For some risks you can <strong>take action early</strong> to prevent them becoming issues.</li>
<li>The list of possible risks is almost <strong>infinite</strong>, so you need a way of focussing only on <strong>the most important risks</strong>. This can be done by looking at the likelihood that the risk will happen, and the impact on the project if it does.</li>
</ul>
<h2 id="2-2-Risk-Matrix"><a href="#2-2-Risk-Matrix" class="headerlink" title="2.2. Risk Matrix"></a>2.2. Risk Matrix</h2><p>A risk matrix is a matrix that is used during risk assessment to define the level of risk by considering the category of <strong>probability or likelihood</strong> against the category of <strong>consequence severity</strong>.</p>
<h2 id="2-3-Categories-of-risk"><a href="#2-3-Categories-of-risk" class="headerlink" title="2.3. Categories of risk"></a>2.3. Categories of risk</h2><ul>
<li><strong>Strategic risk</strong>.  These are risks to the <strong>strategic objectives</strong> and goals of the project.  They affect areas of the project life-cycle such as planning and finance.  Mitigation of these risks requires the commitment of senior management.</li>
<li><strong>Operational risk</strong>.  These risks generally have a <strong>short-term impact</strong>, affecting <strong>daily</strong> operations and activities of the project team.</li>
<li><strong>Compliance risk</strong>.  These concern the need to comply with the documented statements and regulations.</li>
<li><strong>Financial risk</strong>.  These are associated with the financial structure of the project.</li>
<li><strong>Knowledge risk</strong>.  These refer to the effective control of knowledge resources.  It includes abuse of intellectual property, loss of key staff and technical inefficiency.</li>
</ul>
<h2 id="2-4-Risk-mitigation"><a href="#2-4-Risk-mitigation" class="headerlink" title="2.4. Risk mitigation"></a>2.4. Risk mitigation</h2><ul>
<li>Ignore it all together</li>
<li>Monitor the risk</li>
<li>Reduce the likelihood of it occurring</li>
<li>Reduce the impact if it does occur</li>
<li>Have some contingency plan in place</li>
</ul>
<h2 id="2-5-Risk-status"><a href="#2-5-Risk-status" class="headerlink" title="2.5. Risk status"></a>2.5. Risk status</h2><ul>
<li><strong>Open</strong>.  Risk identified but no actions agreed.</li>
<li><strong>Actioned</strong>.  Actions have been agreed and responsibility allocated.</li>
<li><strong>Closed</strong>.  Risk no longer a threat to this project.</li>
<li><strong>Increasing</strong>.  The likelihood and/or impact has increased since the last review.</li>
<li><strong>Decreasing</strong>. The likelihood and/or impact has decreased since the last review.</li>
<li><strong>Issue</strong>.  The risk has become reality and is now an issue for direct management.</li>
</ul>
<h2 id="2-6-Changes-in-project"><a href="#2-6-Changes-in-project" class="headerlink" title="2.6. Changes in project"></a>2.6. Changes in project</h2><blockquote>
<p>A common occurrence in a project is the customer <strong>asks for a change in the deliverables</strong>.  This will affect the project plan and could impact on the timeline and cost of the project.</p>
</blockquote>
<p>A structured approach to managing change:</p>
<ul>
<li>Have a change control process in place and make sure changes do not happen without it.</li>
<li>Assess every change in terms of the impact on the project.  Does in increase the time, budget or level of risk of the project?</li>
<li>Accept the change only once the customer has agreed to any additional cost, time or risk.</li>
</ul>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>TUNIC</category>
      </categories>
      <tags>
        <tag>PM605 Project Management</tag>
      </tags>
  </entry>
  <entry>
    <title>Theme 9 - Methodology</title>
    <url>/2020/03/02/Theme-9-Methodology/</url>
    <content><![CDATA[<h1 id="1-Methodology"><a href="#1-Methodology" class="headerlink" title="1. Methodology"></a>1. Methodology</h1><h2 id="1-1-The-Methodology-Chapter"><a href="#1-1-The-Methodology-Chapter" class="headerlink" title="1.1. The Methodology Chapter"></a>1.1. The Methodology Chapter</h2><ul>
<li>The Methodology chapter of your final report can be seen as ‘taking the front off the machine’.</li>
<li>It lets readers understand the workings of your research project, so that someone could <strong>repeat it</strong>.</li>
<li>You must share and explain <strong>why you chose to conduct your research that way</strong>.</li>
</ul>
<h2 id="1-2-The-structure-of-Methodology-Chapter"><a href="#1-2-The-structure-of-Methodology-Chapter" class="headerlink" title="1.2. The structure of Methodology Chapter"></a>1.2. The structure of Methodology Chapter</h2><ul>
<li>Introduction</li>
<li>Research Approach</li>
<li>Research Methods</li>
<li>Ethical Considerations</li>
<li>Limitations</li>
<li>Conclusion</li>
</ul>
<a id="more"></a>

<h2 id="1-3-Methodology-“voice”"><a href="#1-3-Methodology-“voice”" class="headerlink" title="1.3. Methodology “voice”"></a>1.3. Methodology “voice”</h2><ul>
<li>In your <strong>Research Proposal</strong>, you described what you <strong>will</strong> do.</li>
<li>In you Research Project, your <strong>Methodology Chapter</strong> must be written in the <strong>past simple tense</strong> – because, at that point in time, it will be completed.</li>
</ul>
<h2 id="1-4-Tense-and-Voice-Examples"><a href="#1-4-Tense-and-Voice-Examples" class="headerlink" title="1.4. Tense and Voice Examples"></a>1.4. Tense and Voice Examples</h2><ul>
<li>A questionnaire <strong>was developed</strong> using a mixture of open and closed questions. (<strong>Passive</strong>)</li>
<li>All information <strong>was collected</strong> anonymously. (<strong>Passive</strong>)</li>
<li>An informed consent form <strong>was produced</strong>. (<strong>Passive</strong>)</li>
<li>All participants <strong>gave</strong> their informed consent. (<strong>Active</strong>)</li>
</ul>
<h1 id="2-Write-The-Methodology-Chapter"><a href="#2-Write-The-Methodology-Chapter" class="headerlink" title="2. Write The Methodology Chapter"></a>2. Write The Methodology Chapter</h1><ul>
<li>In the Methodology chapter, you <strong>shouldn’t</strong> simply describe what you have done</li>
<li>You need to justify <strong>why</strong> you have done it that way, considering the <strong>advantages and possible disadvantages or limitations</strong></li>
<li>You also need to reflect on what you <strong>would do differently</strong> if you were to conduct your research again</li>
</ul>
<h2 id="2-1-Introduction"><a href="#2-1-Introduction" class="headerlink" title="2.1. Introduction"></a>2.1. Introduction</h2><ul>
<li>A definition of methodology<ul>
<li>A methodology is the <strong>step-by-step process</strong> taken by a researcher in order to complete his or her research.</li>
<li>It can involve primary research methods (for example, experiments, surveys, or interviews) or secondary research methods.</li>
<li>You can use your own definition, or you can cite someone else’s.</li>
</ul>
</li>
<li>A description of the purpose of the chapter: The purpose of this chapter is to <strong>explain the process of your research</strong> so that it can be evaluated and, if needed, replicated.</li>
<li>A restatement of your research <strong>questions/thesis</strong> statement: It is always a good idea to remind your readers exactly what you are trying to argue. Make sure you do so!</li>
</ul>
<h2 id="2-2-Research-Approach"><a href="#2-2-Research-Approach" class="headerlink" title="2.2. Research Approach"></a>2.2. Research Approach</h2><ul>
<li>The approach you have chosen<ul>
<li>Positivist or interpretivist?</li>
<li>Inductive or deductive?</li>
<li>Qualitative, quantitative or both?</li>
<li>Primary or secondary?</li>
</ul>
</li>
<li>Your reasons for choosing this approach</li>
<li>The strengths and weaknesses of this approach</li>
</ul>
<h2 id="2-3-Research-methods"><a href="#2-3-Research-methods" class="headerlink" title="2.3. Research methods"></a>2.3. Research methods</h2><ul>
<li>Primary Research<ul>
<li>Overview of the research</li>
<li>Population/Sample</li>
<li>Location</li>
<li>Restrictions/Limiting Conditions</li>
<li>Sampling Technique</li>
<li>Procedures (including details of pilot study)</li>
<li>Materials</li>
<li>Variables</li>
<li>Data analysis method(s)</li>
</ul>
</li>
<li>Secondary Research<ul>
<li>Choice of sources/data sets</li>
<li>Types of data used</li>
<li>Data analysis method(s)</li>
<li>An evaluation of the usefulness of your chosen methods (How appropriate was secondary research? Why was primary research not suitable?)</li>
<li>Possible alternative methods</li>
</ul>
</li>
</ul>
<h2 id="2-4-Ethical-considerations"><a href="#2-4-Ethical-considerations" class="headerlink" title="2.4. Ethical considerations"></a>2.4. Ethical considerations</h2><ul>
<li>Primary Research<ul>
<li>ethical issues related to your research and how    you resolved them (e.g. avoiding harm to participants, anonymity, confidentiality, data storage, right to withdraw etc.)</li>
<li>gaining approval for your data collection method, the use of a participant information sheet and the importance of gaining informed consent (these forms should be referred to and included as appendices in your final report)</li>
</ul>
</li>
<li>Secondary Research<ul>
<li>your data sources and how you gained access to them</li>
<li>any ethical issues relevant to the original collection of the data</li>
</ul>
</li>
</ul>
<h2 id="2-5-Limitations"><a href="#2-5-Limitations" class="headerlink" title="2.5. Limitations"></a>2.5. Limitations</h2><ul>
<li>Primary Research<ul>
<li>Time</li>
<li>Sample size</li>
<li>Sampling technique</li>
<li>Quantitative/qualitative/mixed method data collection methods</li>
<li>Were there any issues with reliability or validity?</li>
</ul>
</li>
<li>Secondary Research<ul>
<li>Availability of data sets</li>
<li>The quality of data sets</li>
</ul>
</li>
</ul>
<h2 id="2-6-Conclusion"><a href="#2-6-Conclusion" class="headerlink" title="2.6. Conclusion"></a>2.6. Conclusion</h2><ul>
<li>The <strong>importance</strong> of the methodology chapter</li>
<li>A summary of <strong>what you’ve done in the section</strong></li>
<li>Cohesion: Remember to include a sentence to provide a <strong>smooth transition</strong> from this chapter to the next chapter of the report.</li>
</ul>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>TUNIC</category>
      </categories>
      <tags>
        <tag>PM600 Research Project</tag>
      </tags>
  </entry>
  <entry>
    <title>Welcome to my blog</title>
    <url>/2019/11/05/Welcome/</url>
    <content><![CDATA[<h3 id="1-Some-mottoes-want-to-share-for-me-for-you"><a href="#1-Some-mottoes-want-to-share-for-me-for-you" class="headerlink" title="1. Some mottoes want to share , for me , for you"></a>1. Some mottoes want to share , for me , for you</h3><blockquote>
<p>Always keep energetic and flexible on Mind and Body.</p>
</blockquote>
<ul>
<li>Life feeds on negative entropy.</li>
<li>Learn more , study less.</li>
<li>Learning to enjoy studying can matter even more than learning to study well.</li>
<li>Understanding something means you have the ability to view it from different perspectives.</li>
<li>Focus on the solution, not the emotion.</li>
<li>Discipline Equals Freedom.<a id="more"></a>
</li>
</ul>
<hr>
<h3 id="2-Something-want-to-write"><a href="#2-Something-want-to-write" class="headerlink" title="2. Something want to write"></a>2. Something want to write</h3><ul>
<li>Computer Science</li>
<li>Public Speaking</li>
<li>English Learning</li>
<li>TUNIC &amp;&amp; UoN Study</li>
<li>Life Experience</li>
<li>Reading Notes</li>
<li>Codewars Training</li>
<li>Coursera Learning</li>
<li>Kaggle Learning</li>
</ul>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <tags>
        <tag>First post</tag>
      </tags>
  </entry>
  <entry>
    <title>Theme 7 - Ethical Considerations</title>
    <url>/2020/01/20/Theme-7-Ethical-Considerations/</url>
    <content><![CDATA[<h1 id="1-Ethics"><a href="#1-Ethics" class="headerlink" title="1. Ethics"></a>1. Ethics</h1><p>Ethics represent the <strong>moral principles, values and rules</strong> that govern our decisions and actions with respect to what is <strong>right and wrong, good or bad</strong>.</p>
<h2 id="1-1-Why-might-there-be-a-problem"><a href="#1-1-Why-might-there-be-a-problem" class="headerlink" title="1.1. Why might there be a problem?"></a>1.1. Why might there be a problem?</h2><ul>
<li>Ethics writers differ about what is and is not ethically acceptable</li>
<li>Similar issues arise frequently</li>
<li>There is the <strong>potential</strong> to behave unethically in research</li>
<li>This is constant and it does not just depend on particular situations or methods<a id="more"></a>

</li>
</ul>
<h2 id="1-2-Ethical-stances"><a href="#1-2-Ethical-stances" class="headerlink" title="1.2. Ethical stances"></a>1.2. Ethical stances</h2><ol>
<li>Universalism<ul>
<li>Absolute <strong>rules</strong> about un/acceptable conduct</li>
</ul>
</li>
<li>Situation ethics<ul>
<li>Case-by-case assessment</li>
<li>Does the end justify the means?</li>
</ul>
</li>
<li>Ethical transgression is pervasive<ul>
<li>Virtually all research involves some ethically questionable practices</li>
</ul>
</li>
<li>Anything goes (more or less)<ul>
<li>Researchers entitled to study anyone in any setting if work has a ‘scientific’ purpose and does not harm participants</li>
</ul>
</li>
</ol>
<h2 id="1-3-Ethical-principles"><a href="#1-3-Ethical-principles" class="headerlink" title="1.3. Ethical principles"></a>1.3. Ethical principles</h2><ol>
<li>Whether there is <strong>harm to participants</strong></li>
<li>Whether there is a <strong>lack of informed consent</strong></li>
<li>Whether there is an <strong>invasion of privacy</strong></li>
<li>Whether <strong>deception</strong> is involved</li>
</ol>
<h3 id="1-3-1-Harm-to-participants"><a href="#1-3-1-Harm-to-participants" class="headerlink" title="1.3.1. Harm to participants"></a>1.3.1. Harm to participants</h3><blockquote>
<p>Harm caused by participating in research is usually considered unacceptable.</p>
</blockquote>
<ul>
<li>Physical harm</li>
<li>Damage to self-esteem</li>
<li>Damage to career prospects or future employment</li>
<li>Revelation of their identity</li>
<li>Breaking confidentiality</li>
<li>Stress</li>
</ul>
<h4 id="1-3-1-1-Rights-of-participants"><a href="#1-3-1-1-Rights-of-participants" class="headerlink" title="1.3.1.1. Rights of participants"></a>1.3.1.1. Rights of participants</h4><ul>
<li>to know that participation is voluntary</li>
<li>to withdraw from the research at any time</li>
<li>to discuss the way in which personal data will be gathered, stored, used and its ownership</li>
<li>to confidentiality and anonymity</li>
<li>to refuse to answer questions</li>
<li>to ask questions about research at any time</li>
<li>to be given access to a summary of findings</li>
</ul>
<h3 id="1-3-2-Informed-consent"><a href="#1-3-2-Informed-consent" class="headerlink" title="1.3.2. Informed consent"></a>1.3.2. Informed consent</h3><ol>
<li>Prospective participants must know<ul>
<li>That they are participants</li>
<li>What the research process is</li>
<li>Whether observation techniques or recording equipment will be used</li>
</ul>
</li>
<li>Participants must be given information that they can understand (typically a form) and time to consider (and discuss) their decision</li>
<li>You will <strong>not</strong> be able to conduct your research until you have:<ul>
<li>submitted an ethics form and received approval</li>
<li>submitted a sample of the informed consent form you will use</li>
<li>received informed consent from your participants</li>
</ul>
</li>
</ol>
<h4 id="1-3-2-1-Information-sheets-often-include"><a href="#1-3-2-1-Information-sheets-often-include" class="headerlink" title="1.3.2.1. Information sheets often include ?"></a>1.3.2.1. Information sheets often include ?</h4><ul>
<li>The names of researchers and contact details</li>
<li>What participants are required to do and how much time will be involved</li>
<li>How their data will be used</li>
<li>How their data will be stored</li>
<li>How confidentiality and anonymity will be protected</li>
<li>What will happen to the data on completion of the project</li>
<li>The rights of respondents</li>
</ul>
<h3 id="1-3-3-Invasion-of-privacy"><a href="#1-3-3-Invasion-of-privacy" class="headerlink" title="1.3.3. Invasion of privacy"></a>1.3.3. Invasion of privacy</h3><blockquote>
<p>Privacy is linked to the idea of <strong>informed consent</strong></p>
</blockquote>
<ul>
<li>The research participant does not give up the right to privacy by providing informed consent</li>
<li>Covert methods are usually considered to be violations of the privacy principle</li>
<li>The issue of privacy is invariably linked to issues of <strong>anonymity and confidentiality</strong> in the research process</li>
<li>Researchers may have to sign confidentiality agreements</li>
<li>Participants should be given the opportunity to withdraw. With interviews/questionnaires, participants should be able not to answer sensitive questions</li>
</ul>
<h3 id="1-3-4-Deception"><a href="#1-3-4-Deception" class="headerlink" title="1.3.4. Deception"></a>1.3.4. Deception</h3><ul>
<li>Deception means <strong>not telling the whole truth</strong> while not actually telling a lie<ul>
<li>Deception means misrepresenting research so participants will respond naturally</li>
</ul>
</li>
<li>Deception must be kept to a <strong>minimum</strong> if it is necessary for the research<ul>
<li>Minimalising its degree and effects as much as possible</li>
</ul>
</li>
<li>In addition to moral objections to deception,…<ul>
<li>Research participants become wary of being fooled or tricked into providing data.</li>
<li>This can have <strong>potential legal implications</strong></li>
</ul>
</li>
</ul>
<h2 id="1-4-Legal-considerations"><a href="#1-4-Legal-considerations" class="headerlink" title="1.4. Legal considerations"></a>1.4. Legal considerations</h2><ul>
<li><strong>The 1998 Data Protection Act</strong> states that personal data must be: <ul>
<li>obtained only for one or more specified and lawful purpose and not further processed in any manner incompatible with that purpose or those purposes;</li>
<li>adequate, relevant, and not excessive in relation to the purpose or purposes for which they are processed;</li>
<li>not kept longer than necessary.</li>
</ul>
</li>
<li><strong>Copyright</strong> is an intellectual property right.</li>
<li><strong>GDPR (2018)</strong> General Data Protection Regulation puts the emphasis on the individual to safeguard people’s data and to ensure it is used only for the specific purposes it is collected for. Failure to comply can result in large fines.</li>
</ul>
<h2 id="1-5-Further-considerations"><a href="#1-5-Further-considerations" class="headerlink" title="1.5. Further considerations"></a>1.5. Further considerations</h2><ul>
<li>Trust, reciprocity and expectations of transparency, honesty and openness<ul>
<li>Adherence to a Code of Ethics</li>
<li>Following the appropriate Framework for Research Ethics</li>
<li>Sharing research findings</li>
</ul>
</li>
<li>Conflicts of interest and affiliation</li>
</ul>
<h2 id="1-6-Ethical-decision-making"><a href="#1-6-Ethical-decision-making" class="headerlink" title="1.6. Ethical decision-making"></a>1.6. Ethical decision-making</h2><ul>
<li>The boundary between ethical and unethical practices can be blurred</li>
<li>The problem of deception leading to a lack of informed consent can infect social research</li>
<li>Some areas of research lack specific guidance</li>
<li>Internet-based research presents new ethical problems which are still being debated</li>
</ul>
<h1 id="2-Research-Ethics"><a href="#2-Research-Ethics" class="headerlink" title="2. Research Ethics"></a>2. Research Ethics</h1><h2 id="2-1-What-does-research-ethics-concern"><a href="#2-1-What-does-research-ethics-concern" class="headerlink" title="2.1. What does research ethics concern ?"></a>2.1. What does research ethics concern ?</h2><ul>
<li>the <strong>values, rules and guidelines</strong> that govern decisions and actions with respect to moral and immoral research practices.</li>
<li>the <strong>choices and decisions</strong> that researchers need to take and the dilemmas they can sometimes face.</li>
<li><strong>Respect</strong> for and <strong>care</strong> of individuals and groups</li>
<li><strong>Justice</strong> in social life</li>
<li><strong>Integrity</strong> of discipline and practice</li>
</ul>
<h2 id="2-2-A-researcher’s-ethical-responsibilities"><a href="#2-2-A-researcher’s-ethical-responsibilities" class="headerlink" title="2.2. A researcher’s ethical responsibilities"></a>2.2. A researcher’s ethical responsibilities</h2><ul>
<li>Participants: not to harm or deceive; to respect and care for them</li>
<li>Funders: provide good quality research on time, on budget, use resources efficiently BUT resist influence of outcomes</li>
<li>Institution: integrity of reputation</li>
<li>Profession/fellow researchers: follow appropriate codes of conduct, making it possible for others to continue researching in future</li>
<li>Stakeholders: those with an interest or stake in your research for example minorities/disadvantaged groups or those who may benefit</li>
<li>Wider society: increasing understanding and the development of society</li>
<li>Yourself: not to take unreasonable risks</li>
</ul>
<h2 id="2-3-Codes-of-Ethics"><a href="#2-3-Codes-of-Ethics" class="headerlink" title="2.3. Codes of Ethics"></a>2.3. Codes of Ethics</h2><ul>
<li>Institutions and professional bodies involved in research will have their own policies and guidelines to which researchers have to adhere</li>
<li>Researchers have to submit their work to ethics committees in order for their work to be sanctioned</li>
</ul>
<h2 id="2-4-Codes-of-ethical-conduct"><a href="#2-4-Codes-of-ethical-conduct" class="headerlink" title="2.4. Codes of ethical conduct"></a>2.4. Codes of ethical conduct</h2><ul>
<li><a href="https://www.nottingham.ac.uk/research/ethics-and-integrity/">The University of Nottingham’s webpage on Ethics and Integrity</a></li>
<li><a href="https://aom.org/uploadedFiles/About_AOM/Governance/AOMPoliciesAndProceduresForEthicalStandards.pdf">Academy of Management</a></li>
<li><a href="https://www.bera.ac.uk/wp-content/uploads/2014/02/BERA-Ethical-Guidelines-2011.pdf?noredirect=1">British Education Research Association</a></li>
<li><a href="https://www.britsoc.co.uk/media/24310/bsa_statement_of_ethical_practice.pdf">British Sociological Association</a></li>
<li><a href="https://www.acm.org/code-of-ethics">Association for Computing Machinery</a></li>
</ul>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>TUNIC</category>
      </categories>
      <tags>
        <tag>PM600 Research Project</tag>
      </tags>
  </entry>
  <entry>
    <title>Codewars - Theme 1 Fundamental</title>
    <url>/2020/05/23/Codewars-Theme-1-Fundamental/</url>
    <content><![CDATA[<h1 id="0-Introduction"><a href="#0-Introduction" class="headerlink" title="0. Introduction"></a>0. Introduction</h1><p>Learning by Doing : It’s highly efficient to train your programming skills every day.</p>
<h1 id="1-Duplicate-Encoder"><a href="#1-Duplicate-Encoder" class="headerlink" title="1. Duplicate Encoder"></a>1. Duplicate Encoder</h1><h2 id="1-1-Description"><a href="#1-1-Description" class="headerlink" title="1.1. Description"></a>1.1. Description</h2><p>The goal of this exercise is to convert a string to a new string where each character in the new string is:</p>
<ul>
<li>“(“ if that character appears only once in the original string.</li>
<li>“)” if that character appears more than once in the original string.</li>
<li>Ignore capitalization when determining if a character is a duplicate.</li>
</ul>
<a id="more"></a>

<h2 id="1-2-Examples"><a href="#1-2-Examples" class="headerlink" title="1.2. Examples"></a>1.2. Examples</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;din&quot;      &#x3D;&gt;  &quot;(((&quot;</span><br><span class="line">&quot;recede&quot;   &#x3D;&gt;  &quot;()()()&quot;</span><br><span class="line">&quot;Success&quot;  &#x3D;&gt;  &quot;)())())&quot;</span><br><span class="line">&quot;(( @&quot;     &#x3D;&gt;  &quot;))((&quot;</span><br></pre></td></tr></table></figure>

<h2 id="1-3-My-Solution"><a href="#1-3-My-Solution" class="headerlink" title="1.3. My Solution"></a>1.3. My Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">duplicate_encode</span>(<span class="params">word</span>):</span></span><br><span class="line">    <span class="comment"># Ignore capitalization</span></span><br><span class="line">    word = word.lower()</span><br><span class="line">    <span class="comment"># Get all the character, remove duplication</span></span><br><span class="line">    all_character = set(word)</span><br><span class="line">    <span class="comment"># Count the number of each character</span></span><br><span class="line">    num_iter = map(<span class="keyword">lambda</span> character: word.count(character), all_character)</span><br><span class="line">    <span class="comment"># Use a dict to store character:num</span></span><br><span class="line">    dic = dict(zip(all_character, num_iter))</span><br><span class="line">    <span class="comment"># Replace word with )/(</span></span><br><span class="line">    result = <span class="string">&quot;&quot;</span>.join([<span class="string">&#x27;(&#x27;</span> <span class="keyword">if</span> dic[character] == <span class="number">1</span> <span class="keyword">else</span> <span class="string">&#x27;)&#x27;</span> <span class="keyword">for</span> character <span class="keyword">in</span> word])</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>

<h2 id="1-4-Excellent-Solution"><a href="#1-4-Excellent-Solution" class="headerlink" title="1.4. Excellent Solution"></a>1.4. Excellent Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">duplicate_encode</span>(<span class="params">word</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join([<span class="string">&quot;(&quot;</span> <span class="keyword">if</span> word.lower().count(c) == <span class="number">1</span> <span class="keyword">else</span> <span class="string">&quot;)&quot;</span> <span class="keyword">for</span> c <span class="keyword">in</span> word.lower()])</span><br></pre></td></tr></table></figure>

<h1 id="2-Your-order-please"><a href="#2-Your-order-please" class="headerlink" title="2. Your order, please"></a>2. Your order, please</h1><h2 id="2-1-Description"><a href="#2-1-Description" class="headerlink" title="2.1. Description"></a>2.1. Description</h2><p>Your task is to sort a given string. Each word in the string will contain a single number. This number is the position the word should have in the result.</p>
<ul>
<li>Numbers can be from 1 to 9. So 1 will be the first word (not 0).</li>
<li>If the input string is empty, return an empty string.</li>
<li>The words in the input String will only contain valid consecutive numbers.</li>
</ul>
<h2 id="2-2-Examples"><a href="#2-2-Examples" class="headerlink" title="2.2. Examples"></a>2.2. Examples</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;is2 Thi1s T4est 3a&quot;  --&gt;  &quot;Thi1s is2 3a T4est&quot;</span><br><span class="line">&quot;4of Fo1r pe6ople g3ood th5e the2&quot;  --&gt;  &quot;Fo1r the2 g3ood 4of th5e pe6ople&quot;</span><br><span class="line">&quot;&quot;  --&gt;  &quot;&quot;</span><br></pre></td></tr></table></figure>

<h2 id="2-3-My-Solution"><a href="#2-3-My-Solution" class="headerlink" title="2.3. My Solution"></a>2.3. My Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">order</span>(<span class="params">sentence</span>):</span></span><br><span class="line">    <span class="comment"># Transform str to list, split by space</span></span><br><span class="line">    word_list = sentence.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">    <span class="comment"># Extract the number of each word and make tuple, then Sort it</span></span><br><span class="line">    sorted_list = sorted([(character, word) <span class="keyword">for</span> word <span class="keyword">in</span> word_list <span class="keyword">for</span> character <span class="keyword">in</span> word <span class="keyword">if</span> character.isdigit()])</span><br><span class="line">    <span class="comment"># Make the new string</span></span><br><span class="line">    result = <span class="string">&quot; &quot;</span>.join([item[<span class="number">1</span>] <span class="keyword">for</span> item <span class="keyword">in</span> sorted_list])</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>

<h2 id="2-4-Excellent-Solution"><a href="#2-4-Excellent-Solution" class="headerlink" title="2.4. Excellent Solution"></a>2.4. Excellent Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">order</span>(<span class="params">sentence</span>):</span></span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27; &#x27;</span>.join(sorted(sentence.split(), key=sorted))</span><br></pre></td></tr></table></figure>

<h1 id="3-Grasshopper-Summation"><a href="#3-Grasshopper-Summation" class="headerlink" title="3. Grasshopper - Summation"></a>3. Grasshopper - Summation</h1><h2 id="3-1-Description"><a href="#3-1-Description" class="headerlink" title="3.1. Description"></a>3.1. Description</h2><p>Write a program that finds the summation of every number from 1 to num. The number will always be a positive integer greater than 0.</p>
<h2 id="3-2-Examples"><a href="#3-2-Examples" class="headerlink" title="3.2. Examples"></a>3.2. Examples</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">summation(2) -&gt; 3</span><br><span class="line">1 + 2</span><br><span class="line"></span><br><span class="line">summation(8) -&gt; 36</span><br><span class="line">1 + 2 + 3 + 4 + 5 + 6 + 7 + 8</span><br></pre></td></tr></table></figure>

<h2 id="3-3-My-Solution"><a href="#3-3-My-Solution" class="headerlink" title="3.3. My Solution"></a>3.3. My Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">summation</span>(<span class="params">num</span>):</span></span><br><span class="line">    <span class="keyword">return</span> reduce(<span class="keyword">lambda</span> x, y: x + y, range(num+<span class="number">1</span>))</span><br></pre></td></tr></table></figure>

<h2 id="3-4-Excellent-Solution"><a href="#3-4-Excellent-Solution" class="headerlink" title="3.4. Excellent Solution"></a>3.4. Excellent Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">summation</span>(<span class="params">num</span>):</span></span><br><span class="line">    <span class="keyword">return</span> sum(range(num + <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">summation</span>(<span class="params">num</span>):</span></span><br><span class="line">    <span class="keyword">return</span> (<span class="number">1</span>+num) * num / <span class="number">2</span></span><br></pre></td></tr></table></figure>

<h1 id="4-Equal-Sides-Of-An-Array"><a href="#4-Equal-Sides-Of-An-Array" class="headerlink" title="4. Equal Sides Of An Array"></a>4. Equal Sides Of An Array</h1><h2 id="4-1-Description"><a href="#4-1-Description" class="headerlink" title="4.1. Description"></a>4.1. Description</h2><p>You are going to be given an array of integers. Your job is to take that array and find an index N where the sum of the integers to the left of N is equal to the sum of the integers to the right of N. If there is no index that would make this happen, return -1.<br>Note: If you are given an array with multiple answers, return the lowest correct index.</p>
<h2 id="4-2-Examples"><a href="#4-2-Examples" class="headerlink" title="4.2. Examples"></a>4.2. Examples</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;1,2,3,4,3,2,1&#125;  -&gt; N&#x3D;&#x3D;3, &#123;1,2,3&#125; -- &#123;3,2,1&#125;, both equal 6.</span><br><span class="line">&#123;1,100,50,-51,1,1&#125; -&gt; N&#x3D;&#x3D;1, &#123;1&#125; -- &#123;50,-51,1,1&#125;, both euqal 1.</span><br><span class="line">&#123;20,10,-80,10,10,15,35&#125; -&gt; N&#x3D;&#x3D;0, &#123;&#125; -- &#123;10,-80,10,10,15,35&#125;, both equal 0.</span><br></pre></td></tr></table></figure>
<h2 id="4-3-My-Solution"><a href="#4-3-My-Solution" class="headerlink" title="4.3. My Solution"></a>4.3. My Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_even_index</span>(<span class="params">arr</span>):</span></span><br><span class="line">    arr.insert(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    arr_len = len(arr)</span><br><span class="line">    <span class="comment"># Compare the summation from left and side with index</span></span><br><span class="line">    index = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, arr_len) <span class="keyword">if</span> sum(arr[:i]) == sum(arr[i+<span class="number">1</span>:])]</span><br><span class="line">    <span class="keyword">if</span> index <span class="keyword">and</span> index[<span class="number">0</span>] &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> index[<span class="number">0</span>] - <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="keyword">not</span> index:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> index[<span class="number">0</span>]</span><br></pre></td></tr></table></figure>
<h2 id="4-4-Excellent-Solution"><a href="#4-4-Excellent-Solution" class="headerlink" title="4.4. Excellent Solution"></a>4.4. Excellent Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_even_index</span>(<span class="params">arr</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(arr)):</span><br><span class="line">        <span class="keyword">if</span> sum(arr[:i]) == sum(arr[i+<span class="number">1</span>:]):</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Has a bug when meet the list like [10,-10] or [10,-80,10,10,15,35] and so on.</span></span><br></pre></td></tr></table></figure>

<h1 id="5-Disemvowel-Trolls"><a href="#5-Disemvowel-Trolls" class="headerlink" title="5. Disemvowel Trolls"></a>5. Disemvowel Trolls</h1><h2 id="5-1-Description"><a href="#5-1-Description" class="headerlink" title="5.1. Description"></a>5.1. Description</h2><p>Trolls are attacking your comment section!<br>A common way to deal with this situation is to remove all of the vowels from the trolls’ comments, neutralizing the threat.</p>
<ul>
<li>Your task is to write a function that takes a string and return a new string with all vowels removed.</li>
<li>Note: for this kata y isn’t considered a vowel.</li>
</ul>
<h2 id="5-2-Examples"><a href="#5-2-Examples" class="headerlink" title="5.2. Examples"></a>5.2. Examples</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The string:</span><br><span class="line">&quot;This website is for losers LOL!&quot;</span><br><span class="line">would become -&gt;</span><br><span class="line">&quot;Ths wbst s fr lsrs LL!&quot;.</span><br></pre></td></tr></table></figure>

<h2 id="5-3-My-Solution"><a href="#5-3-My-Solution" class="headerlink" title="5.3. My Solution"></a>5.3. My Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">disemvowel</span>(<span class="params">string</span>):</span></span><br><span class="line">    vowel = <span class="string">&#x27;aAeEiIoOuU&#x27;</span></span><br><span class="line">    sentence_list = list(string)</span><br><span class="line">    [sentence_list.remove(character) <span class="keyword">for</span> character <span class="keyword">in</span> string <span class="keyword">if</span> character <span class="keyword">in</span> vowel]</span><br><span class="line">    new_string = <span class="string">&quot;&quot;</span>.join(sentence_list)</span><br><span class="line">    <span class="keyword">return</span> new_string</span><br></pre></td></tr></table></figure>

<h2 id="5-4-Excellent-Solution"><a href="#5-4-Excellent-Solution" class="headerlink" title="5.4. Excellent Solution"></a>5.4. Excellent Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">disemvowel</span>(<span class="params">string</span>):</span></span><br><span class="line">    new_string = string.translate(str.maketrans(<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;aeiouAEIOU&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> new_string</span><br></pre></td></tr></table></figure>

<h1 id="6-Complementary-DNA"><a href="#6-Complementary-DNA" class="headerlink" title="6. Complementary DNA"></a>6. Complementary DNA</h1><h2 id="6-1-Description"><a href="#6-1-Description" class="headerlink" title="6.1. Description"></a>6.1. Description</h2><p>Deoxyribonucleic acid (DNA) is a chemical found in the nucleus of cells and carries the “instructions” for the development and functioning of living organisms.<br>In DNA strings, symbols “A” and “T” are complements of each other, as “C” and “G”. You have function with one side of the DNA (string, except for Haskell); you need to get the other complementary side. DNA strand is never empty or there is no DNA at all (again, except for Haskell).</p>
<h2 id="6-2-Examples"><a href="#6-2-Examples" class="headerlink" title="6.2. Examples"></a>6.2. Examples</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DNA_strand (&quot;ATTGC&quot;) # return &quot;TAACG&quot;</span><br><span class="line">DNA_strand (&quot;GTAT&quot;) # return &quot;CATA&quot;</span><br></pre></td></tr></table></figure>
<h2 id="6-3-My-Solution"><a href="#6-3-My-Solution" class="headerlink" title="6.3. My Solution"></a>6.3. My Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dna_strand</span>(<span class="params">dna</span>):</span></span><br><span class="line">    complementary_dna = dna.translate(str.maketrans(<span class="string">&#x27;ATCG&#x27;</span>, <span class="string">&#x27;TAGC&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> complementary_dna</span><br></pre></td></tr></table></figure>
<h2 id="6-4-Excellent-Solution"><a href="#6-4-Excellent-Solution" class="headerlink" title="6.4. Excellent Solution"></a>6.4. Excellent Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#(1)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DNA_strand</span>(<span class="params">dna</span>):</span></span><br><span class="line">    <span class="keyword">return</span> dna.translate(string.maketrans(<span class="string">&quot;ATCG&quot;</span>,<span class="string">&quot;TAGC&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#(2)</span></span><br><span class="line">pairs = &#123;<span class="string">&#x27;A&#x27;</span>:<span class="string">&#x27;T&#x27;</span>,<span class="string">&#x27;T&#x27;</span>:<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;C&#x27;</span>:<span class="string">&#x27;G&#x27;</span>,<span class="string">&#x27;G&#x27;</span>:<span class="string">&#x27;C&#x27;</span>&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DNA_strand</span>(<span class="params">dna</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join([pairs[x] <span class="keyword">for</span> x <span class="keyword">in</span> dna])</span><br></pre></td></tr></table></figure>

<h1 id="7-Tribonacci-Sequence"><a href="#7-Tribonacci-Sequence" class="headerlink" title="7. Tribonacci Sequence"></a>7. Tribonacci Sequence</h1><h2 id="7-1-Description"><a href="#7-1-Description" class="headerlink" title="7.1. Description"></a>7.1. Description</h2><p>Well met with Fibonacci bigger brother, AKA Tribonacci. As the name may already reveal, it works basically like a Fibonacci, but summing the last 3 (instead of 2) numbers of the sequence to generate the next. Signature will always contain 3 numbers; n will always be a non-negative number; if n == 0, then return an empty array (except in C return NULL)</p>
<h2 id="7-2-Examples"><a href="#7-2-Examples" class="headerlink" title="7.2. Examples"></a>7.2. Examples</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Test.assert_equals(tribonacci([1,1,1],10),[1,1,1,3,5,9,17,31,57,105])</span><br><span class="line">Test.assert_equals(tribonacci([0,0,0],10),[0,0,0,0,0,0,0,0,0,0])</span><br><span class="line">Test.assert_equals(tribonacci([1,1,1],1),[1])</span><br><span class="line">Test.assert_equals(tribonacci([300,200,100],0),[])</span><br></pre></td></tr></table></figure>
<h2 id="7-3-My-Solution"><a href="#7-3-My-Solution" class="headerlink" title="7.3. My Solution"></a>7.3. My Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tribonacci</span>(<span class="params">signature, n</span>):</span></span><br><span class="line">        [signature.append(sum(signature[<span class="number">-3</span>:])) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>, n)]</span><br><span class="line">        <span class="keyword">return</span> signature[:n]</span><br></pre></td></tr></table></figure>
<h2 id="7-4-Excellent-Solution"><a href="#7-4-Excellent-Solution" class="headerlink" title="7.4. Excellent Solution"></a>7.4. Excellent Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#(1)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tribonacci</span>(<span class="params">signature, n</span>):</span></span><br><span class="line">  res = signature[:n]</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> range(n - <span class="number">3</span>): res.append(sum(res[<span class="number">-3</span>:]))</span><br><span class="line">  <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="comment">#(2)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tribonacci</span>(<span class="params">signature,n</span>):</span></span><br><span class="line">    <span class="keyword">while</span> len(signature) &lt; n:</span><br><span class="line">        signature.append(sum(signature[<span class="number">-3</span>:]))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> signature[:n]</span><br></pre></td></tr></table></figure>

<h1 id="8-Fibonacci-Tribonacci-and-friends"><a href="#8-Fibonacci-Tribonacci-and-friends" class="headerlink" title="8. Fibonacci, Tribonacci and friends"></a>8. Fibonacci, Tribonacci and friends</h1><h2 id="8-1-Description"><a href="#8-1-Description" class="headerlink" title="8.1. Description"></a>8.1. Description</h2><p>Well, time to expand the family a little more: think of a Quadribonacci starting with a signature of 4 elements and each following element is the sum of the 4 previous, a Pentabonacci (well Cinquebonacci would probably sound a bit more italian, but it would also sound really awful) with a signature of 5 elements and each following element is the sum of the 5 previous, and so on.</p>
<h2 id="8-2-Examples"><a href="#8-2-Examples" class="headerlink" title="8.2. Examples"></a>8.2. Examples</h2><p>Well, guess what? You have to build a Xbonacci function that takes a signature of X elements - and remember each next element is the sum of the last X elements - and returns the first n elements of the so seeded sequence.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xbonacci &#123;1,1,1,1&#125; 10 &#x3D; &#123;1,1,1,1,4,7,13,25,49,94&#125;</span><br><span class="line">xbonacci &#123;0,0,0,0,1&#125; 10 &#x3D; &#123;0,0,0,0,1,1,2,4,8,16&#125;</span><br><span class="line">xbonacci &#123;1,0,0,0,0,0,1&#125; 10 &#x3D; &#123;1,0,0,0,0,0,1,2,3,6&#125;</span><br><span class="line">xbonacci &#123;1,1&#125; produces the Fibonacci sequence</span><br></pre></td></tr></table></figure>
<h2 id="8-3-My-Solution"><a href="#8-3-My-Solution" class="headerlink" title="8.3. My Solution"></a>8.3. My Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Xbonacci</span>(<span class="params">signature, n</span>):</span></span><br><span class="line">    length = len(signature)</span><br><span class="line">    [signature.append(sum(signature[-length:])) <span class="keyword">for</span> i <span class="keyword">in</span> range(length, n)]</span><br><span class="line">    <span class="keyword">return</span> signature[:n]</span><br></pre></td></tr></table></figure>
<h2 id="8-4-Excellent-Solution"><a href="#8-4-Excellent-Solution" class="headerlink" title="8.4. Excellent Solution"></a>8.4. Excellent Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Xbonacci</span>(<span class="params">signature,n</span>):</span></span><br><span class="line">    output, x = signature[:n], len(signature)</span><br><span class="line">    <span class="keyword">while</span> len(output) &lt; n:</span><br><span class="line">        output.append(sum(output[-x:]))</span><br><span class="line">    <span class="keyword">return</span> output</span><br></pre></td></tr></table></figure>

<h1 id="9-Product-of-consecutive-Fib-numbers"><a href="#9-Product-of-consecutive-Fib-numbers" class="headerlink" title="9. Product of consecutive Fib numbers"></a>9. Product of consecutive Fib numbers</h1><h2 id="9-1-Description"><a href="#9-1-Description" class="headerlink" title="9.1. Description"></a>9.1. Description</h2><p>The Fibonacci numbers : F(n) = F(n-1) + F(n-2) with F(0) = 0 and F(1) = 1.<br>Given a number, say prod (for product), we search two Fibonacci numbers F(n) and F(n+1) verifying:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> F(n) * F(n+<span class="number">1</span>) = prod:</span><br><span class="line">    <span class="keyword">return</span> [F(n), F(n+<span class="number">1</span>), true] <span class="keyword">or</span> &#123;F(n), F(n+<span class="number">1</span>), <span class="number">1</span>&#125; <span class="keyword">or</span> (F(n), F(n+<span class="number">1</span>), <span class="literal">True</span>)</span><br><span class="line"><span class="keyword">elif</span> F(n) * F(n+<span class="number">1</span>) &gt; prod:</span><br><span class="line">    <span class="keyword">return</span> [F(n), F(n+<span class="number">1</span>), false] <span class="keyword">or</span> &#123;F(n), F(n+<span class="number">1</span>), <span class="number">0</span>&#125; <span class="keyword">or</span> (F(n), F(n+<span class="number">1</span>), <span class="literal">False</span>)</span><br></pre></td></tr></table></figure>
<h2 id="9-2-Examples"><a href="#9-2-Examples" class="headerlink" title="9.2. Examples"></a>9.2. Examples</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">productFib(714) # should return (21, 34, true),</span><br><span class="line">                # since F(8) &#x3D; 21, F(9) &#x3D; 34 and 714 &#x3D; 21 * 34</span><br><span class="line"></span><br><span class="line">productFib(800) # should return (34, 55, false),</span><br><span class="line">                # since F(8) &#x3D; 21, F(9) &#x3D; 34, F(10) &#x3D; 55 and 21 * 34 &lt; 800 &lt; 34 * 55</span><br><span class="line">-----</span><br><span class="line">productFib(714) # should return [21, 34, true&#x2F;True&#x2F;1],</span><br><span class="line">productFib(800) # should return [34, 55, false&#x2F;False&#x2F;0],</span><br></pre></td></tr></table></figure>
<h2 id="9-3-My-Solution"><a href="#9-3-My-Solution" class="headerlink" title="9.3. My Solution"></a>9.3. My Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">productFib</span>(<span class="params">prod</span>):</span></span><br><span class="line">    a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> a * b &lt; prod:</span><br><span class="line">        a, b = b, a + b</span><br><span class="line">    <span class="keyword">return</span> [a, b, a * b == prod]</span><br></pre></td></tr></table></figure>

<h1 id="10-The-Supermarket-Queue"><a href="#10-The-Supermarket-Queue" class="headerlink" title="10. The Supermarket Queue"></a>10. The Supermarket Queue</h1><h2 id="10-1-Description"><a href="#10-1-Description" class="headerlink" title="10.1. Description"></a>10.1. Description</h2><p>There is a queue for the self-checkout tills at the supermarket. Your task is write a function to calculate the total time required for all the customers to check out!<br>input:</p>
<ul>
<li>customers: an array of positive integers representing the queue. Each integer represents a customer, and its value is the amount of time they require to check out.</li>
<li>n: a positive integer, the number of checkout tills.<br>output:</li>
<li>The function should return an integer, the total time required.<br>Clarifications:</li>
<li>There is only ONE queue serving many tills, and</li>
<li>The order of the queue NEVER changes, and</li>
<li>The front person in the queue (i.e. the first element in the array/list) proceeds to a till as soon as it becomes free.</li>
</ul>
<h2 id="10-2-Examples"><a href="#10-2-Examples" class="headerlink" title="10.2. Examples"></a>10.2. Examples</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">queue_time([5,3,4], 1)</span><br><span class="line"># should return 12</span><br><span class="line"># because when n&#x3D;1, the total time is just the sum of the times</span><br><span class="line"></span><br><span class="line">queue_time([10,2,3,3], 2)</span><br><span class="line"># should return 10</span><br><span class="line"># because here n&#x3D;2 and the 2nd, 3rd, and 4th people in the</span><br><span class="line"># queue finish before the 1st person has finished.</span><br><span class="line"></span><br><span class="line">queue_time([2,3,10], 2)</span><br><span class="line"># should return 12</span><br></pre></td></tr></table></figure>
<h2 id="10-3-My-Solution"><a href="#10-3-My-Solution" class="headerlink" title="10.3. My Solution"></a>10.3. My Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">queue_time</span>(<span class="params">customers, n</span>):</span></span><br><span class="line">    <span class="comment"># in case the empty customers</span></span><br><span class="line">    customers.append(<span class="number">0</span>)</span><br><span class="line">    t = <span class="number">0</span></span><br><span class="line">    <span class="comment"># the number of customer &lt;= the number of tills</span></span><br><span class="line">    <span class="keyword">if</span> len(customers) &lt;= n:</span><br><span class="line">        longest_time = max(customers)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># initialize a &quot;Double Dimensional Array&quot;:[[], [], ...]</span></span><br><span class="line">        till = [[] <span class="keyword">for</span> i <span class="keyword">in</span> range(n)]</span><br><span class="line">        <span class="comment"># fill the array by customers</span></span><br><span class="line">        <span class="keyword">for</span> customer <span class="keyword">in</span> customers[:n]:</span><br><span class="line">            till[t].append(customer)</span><br><span class="line">            t += <span class="number">1</span></span><br><span class="line">        <span class="comment"># the next customer always after the shortest time in the array</span></span><br><span class="line">        <span class="keyword">for</span> customer <span class="keyword">in</span> customers[n:]:</span><br><span class="line">            till = sorted(till, key=sum)</span><br><span class="line">            till[<span class="number">0</span>].append(customer)</span><br><span class="line">        till = sorted(till, key=sum)</span><br><span class="line">        longest_time = sum(till[<span class="number">-1</span>])</span><br><span class="line">    <span class="keyword">return</span> longest_time</span><br></pre></td></tr></table></figure>
<h2 id="10-4-Excellent-Solution"><a href="#10-4-Excellent-Solution" class="headerlink" title="10.4. Excellent Solution"></a>10.4. Excellent Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">queue_time</span>(<span class="params">customers, n</span>):</span></span><br><span class="line">    l=[<span class="number">0</span>]*n</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> customers:</span><br><span class="line">        l[l.index(min(l))]+=i</span><br><span class="line">    <span class="keyword">return</span> max(l)</span><br></pre></td></tr></table></figure>

<h1 id="11-Calculating-with-Functions"><a href="#11-Calculating-with-Functions" class="headerlink" title="11. Calculating with Functions"></a>11. Calculating with Functions</h1><h2 id="11-1-Description"><a href="#11-1-Description" class="headerlink" title="11.1. Description"></a>11.1. Description</h2><p>This time we want to write calculations using functions and get the results.</p>
<h2 id="11-2-Examples"><a href="#11-2-Examples" class="headerlink" title="11.2. Examples"></a>11.2. Examples</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">seven(times(five())) # must return 35</span><br><span class="line">four(plus(nine())) # must return 13</span><br><span class="line">eight(minus(three())) # must return 5</span><br><span class="line">six(divided_by(two())) # must return 3</span><br></pre></td></tr></table></figure>
<p>Requirements:</p>
<ul>
<li>There must be a function for each number from 0 (“zero”) to 9 (“nine”)</li>
<li>There must be a function for each of the following mathematical operations: plus, minus, times, dividedBy (divided_by in Ruby and Python)</li>
<li>Each calculation consist of exactly one operation and two numbers</li>
<li>The most outer function represents the left operand, the most inner function represents the right operand</li>
<li>Divison should be integer division. For example, <strong>eight(divided_by(three()))</strong> should return 2, not 2.666666…</li>
</ul>
<h2 id="11-3-My-Solution"><a href="#11-3-My-Solution" class="headerlink" title="11.3. My Solution"></a>11.3. My Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># number</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">zero</span>(<span class="params">*args</span>):</span></span><br><span class="line">    length = len(args)</span><br><span class="line">    <span class="keyword">if</span> length == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;0&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> length == <span class="number">1</span>:</span><br><span class="line">        args[<span class="number">0</span>].insert(<span class="number">0</span>, <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> eval(<span class="string">&quot; &quot;</span>.join(args[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">one</span>(<span class="params">*args</span>):</span></span><br><span class="line">    length = len(args)</span><br><span class="line">    <span class="keyword">if</span> length == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;1&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> length == <span class="number">1</span>:</span><br><span class="line">        args[<span class="number">0</span>].insert(<span class="number">0</span>, <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> eval(<span class="string">&quot; &quot;</span>.join(args[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">two</span>(<span class="params">*args</span>):</span></span><br><span class="line">    length = len(args)</span><br><span class="line">    <span class="keyword">if</span> length == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;2&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> length == <span class="number">1</span>:</span><br><span class="line">        args[<span class="number">0</span>].insert(<span class="number">0</span>, <span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> eval(<span class="string">&quot; &quot;</span>.join(args[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">three</span>(<span class="params">*args</span>):</span></span><br><span class="line">    length = len(args)</span><br><span class="line">    <span class="keyword">if</span> length == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> length == <span class="number">1</span>:</span><br><span class="line">        args[<span class="number">0</span>].insert(<span class="number">0</span>, <span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> eval(<span class="string">&quot; &quot;</span>.join(args[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">four</span>(<span class="params">*args</span>):</span></span><br><span class="line">    length = len(args)</span><br><span class="line">    <span class="keyword">if</span> length == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;4&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> length == <span class="number">1</span>:</span><br><span class="line">        args[<span class="number">0</span>].insert(<span class="number">0</span>, <span class="string">&#x27;4&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> eval(<span class="string">&quot; &quot;</span>.join(args[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">five</span>(<span class="params">*args</span>):</span></span><br><span class="line">    length = len(args)</span><br><span class="line">    <span class="keyword">if</span> length == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;5&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> length == <span class="number">1</span>:</span><br><span class="line">        args[<span class="number">0</span>].insert(<span class="number">0</span>, <span class="string">&#x27;5&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> eval(<span class="string">&quot; &quot;</span>.join(args[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">six</span>(<span class="params">*args</span>):</span></span><br><span class="line">    length = len(args)</span><br><span class="line">    <span class="keyword">if</span> length == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;6&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> length == <span class="number">1</span>:</span><br><span class="line">        args[<span class="number">0</span>].insert(<span class="number">0</span>, <span class="string">&#x27;6&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> eval(<span class="string">&quot; &quot;</span>.join(args[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">seven</span>(<span class="params">*args</span>):</span></span><br><span class="line">    length = len(args)</span><br><span class="line">    <span class="keyword">if</span> length == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;7&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> length == <span class="number">1</span>:</span><br><span class="line">        args[<span class="number">0</span>].insert(<span class="number">0</span>, <span class="string">&#x27;7&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> eval(<span class="string">&quot; &quot;</span>.join(args[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">eight</span>(<span class="params">*args</span>):</span></span><br><span class="line">    length = len(args)</span><br><span class="line">    <span class="keyword">if</span> length == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;8&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> length == <span class="number">1</span>:</span><br><span class="line">        args[<span class="number">0</span>].insert(<span class="number">0</span>, <span class="string">&#x27;8&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> eval(<span class="string">&quot; &quot;</span>.join(args[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nine</span>(<span class="params">*args</span>):</span></span><br><span class="line">    length = len(args)</span><br><span class="line">    <span class="keyword">if</span> length == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;9&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> length == <span class="number">1</span>:</span><br><span class="line">        args[<span class="number">0</span>].insert(<span class="number">0</span>, <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> eval(<span class="string">&quot; &quot;</span>.join(args[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># mathematical operations</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plus</span>(<span class="params">*args</span>):</span></span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&quot;+&quot;</span>, args[<span class="number">0</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">minus</span>(<span class="params">*args</span>):</span></span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&quot;-&quot;</span>, args[<span class="number">0</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">times</span>(<span class="params">*args</span>):</span></span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&quot;*&quot;</span>, args[<span class="number">0</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">divided_by</span>(<span class="params">*args</span>):</span></span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&quot;//&quot;</span>, args[<span class="number">0</span>]]</span><br></pre></td></tr></table></figure>
<h2 id="11-4-Excellent-Solution"><a href="#11-4-Excellent-Solution" class="headerlink" title="11.4. Excellent Solution"></a>11.4. Excellent Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># (1)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">zero</span>(<span class="params">f = None</span>):</span> <span class="keyword">return</span> <span class="number">0</span> <span class="keyword">if</span> <span class="keyword">not</span> f <span class="keyword">else</span> f(<span class="number">0</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">one</span>(<span class="params">f = None</span>):</span> <span class="keyword">return</span> <span class="number">1</span> <span class="keyword">if</span> <span class="keyword">not</span> f <span class="keyword">else</span> f(<span class="number">1</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">two</span>(<span class="params">f = None</span>):</span> <span class="keyword">return</span> <span class="number">2</span> <span class="keyword">if</span> <span class="keyword">not</span> f <span class="keyword">else</span> f(<span class="number">2</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">three</span>(<span class="params">f = None</span>):</span> <span class="keyword">return</span> <span class="number">3</span> <span class="keyword">if</span> <span class="keyword">not</span> f <span class="keyword">else</span> f(<span class="number">3</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">four</span>(<span class="params">f = None</span>):</span> <span class="keyword">return</span> <span class="number">4</span> <span class="keyword">if</span> <span class="keyword">not</span> f <span class="keyword">else</span> f(<span class="number">4</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">five</span>(<span class="params">f = None</span>):</span> <span class="keyword">return</span> <span class="number">5</span> <span class="keyword">if</span> <span class="keyword">not</span> f <span class="keyword">else</span> f(<span class="number">5</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">six</span>(<span class="params">f = None</span>):</span> <span class="keyword">return</span> <span class="number">6</span> <span class="keyword">if</span> <span class="keyword">not</span> f <span class="keyword">else</span> f(<span class="number">6</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">seven</span>(<span class="params">f = None</span>):</span> <span class="keyword">return</span> <span class="number">7</span> <span class="keyword">if</span> <span class="keyword">not</span> f <span class="keyword">else</span> f(<span class="number">7</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">eight</span>(<span class="params">f = None</span>):</span> <span class="keyword">return</span> <span class="number">8</span> <span class="keyword">if</span> <span class="keyword">not</span> f <span class="keyword">else</span> f(<span class="number">8</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nine</span>(<span class="params">f = None</span>):</span> <span class="keyword">return</span> <span class="number">9</span> <span class="keyword">if</span> <span class="keyword">not</span> f <span class="keyword">else</span> f(<span class="number">9</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plus</span>(<span class="params">y</span>):</span> <span class="keyword">return</span> <span class="keyword">lambda</span> x: x+y</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">minus</span>(<span class="params">y</span>):</span> <span class="keyword">return</span> <span class="keyword">lambda</span> x: x-y</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">times</span>(<span class="params">y</span>):</span> <span class="keyword">return</span> <span class="keyword">lambda</span>  x: x*y</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">divided_by</span>(<span class="params">y</span>):</span> <span class="keyword">return</span> <span class="keyword">lambda</span>  x: x/y</span><br><span class="line"></span><br><span class="line"><span class="comment"># (2)</span></span><br><span class="line">id_ = <span class="keyword">lambda</span> x: x</span><br><span class="line">number = <span class="keyword">lambda</span> x: <span class="keyword">lambda</span> f=id_: f(x)</span><br><span class="line">zero, one, two, three, four, five, six, seven, eight, nine = map(number, range(<span class="number">10</span>))</span><br><span class="line">plus = <span class="keyword">lambda</span> x: <span class="keyword">lambda</span> y: y + x</span><br><span class="line">minus = <span class="keyword">lambda</span> x: <span class="keyword">lambda</span> y: y - x</span><br><span class="line">times = <span class="keyword">lambda</span> x: <span class="keyword">lambda</span> y: y * x</span><br><span class="line">divided_by = <span class="keyword">lambda</span> x: <span class="keyword">lambda</span> y: y / x</span><br><span class="line"></span><br><span class="line"><span class="comment"># (3)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">zero</span>(<span class="params">arg=<span class="string">&quot;&quot;</span></span>):</span>  <span class="keyword">return</span> eval(<span class="string">&quot;0&quot;</span> + arg)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">one</span>(<span class="params">arg=<span class="string">&quot;&quot;</span></span>):</span>   <span class="keyword">return</span> eval(<span class="string">&quot;1&quot;</span> + arg)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">two</span>(<span class="params">arg=<span class="string">&quot;&quot;</span></span>):</span>   <span class="keyword">return</span> eval(<span class="string">&quot;2&quot;</span> + arg)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">three</span>(<span class="params">arg=<span class="string">&quot;&quot;</span></span>):</span> <span class="keyword">return</span> eval(<span class="string">&quot;3&quot;</span> + arg)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">four</span>(<span class="params">arg=<span class="string">&quot;&quot;</span></span>):</span>  <span class="keyword">return</span> eval(<span class="string">&quot;4&quot;</span> + arg)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">five</span>(<span class="params">arg=<span class="string">&quot;&quot;</span></span>):</span>  <span class="keyword">return</span> eval(<span class="string">&quot;5&quot;</span> + arg)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">six</span>(<span class="params">arg=<span class="string">&quot;&quot;</span></span>):</span>   <span class="keyword">return</span> eval(<span class="string">&quot;6&quot;</span> + arg)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">seven</span>(<span class="params">arg=<span class="string">&quot;&quot;</span></span>):</span> <span class="keyword">return</span> eval(<span class="string">&quot;7&quot;</span> + arg)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">eight</span>(<span class="params">arg=<span class="string">&quot;&quot;</span></span>):</span> <span class="keyword">return</span> eval(<span class="string">&quot;8&quot;</span> + arg)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nine</span>(<span class="params">arg=<span class="string">&quot;&quot;</span></span>):</span>  <span class="keyword">return</span> eval(<span class="string">&quot;9&quot;</span> + arg)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plus</span>(<span class="params">n</span>):</span>       <span class="keyword">return</span> <span class="string">&quot;+%s&quot;</span> % n</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">minus</span>(<span class="params">n</span>):</span>      <span class="keyword">return</span> <span class="string">&quot;-%s&quot;</span> % n</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">times</span>(<span class="params">n</span>):</span>      <span class="keyword">return</span> <span class="string">&quot;*%s&quot;</span> % n</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">divided_by</span>(<span class="params">n</span>):</span> <span class="keyword">return</span> <span class="string">&quot;/%s&quot;</span> % n</span><br></pre></td></tr></table></figure>

<h1 id="12-Primes-in-numbers"><a href="#12-Primes-in-numbers" class="headerlink" title="12. Primes in numbers"></a>12. Primes in numbers</h1><h2 id="12-1-Description"><a href="#12-1-Description" class="headerlink" title="12.1. Description"></a>12.1. Description</h2><p>Given a positive number n &gt; 1 find the prime factor decomposition of n.</p>
<h2 id="12-2-Examples"><a href="#12-2-Examples" class="headerlink" title="12.2. Examples"></a>12.2. Examples</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># formula</span><br><span class="line"> &quot;(p1**n1)(p2**n2)...(pk**nk)&quot;</span><br><span class="line"></span><br><span class="line"># example</span><br><span class="line"> n &#x3D; 86240 should return &quot;(2**5)(5)(7**2)(11)&quot;</span><br></pre></td></tr></table></figure>
<h2 id="12-3-My-Solution"><a href="#12-3-My-Solution" class="headerlink" title="12.3. My Solution"></a>12.3. My Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">prime_factors</span>(<span class="params">n</span>):</span></span><br><span class="line">    prime_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>, n+<span class="number">1</span>):</span><br><span class="line">        num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> n % i == <span class="number">0</span>:</span><br><span class="line">            num += <span class="number">1</span></span><br><span class="line">            n /= i</span><br><span class="line">        <span class="keyword">if</span> num == <span class="number">1</span>:</span><br><span class="line">            prime_list.append(<span class="string">&#x27;(&#x27;</span> + str(i) + <span class="string">&#x27;)&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> num &gt; <span class="number">1</span>:</span><br><span class="line">            prime_list.append(<span class="string">&#x27;(&#x27;</span> + str(i)+<span class="string">&#x27;**&#x27;</span>+str(num) + <span class="string">&#x27;)&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> n % i == n:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join(prime_list)</span><br></pre></td></tr></table></figure>
<h2 id="12-4-Excellent-Solution"><a href="#12-4-Excellent-Solution" class="headerlink" title="12.4. Excellent Solution"></a>12.4. Excellent Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">primeFactors</span>(<span class="params">n</span>):</span></span><br><span class="line">    ret = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">2</span>, n + <span class="number">1</span>):</span><br><span class="line">        num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span>(n % i == <span class="number">0</span>):</span><br><span class="line">            num += <span class="number">1</span></span><br><span class="line">            n /= i</span><br><span class="line">        <span class="keyword">if</span> num &gt; <span class="number">0</span>:</span><br><span class="line">            ret += <span class="string">&#x27;(&#123;&#125;&#123;&#125;)&#x27;</span>.format(i, <span class="string">&#x27;**%d&#x27;</span> % num <span class="keyword">if</span> num &gt; <span class="number">1</span> <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> ret</span><br></pre></td></tr></table></figure>

<h1 id="13-Organise-duplicate-numbers-in-list"><a href="#13-Organise-duplicate-numbers-in-list" class="headerlink" title="13. Organise duplicate numbers in list"></a>13. Organise duplicate numbers in list</h1><h2 id="13-1-Description"><a href="#13-1-Description" class="headerlink" title="13.1. Description"></a>13.1. Description</h2><p>Given an array of numbers, your function should return an array of arrays, where each subarray contains all the duplicates of a particular number. Subarrays should be in the same order as the first occurence of the number they contain.</p>
<h2 id="13-2-Examples"><a href="#13-2-Examples" class="headerlink" title="13.2. Examples"></a>13.2. Examples</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">group([<span class="number">3</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[[<span class="number">3</span>, <span class="number">3</span>], [<span class="number">2</span>, <span class="number">2</span>], [<span class="number">6</span>], [<span class="number">1</span>]]</span><br></pre></td></tr></table></figure>
<h2 id="13-3-My-Solution"><a href="#13-3-My-Solution" class="headerlink" title="13.3. My Solution"></a>13.3. My Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">group</span>(<span class="params">arr</span>):</span></span><br><span class="line">    counted_dict = Counter(arr)</span><br><span class="line">    <span class="keyword">return</span> [list(itertools.repeat(element[<span class="number">0</span>], element[<span class="number">1</span>])) <span class="keyword">for</span> element <span class="keyword">in</span> counted_dict.items()]</span><br></pre></td></tr></table></figure>
<h2 id="13-4-Excellent-Solution"><a href="#13-4-Excellent-Solution" class="headerlink" title="13.4. Excellent Solution"></a>13.4. Excellent Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">group</span>(<span class="params">arr</span>):</span></span><br><span class="line">    <span class="keyword">return</span> [[k] * n <span class="keyword">for</span> k, n <span class="keyword">in</span> Counter(arr).items()]</span><br></pre></td></tr></table></figure>

<h1 id="14-ToDo"><a href="#14-ToDo" class="headerlink" title="14. ToDo"></a>14. ToDo</h1><h2 id="14-1-Description"><a href="#14-1-Description" class="headerlink" title="14.1. Description"></a>14.1. Description</h2><h2 id="14-2-Examples"><a href="#14-2-Examples" class="headerlink" title="14.2. Examples"></a>14.2. Examples</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;&#96;&#96;</span><br><span class="line">## 14.3. My Solution</span><br><span class="line">&#96;&#96;&#96;Python</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="14-4-Excellent-Solution"><a href="#14-4-Excellent-Solution" class="headerlink" title="14.4. Excellent Solution"></a>14.4. Excellent Solution</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>Computer Science</category>
      </categories>
      <tags>
        <tag>Codewars</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - Theme 6 OOP</title>
    <url>/2020/09/28/Python-Theme-6-OOP/</url>
    <content><![CDATA[<blockquote>
<p>OOP- Object Oriented Programming. 把对象作为程序的基本单元，一个对象包含数据和函数，计算机程序执行就是消息在各个对象之间的传递。</p>
</blockquote>
<a id="more"></a>

<h1 id="1-类和实例及访问限制"><a href="#1-类和实例及访问限制" class="headerlink" title="1. 类和实例及访问限制"></a>1. 类和实例及访问限制</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding : utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>(<span class="params">object</span>):</span>  <span class="comment">#object类--所有类最终都会继承的类, 这里可以将object看做父类</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, score</span>):</span> <span class="comment">#创建实例的时候需要传入的参数,会绑定给实例</span></span><br><span class="line">        self.__name = name <span class="comment">#__name, 两个下划线开头表示私有变量，外部无法访问</span></span><br><span class="line">        self.score = score</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_name</span>(<span class="params">self</span>):</span> <span class="comment">#由于外部无法访问私有变量, 因此通过内部方法来实现;</span></span><br><span class="line">        <span class="keyword">return</span> self.__name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_name</span>(<span class="params">self, name</span>):</span> <span class="comment">#这样的好处在于可以规定传入参数的要求</span></span><br><span class="line">        self.__name = name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print_score</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;%s: %s&#x27;</span> % (self.__name, self.score))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_grade</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.score &gt;= <span class="number">90</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;A&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span> self.score &gt;= <span class="number">60</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;B&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;C&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nick = Student(<span class="string">&#x27;Nick Yang&#x27;</span>, <span class="number">50</span>) <span class="comment">#生成一个名为nick的实例, 变量nick指向这个实例.</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nick</span><br><span class="line">&lt;__main__.Student object at <span class="number">0x10d4c1090</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Student</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">__main__</span>.<span class="title">Student</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">nick</span>.<span class="title">name</span> #私有变量不能通过外部访问</span></span><br><span class="line"><span class="class"><span class="title">Traceback</span> (<span class="params">most recent call last</span>):</span></span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">AttributeError: <span class="string">&#x27;Student&#x27;</span> object has no attribute <span class="string">&#x27;name&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nick.get_name()</span><br><span class="line"><span class="string">&#x27;Nick Yang&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nick.print_score()</span><br><span class="line">Nick Yang: <span class="number">50</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nick.score <span class="comment">#score不是私有变量, 因此可以直接访问</span></span><br><span class="line"><span class="number">50</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nick.score = <span class="number">60</span> <span class="comment">#可直接赋新值</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nick.score</span><br><span class="line"><span class="number">60</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nick.get_grade()</span><br><span class="line"><span class="string">&#x27;B&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nick.age = <span class="number">18</span> <span class="comment">#可以自由的给实例绑定属性</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nick.age</span><br><span class="line"><span class="number">18</span></span><br></pre></td></tr></table></figure>

<h1 id="2-继承和多态"><a href="#2-继承和多态" class="headerlink" title="2. 继承和多态"></a>2. 继承和多态</h1><blockquote>
<p>多态：使用单一接口操作具有相似特性数据的能力</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding : utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ielts</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.__totalScore = <span class="number">9</span></span><br><span class="line">        self.bringItems = [<span class="string">&#x27;ID document&#x27;</span>, <span class="string">&#x27;a pencil and a pen&#x27;</span>, <span class="string">&#x27;an eraser&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print_total_score</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;Total_score: %s&#x27;</span> % self.__totalScore)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print_bring_items</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;Necessary_Items: %s&#x27;</span> % self.bringItems)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">exam</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;It is IELTS exam.&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Reading</span>(<span class="params">Ielts</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">exam</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;It is Reading exam.&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Writing</span>(<span class="params">Ielts</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">exam</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;It is Writing exam.&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Listening</span>(<span class="params">Ielts</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">exam</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;It is Listening exam.&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Speaking</span>(<span class="params">Ielts</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.bringItems = [<span class="string">&#x27;ID document&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">exam</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;It is Speaking exam.&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exam</span>(<span class="params">obj</span>):</span></span><br><span class="line">    obj.exam() <span class="comment">#多态: 让不同功能的函数使用相同的函数名, 这样可以用一个函数名来调用不同功能(内容)的函数.</span></span><br><span class="line"></span><br><span class="line">examination = Ielts()</span><br><span class="line">examination.exam()</span><br><span class="line">examination.print_bring_items()</span><br><span class="line"></span><br><span class="line">speakingExam = Speaking()</span><br><span class="line">speakingExam.print_bring_items() <span class="comment">#继承了父类的方法</span></span><br><span class="line">speakingExam.exam()</span><br><span class="line">exam(speakingExam)</span><br><span class="line"><span class="comment">#speakingExam.print_total_score() #AttributeError: &#x27;Speaking&#x27; object has no attribute &#x27;_Ielts__totalScore&#x27;, 子类不会继承父类的私有变量</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">It <span class="keyword">is</span> IELTS exam.</span><br><span class="line">Necessary_Items: [<span class="string">&#x27;ID document&#x27;</span>, <span class="string">&#x27;a pencil and a pen&#x27;</span>, <span class="string">&#x27;an eraser&#x27;</span>]</span><br><span class="line">Necessary_Items: [<span class="string">&#x27;ID document&#x27;</span>]</span><br><span class="line">It <span class="keyword">is</span> Speaking exam.</span><br><span class="line">It <span class="keyword">is</span> Speaking exam.</span><br></pre></td></tr></table></figure>

<h1 id="3-获取对象信息"><a href="#3-获取对象信息" class="headerlink" title="3. 获取对象信息"></a>3. 获取对象信息</h1><h2 id="3-1-type"><a href="#3-1-type" class="headerlink" title="3.1. type()"></a>3.1. type()</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#判断基本类型</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(<span class="number">10</span>)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">int</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">type</span>(<span class="params"><span class="string">&#x27;10&#x27;</span></span>)</span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">str</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">type</span>(<span class="params">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span>)</span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">list</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">type</span>(<span class="params">(<span class="params"><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></span>)</span>)</span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">tuple</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">type</span>(<span class="params">None</span>)</span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">NoneType</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">type</span>(<span class="params">abs</span>)</span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">builtin_function_or_method</span>&#x27;&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">#判断函数类型</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">import</span> <span class="title">types</span></span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">def</span> <span class="title">f</span>():</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">pass</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(f)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">function</span>&#x27;&gt;</span></span><br><span class="line">&gt;&gt;&gt; type(f) == types.FunctionType</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(abs) == types.FunctionType</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(abs) == types.BuiltinFunctionType</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(<span class="keyword">lambda</span> x:x) == types.LambdaType</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type((x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>))) == types.GeneratorType</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>

<h2 id="3-2-isinstance"><a href="#3-2-isinstance" class="headerlink" title="3.2. isinstance()"></a>3.2. isinstance()</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#type()能判断的,isinstance()也可以, 但是应用场景不同</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(<span class="string">&#x27;10&#x27;</span>, str)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(<span class="number">10</span>, int)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], list)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#判断class的类型, 尤其是在继承关系中</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>(<span class="params">object</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">pass</span></span><br><span class="line"><span class="meta">... </span><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>(<span class="params">Animal</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">pass</span></span><br><span class="line"><span class="meta">... </span><span class="class"><span class="keyword">class</span> <span class="title">Kitty</span>(<span class="params">Cat</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">pass</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = Animal()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c = Cat()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>k = Kitty()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(k, Cat) <span class="keyword">and</span> isinstance(k, Animal)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#可以判断变量是否属于某些类型</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance((<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>), (list, tuple))</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>

<h2 id="3-3-dir"><a href="#3-3-dir" class="headerlink" title="3.3. dir()"></a>3.3. dir()</h2><blockquote>
<p>获取一个对象的所有属性和方法</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dir(<span class="string">&#x27;abc&#x27;</span>)</span><br><span class="line">[<span class="string">&#x27;__add__&#x27;</span>, <span class="string">&#x27;__class__&#x27;</span>, <span class="string">&#x27;__contains__&#x27;</span>, <span class="string">&#x27;__delattr__&#x27;</span>, <span class="string">&#x27;__dir__&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>......]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">&#x27;abc&#x27;</span>) <span class="comment">#实际上是去调用了对象的__Len__()方法</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;abc&#x27;</span>.__len__()</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure>

<h1 id="4-实例属性和类属性"><a href="#4-实例属性和类属性" class="headerlink" title="4. 实例属性和类属性"></a>4. 实例属性和类属性</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#通常使用self变量或者实例变量来给实例绑定属性; 而这种直接在类中定义的属性为类属性;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Test</span>(<span class="params">object</span>):</span></span><br><span class="line"><span class="meta">... </span>    x = <span class="number">1</span></span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = Test()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t.x <span class="comment">#因为实例没有x属性, 所以会向上查找class的x属性</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Test.x <span class="comment">#类属性</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t.x = <span class="number">2</span> <span class="comment">#给实例绑定x属性</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t.x <span class="comment">#实例属性优先</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Test.x <span class="comment">#类属性不变</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> t.x <span class="comment">#删除实例属性</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t.x</span><br><span class="line"><span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#每创建一个学生实例,则计数一次</span></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding : utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>(<span class="params">object</span>):</span></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line">        Student.count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tom = Student(<span class="string">&#x27;Tom&#x27;</span>)</span><br><span class="line">bob = Student(<span class="string">&#x27;Bob&#x27;</span>)</span><br><span class="line">print(<span class="string">&#x27;Student.count = &#x27;</span>, Student.count)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">Student.count =  <span class="number">2</span></span><br></pre></td></tr></table></figure>

<hr>
<h1 id="5-slots-限制实例属性"><a href="#5-slots-限制实例属性" class="headerlink" title="5. slots 限制实例属性"></a>5. <strong>slots</strong> 限制实例属性</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding : utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>(<span class="params">object</span>):</span></span><br><span class="line">    __slots__ = (<span class="string">&#x27;__name&#x27;</span>, <span class="string">&#x27;gender&#x27;</span>, <span class="string">&#x27;age&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        self.__name = name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_name</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.__name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Master</span>(<span class="params">Student</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Doctor</span>(<span class="params">Student</span>):</span></span><br><span class="line">    __slots__ = (<span class="string">&#x27;major&#x27;</span>,)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出    </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = Student(<span class="string">&#x27;Tom&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.get_name()</span><br><span class="line"><span class="string">&#x27;Tom&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.age = <span class="number">18</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.score = <span class="number">100</span> <span class="comment">#因为加了__slots__限制</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">AttributeError: <span class="string">&#x27;Student&#x27;</span> object has no attribute <span class="string">&#x27;score&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#__slots__限制不继承</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m = Master(<span class="string">&#x27;Tom&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m.score = <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果子类也有__slots__, 则会继承</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = Doctor(<span class="string">&#x27;Tom&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.score = <span class="number">100</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">AttributeError: <span class="string">&#x27;Doctor&#x27;</span> object has no attribute <span class="string">&#x27;score&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.age = <span class="number">28</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.major = <span class="string">&#x27;CS&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#类方法也同理</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">set_age</span>(<span class="params">self, age</span>):</span></span><br><span class="line"><span class="meta">... </span>    self.age = age</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> types <span class="keyword">import</span> MethodType</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.set_age = MethodType(set_age, s)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">AttributeError: <span class="string">&#x27;Student&#x27;</span> object has no attribute <span class="string">&#x27;set_age&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m.set_age = MethodType(set_age, m)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m.set_age(<span class="number">18</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m.age</span><br><span class="line"><span class="number">18</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.set_age = MethodType(set_age, d)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">AttributeError: <span class="string">&#x27;Doctor&#x27;</span> object has no attribute <span class="string">&#x27;set_age&#x27;</span></span><br></pre></td></tr></table></figure>

<h1 id="6-property-像访问属性一样的访问类方法-且约束访问权限"><a href="#6-property-像访问属性一样的访问类方法-且约束访问权限" class="headerlink" title="6. @property 像访问属性一样的访问类方法,且约束访问权限"></a>6. @property 像访问属性一样的访问类方法,且约束访问权限</h1><h2 id="6-1-属性无法被保护，且没有参数检测"><a href="#6-1-属性无法被保护，且没有参数检测" class="headerlink" title="6.1. 属性无法被保护，且没有参数检测"></a>6.1. 属性无法被保护，且没有参数检测</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Screen</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, width, height</span>):</span></span><br><span class="line">        self._width = width</span><br><span class="line">        self._height = height</span><br><span class="line">        self.resolution = self._width * self._height</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = Screen(<span class="number">1024</span>,<span class="number">768</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s._width</span><br><span class="line"><span class="number">1024</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.resolution</span><br><span class="line"><span class="number">786432</span></span><br></pre></td></tr></table></figure>

<h2 id="6-2-属性被保护了-但是访问属性的方式变了-–-Method"><a href="#6-2-属性被保护了-但是访问属性的方式变了-–-Method" class="headerlink" title="6.2. 属性被保护了,但是访问属性的方式变了 – Method"></a>6.2. 属性被保护了,但是访问属性的方式变了 – Method</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Screen</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, width, height</span>):</span></span><br><span class="line">        self.__width = width</span><br><span class="line">        self.__height = height</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_width</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.__width</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_width</span>(<span class="params">self, value</span>):</span></span><br><span class="line">        <span class="keyword">if</span> value &lt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">&#x27;the value of width is wrong&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.__width = value</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_height</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.__height</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_height</span>(<span class="params">self, value</span>):</span></span><br><span class="line">        <span class="keyword">if</span> value &lt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">&#x27;the value of height is wrong&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.__height = value</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">resolution</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.__width * self.__height</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = Screen(<span class="number">1024</span>, <span class="number">786</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.get_width()</span><br><span class="line"><span class="number">1024</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.set_width(<span class="number">1080</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.get_width()</span><br><span class="line"><span class="number">1080</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.resolution()</span><br><span class="line"><span class="number">848880</span></span><br></pre></td></tr></table></figure>

<h2 id="6-3-利用property"><a href="#6-3-利用property" class="headerlink" title="6.3. 利用property"></a>6.3. 利用property</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding : utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Screen</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, width, height</span>):</span></span><br><span class="line">        self.__width = width</span><br><span class="line">        self.__height = height</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property #getter方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">width</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.__width</span><br><span class="line"></span><br><span class="line"><span class="meta">    @width.setter #setter方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">width</span>(<span class="params">self, value</span>):</span></span><br><span class="line">        <span class="keyword">if</span> value &lt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">&#x27;the value of width is wrong&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.__width = value</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_height</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.__height</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_height</span>(<span class="params">self, value</span>):</span></span><br><span class="line">        <span class="keyword">if</span> value &lt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">&#x27;the value of height is wrong&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.__height = value</span><br><span class="line"></span><br><span class="line">    height = property(fget=get_height, fset=set_height) <span class="comment">#利用了property类的原型, 这样也不用修改函数名了</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">resolution</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.__width * self.__height</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = Screen(<span class="number">1024</span>, <span class="number">768</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.width</span><br><span class="line"><span class="number">1024</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.height</span><br><span class="line"><span class="number">768</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.width = <span class="number">1080</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.resolution</span><br><span class="line"><span class="number">829440</span></span><br></pre></td></tr></table></figure>

<h2 id="6-4-property类原型"><a href="#6-4-property类原型" class="headerlink" title="6.4. property类原型"></a>6.4. property类原型</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, fget=None, fset=None, fdel=None, doc=None</span>)</span></span><br></pre></td></tr></table></figure>

<h1 id="7-多重继承与MixIn设计"><a href="#7-多重继承与MixIn设计" class="headerlink" title="7. 多重继承与MixIn设计"></a>7. 多重继承与MixIn设计</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding : utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Transportation</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Public</span>(<span class="params">Transportation</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Private</span>(<span class="params">Transportation</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RoadMixIn</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">road</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;On the road&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SeaMixIn</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sea</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;On the sea&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SkyMixIn</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sky</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;In the sky&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bus</span>(<span class="params">Public, RoadMixIn</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span>(<span class="params">Private, RoadMixIn</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Airplane</span>(<span class="params">Public, SkyMixIn</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Steamship</span>(<span class="params">Public, SeaMixIn</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c = Car()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c.road()</span><br><span class="line">On the road</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = Airplane()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.sky()</span><br><span class="line">In the sky</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = Steamship()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.sea()</span><br><span class="line">On the sea</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#实际应用</span></span><br><span class="line">(<span class="number">1</span>).多进程TCP服务</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyTCPServer</span>(<span class="params">TCPServer, ForkingMixIn</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">(<span class="number">2</span>).多线程UDP服务</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyUDPServer</span>(<span class="params">UDPServer, ThreadingMixIn</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>

<h1 id="8-定制类"><a href="#8-定制类" class="headerlink" title="8. 定制类"></a>8. 定制类</h1><h2 id="8-1-str-与-repr-描述对象信息"><a href="#8-1-str-与-repr-描述对象信息" class="headerlink" title="8.1.  str 与 repr 描述对象信息"></a>8.1.  <strong>str</strong> 与 <strong>repr</strong> 描述对象信息</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#__str__  : 强调可读性,结果是让人看的</span></span><br><span class="line"><span class="comment">#__repr__ : 强调准确性,结果是让解释器用的. (默认内置类型)</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> datetime</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>today = datetime.datetime.now()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>today</span><br><span class="line">datetime.datetime(<span class="number">2020</span>, <span class="number">5</span>, <span class="number">19</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">161591</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>repr(today)</span><br><span class="line"><span class="string">&#x27;datetime.datetime(2020, 5, 19, 11, 9, 14, 161591)&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str(today)</span><br><span class="line"><span class="string">&#x27;2020-05-19 11:09:14.161591&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#__str__</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str(<span class="string">&#x27;4&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;4&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;4&#x27;</span>.__str__()</span><br><span class="line"><span class="string">&#x27;4&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str(<span class="number">4</span>)</span><br><span class="line"><span class="string">&#x27;4&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#__repr__</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>repr(<span class="string">&#x27;4&#x27;</span>)</span><br><span class="line"><span class="string">&quot;&#x27;4&#x27;&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;4&#x27;</span>.__repr__()</span><br><span class="line"><span class="string">&quot;&#x27;4&#x27;&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>repr(<span class="number">4</span>)</span><br><span class="line"><span class="string">&#x27;4&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#关系</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str(<span class="number">4</span>) == repr(<span class="number">4</span>) <span class="comment">#整数的返回值是一致的</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str(<span class="string">&#x27;4&#x27;</span>) == repr(<span class="string">&#x27;4&#x27;</span>) <span class="comment">#字符串的返回值不同</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#原始状态</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Student</span>(<span class="params">object</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line"><span class="meta">... </span>        self.name = name</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = Student(<span class="string">&#x27;Mike&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&lt;__main__.Student object at <span class="number">0x10281ba50</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(s)</span><br><span class="line">&lt;__main__.Student object at <span class="number">0x10281ba50</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#重写了__str__后,在调用print函数时生效</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Student</span>(<span class="params">object</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line"><span class="meta">... </span>        self.name = name</span><br><span class="line">...</span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>        <span class="keyword">return</span> <span class="string">&#x27;Student object (name: %s)&#x27;</span> % self.name</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = Student(<span class="string">&#x27;Mike&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&lt;__main__.Student object at <span class="number">0x102831250</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(s)</span><br><span class="line">Student object (name: Mike)</span><br><span class="line"></span><br><span class="line"><span class="comment">#重写了__repr__后, 交互模式和print函数均生效</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Student</span>(<span class="params">object</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line"><span class="meta">... </span>        self.name = name</span><br><span class="line">...</span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>        <span class="keyword">return</span> <span class="string">&#x27;Student object (name: %s)&#x27;</span> % self.name</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = Student(<span class="string">&#x27;Mike&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">Student object (name: Mike)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(s)</span><br><span class="line">Student object (name: Mike)</span><br></pre></td></tr></table></figure>

<h2 id="8-2-iter"><a href="#8-2-iter" class="headerlink" title="8.2. iter"></a>8.2. <strong>iter</strong></h2><blockquote>
<p>如果一个类想被用于for循环就必须实现一个<strong>iter</strong>()方法，该方法返回一个迭代对象，for循环会不断的调用该迭代对象的<strong>next</strong>()方法，直到遇到StopIteration退出。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Fib</span>(<span class="params">object</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>        self.a = <span class="number">0</span></span><br><span class="line"><span class="meta">... </span>        self.b = <span class="number">1</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>        <span class="keyword">return</span> self</span><br><span class="line">...</span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__next__</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>        self.a, self.b = self.b, self.a + self.b</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">if</span> self.a &gt; <span class="number">100</span>:</span><br><span class="line"><span class="meta">... </span>            <span class="keyword">raise</span> StopIteration()</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">return</span> self.a</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = Fib()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f</span><br><span class="line">&lt;__main__.Fib object at <span class="number">0x10bd40b50</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(f)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">__main__</span>.<span class="title">Fib</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">for</span> <span class="title">i</span> <span class="title">in</span> <span class="title">f</span>:</span></span><br><span class="line"><span class="meta">... </span>    print(i)</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">13</span></span><br><span class="line"><span class="number">21</span></span><br><span class="line"><span class="number">34</span></span><br><span class="line"><span class="number">55</span></span><br><span class="line"><span class="number">89</span></span><br></pre></td></tr></table></figure>

<h2 id="8-3-getitem"><a href="#8-3-getitem" class="headerlink" title="8.3. getitem"></a>8.3. <strong>getitem</strong></h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#通过__iter__()实现的例子虽然能用于for循环，但是却无法像List一样的使用</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Fib()[<span class="number">3</span>]</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: <span class="string">&#x27;Fib&#x27;</span> object <span class="keyword">is</span> <span class="keyword">not</span> subscriptable</span><br><span class="line"></span><br><span class="line"><span class="comment">#__getitem__()</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Fib</span>(<span class="params">object</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__getitem__</span>(<span class="params">self, n</span>):</span></span><br><span class="line"><span class="meta">... </span>        a, b = <span class="number">1</span>, <span class="number">1</span></span><br><span class="line"><span class="meta">... </span>        <span class="keyword">for</span> x <span class="keyword">in</span> range(n):</span><br><span class="line"><span class="meta">... </span>            a, b = b, a + b</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">return</span> a</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Fib()[<span class="number">3</span>]</span><br><span class="line"><span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果想在类中实现List,dict,tuple等,可以重写__getitem__、__setitem__、__delitem__</span></span><br></pre></td></tr></table></figure>

<h2 id="8-4-getattr"><a href="#8-4-getattr" class="headerlink" title="8.4. getattr"></a>8.4. <strong>getattr</strong></h2><blockquote>
<p>可以用于把一个类的属性和方法动态化处理</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#如果找不到类属性or类方法, 则会去__getattr__中寻找; 因此加了判断。通过这种方法来实现动态。</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Student</span>(<span class="params">object</span>):</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>        self.name = <span class="string">&#x27;Michael&#x27;</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__getattr__</span>(<span class="params">self, attr</span>):</span></span><br><span class="line"><span class="meta">... </span>        <span class="keyword">if</span> attr == <span class="string">&#x27;score&#x27;</span>:</span><br><span class="line"><span class="meta">... </span>            <span class="keyword">return</span> <span class="number">100</span></span><br><span class="line"><span class="meta">... </span>        <span class="keyword">raise</span> AttributeError(<span class="string">&#x27;\&#x27;Student\&#x27; object has no attribute \&#x27;%s\&#x27;&#x27;</span> % attr)</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = Student()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.name</span><br><span class="line"><span class="string">&#x27;Michael&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.score</span><br><span class="line"><span class="number">100</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.age</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">9</span>, <span class="keyword">in</span> __getattr__</span><br><span class="line">AttributeError: <span class="string">&#x27;Student&#x27;</span> object has no attribute <span class="string">&#x27;age&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#链式调用: REST API; 这样就不需要给每一个URL的API都写一个方法了</span></span><br><span class="line"><span class="comment">#Eg. http://api.server/user/timeline/list</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chain</span>(<span class="params">object</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, path=<span class="string">&#x27;&#x27;</span></span>):</span></span><br><span class="line">        self._path = path</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getattr__</span>(<span class="params">self, path</span>):</span></span><br><span class="line">        <span class="keyword">return</span> Chain(<span class="string">&#x27;%s/%s&#x27;</span> % (self._path, path))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self._path</span><br><span class="line"></span><br><span class="line">    __repr__ = __str__</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(Chain().status.user.timeline.list)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">/status/user/timeline/list</span><br></pre></td></tr></table></figure>

<h2 id="8-5-call-实现类实例本身的调用"><a href="#8-5-call-实现类实例本身的调用" class="headerlink" title="8.5. call 实现类实例本身的调用"></a>8.5. <strong>call</strong> 实现类实例本身的调用</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Student</span>(<span class="params">object</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line"><span class="meta">... </span>        self.name = name</span><br><span class="line">...</span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>        print(<span class="string">&#x27;My name is %s.&#x27;</span> % self.name)</span><br><span class="line"><span class="meta">... </span>        </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = Student(<span class="string">&#x27;Mike&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s() <span class="comment">#像函数一样调用</span></span><br><span class="line">My name <span class="keyword">is</span> Mike.</span><br><span class="line"></span><br><span class="line"><span class="comment">#判断一个对象是否能被调用</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>callable(Student(<span class="string">&#x27;Mike&#x27;</span>))</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>callable(abs)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>callable([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>callable(<span class="string">&#x27;str&#x27;</span>)</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#实现 Chain().users(&#x27;michael&#x27;).repos的链式调用</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chain</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, path=<span class="string">&#x27;&#x27;</span></span>):</span></span><br><span class="line">       self.__path = path</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getattr__</span>(<span class="params">self, path</span>):</span></span><br><span class="line">       <span class="keyword">return</span> Chain(<span class="string">&#x27;%s/%s&#x27;</span> % (self.__path, path))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span>(<span class="params">self, path</span>):</span></span><br><span class="line">       <span class="keyword">return</span> Chain(<span class="string">&#x27;%s/%s&#x27;</span> % (self.__path, path))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">       <span class="keyword">return</span> self.__path</span><br><span class="line"></span><br><span class="line">    __repr__ = __str__</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(Chain().users(<span class="string">&#x27;michael&#x27;</span>).repos)</span><br></pre></td></tr></table></figure>

<h1 id="9-枚举类"><a href="#9-枚举类" class="headerlink" title="9. 枚举类"></a>9. 枚举类</h1><p>枚举类型可以看做是一种标签或一组常量集合，例如：月份、星期、状态等。<br>字典和类也可实现，但是存在几个问题:</p>
<ul>
<li>变量可更改</li>
<li>字符串所占内存比数字大<h2 id="9-1-使用枚举类"><a href="#9-1-使用枚举类" class="headerlink" title="9.1. 使用枚举类"></a>9.1. 使用枚举类</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用字典</span></span><br><span class="line">Week = &#123;</span><br><span class="line">    <span class="string">&#x27;Sun&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&#x27;Mon&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&#x27;Tue&#x27;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&#x27;Wed&#x27;</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="string">&#x27;Thu&#x27;</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="string">&#x27;Fri&#x27;</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="string">&#x27;Sat&#x27;</span>: <span class="number">6</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#使用类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Week</span>(<span class="params">object</span>):</span></span><br><span class="line">    Sun = <span class="number">0</span></span><br><span class="line">    Mon = <span class="number">1</span></span><br><span class="line">    Tue = <span class="number">2</span></span><br><span class="line">    Wed = <span class="number">3</span></span><br><span class="line">    Thu = <span class="number">4</span></span><br><span class="line">    Fri = <span class="number">5</span></span><br><span class="line">    Sat = <span class="number">6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用 枚举类</span></span><br><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum</span><br><span class="line"><span class="comment">#(1).方式一</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Week</span>(<span class="params">Enum</span>):</span></span><br><span class="line">    Sun = <span class="number">0</span></span><br><span class="line">    Mon = <span class="number">1</span></span><br><span class="line">    Tue = <span class="number">2</span></span><br><span class="line">    Wed = <span class="number">3</span></span><br><span class="line">    Thu = <span class="number">4</span></span><br><span class="line">    Fri = <span class="number">5</span></span><br><span class="line">    Sat = <span class="number">6</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> d <span class="keyword">in</span> Week:</span><br><span class="line">    print(d.name, <span class="string">&#x27;=&#x27;</span>, d.value)</span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">Sun = <span class="number">0</span></span><br><span class="line">Mon = <span class="number">1</span></span><br><span class="line">Tue = <span class="number">2</span></span><br><span class="line">Wed = <span class="number">3</span></span><br><span class="line">Thu = <span class="number">4</span></span><br><span class="line">Fri = <span class="number">5</span></span><br><span class="line">Sat = <span class="number">6</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#(2).方式二</span></span><br><span class="line">Week = Enum(<span class="string">&#x27;Week&#x27;</span>, (<span class="string">&#x27;Sun&#x27;</span>, <span class="string">&#x27;Mon&#x27;</span>, <span class="string">&#x27;Tue&#x27;</span>, <span class="string">&#x27;Wed&#x27;</span>, <span class="string">&#x27;Thu&#x27;</span>, <span class="string">&#x27;Fri&#x27;</span>, <span class="string">&#x27;Sat&#x27;</span>))</span><br><span class="line"><span class="keyword">for</span> name, member <span class="keyword">in</span> Week.__members__.items():</span><br><span class="line">    print(name, <span class="string">&#x27;=&gt;&#x27;</span>, member, <span class="string">&#x27;,&#x27;</span>, member.value - <span class="number">1</span>)</span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">Sun =&gt; Week.Sun , 0</span><br><span class="line">Mon =&gt; Week.Mon , 1</span><br><span class="line">Tue =&gt; Week.Tue , 2</span><br><span class="line">Wed =&gt; Week.Wed , 3</span><br><span class="line">Thu =&gt; Week.Thu , 4</span><br><span class="line">Fri =&gt; Week.Fri , 5</span><br><span class="line">Sat =&gt; Week.Sat , 6</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="9-2-定义枚举类"><a href="#9-2-定义枚举类" class="headerlink" title="9.2. 定义枚举类"></a>9.2. 定义枚举类</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#成员名(key)不能重复</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Week</span>(<span class="params">Enum</span>):</span></span><br><span class="line">    Sun = <span class="number">0</span></span><br><span class="line">    Mon = <span class="number">1</span></span><br><span class="line">    Tue = <span class="number">2</span></span><br><span class="line">    Wed = <span class="number">3</span></span><br><span class="line">    Thu = <span class="number">4</span></span><br><span class="line">    Fri = <span class="number">5</span></span><br><span class="line">    Sat = <span class="number">6</span></span><br><span class="line">    Sun = <span class="number">10</span> <span class="comment">#Attempted to reuse key: &#x27;Sun&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#成员值(value)可以重复,但是相当于别名</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Week</span>(<span class="params">Enum</span>):</span></span><br><span class="line">    Sun = <span class="number">0</span></span><br><span class="line">    Mon = <span class="number">1</span></span><br><span class="line">    Tue = <span class="number">2</span></span><br><span class="line">    Wed = <span class="number">3</span></span><br><span class="line">    Thu = <span class="number">4</span></span><br><span class="line">    Fri = <span class="number">5</span></span><br><span class="line">    Sat = <span class="number">6</span></span><br><span class="line">    Hol = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Week.Sun)</span><br><span class="line">Week.Sun</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Week.Hol) <span class="comment">#相当于别名</span></span><br><span class="line">Week.Sun</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Week.Sun <span class="keyword">is</span> Week.Hol)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Week(<span class="number">0</span>)) <span class="comment">#虽然值一样，但只会显示第一个</span></span><br><span class="line">Week.Sun</span><br><span class="line"></span><br><span class="line"><span class="comment">#unique可使成员值(value)不可重复</span></span><br><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum, unique</span><br><span class="line"><span class="meta">@unique</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Week</span>(<span class="params">Enum</span>):</span></span><br><span class="line">    Sun = <span class="number">0</span></span><br><span class="line">    Mon = <span class="number">1</span></span><br><span class="line">    Tue = <span class="number">2</span></span><br><span class="line">    Wed = <span class="number">3</span></span><br><span class="line">    Thu = <span class="number">4</span></span><br><span class="line">    Fri = <span class="number">5</span></span><br><span class="line">    Sat = <span class="number">6</span></span><br><span class="line">    Hol = <span class="number">0</span> <span class="comment">#ValueError: duplicate values found in &lt;enum &#x27;Week&#x27;&gt;: Hol -&gt; Sun</span></span><br></pre></td></tr></table></figure>

<h2 id="9-3-枚举取值"><a href="#9-3-枚举取值" class="headerlink" title="9.3. 枚举取值"></a>9.3. 枚举取值</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#通过成员名</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Week.Sat)</span><br><span class="line">Week.Sat</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Week[<span class="string">&#x27;Sat&#x27;</span>])</span><br><span class="line">Week.Sat</span><br><span class="line"></span><br><span class="line"><span class="comment">#通过成员值</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Week(<span class="number">6</span>))</span><br><span class="line">Week.Sat</span><br><span class="line"></span><br><span class="line"><span class="comment">#成员均有name和value属性</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Week.Sat.name)</span><br><span class="line">Sat</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Week.Sat.value)</span><br><span class="line"><span class="number">6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#遍历</span></span><br><span class="line"><span class="comment">#(1).直接遍历,如果有重复值成员,则只显示第一个</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> d <span class="keyword">in</span> Week:</span><br><span class="line"><span class="meta">... </span>    print(d)</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line">Week.Sun</span><br><span class="line">Week.Mon</span><br><span class="line">Week.Tue</span><br><span class="line">Week.Wed</span><br><span class="line">Week.Thu</span><br><span class="line">Week.Fri</span><br><span class="line">Week.Sat</span><br><span class="line"><span class="comment">#(2).__members__ 特殊属性，是一个将名称映射到成员的有序字典，显示全部成员</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> d <span class="keyword">in</span> Week.__members__.items():</span><br><span class="line"><span class="meta">... </span>    print(d)</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line">(<span class="string">&#x27;Sun&#x27;</span>, &lt;Week.Sun: <span class="number">0</span>&gt;)</span><br><span class="line">(<span class="string">&#x27;Mon&#x27;</span>, &lt;Week.Mon: <span class="number">1</span>&gt;)</span><br><span class="line">(<span class="string">&#x27;Tue&#x27;</span>, &lt;Week.Tue: <span class="number">2</span>&gt;)</span><br><span class="line">(<span class="string">&#x27;Wed&#x27;</span>, &lt;Week.Wed: <span class="number">3</span>&gt;)</span><br><span class="line">(<span class="string">&#x27;Thu&#x27;</span>, &lt;Week.Thu: <span class="number">4</span>&gt;)</span><br><span class="line">(<span class="string">&#x27;Fri&#x27;</span>, &lt;Week.Fri: <span class="number">5</span>&gt;)</span><br><span class="line">(<span class="string">&#x27;Sat&#x27;</span>, &lt;Week.Sat: <span class="number">6</span>&gt;)</span><br><span class="line">(<span class="string">&#x27;Hol&#x27;</span>, &lt;Week.Sun: <span class="number">0</span>&gt;) <span class="comment">#重复值成员在此</span></span><br></pre></td></tr></table></figure>

<h2 id="9-4-枚举比较"><a href="#9-4-枚举比较" class="headerlink" title="9.4. 枚举比较"></a>9.4. 枚举比较</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#is: 同一性比较</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Week.Sun <span class="keyword">is</span> Week.Hol</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Week.Sun <span class="keyword">is</span> Week.Sat</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#==: 等值比较</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Week.Sun == Week.Hol</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Week.Sun != Week.Sat</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#大小比较</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Week.Sun &lt; Week.Sat</span><br><span class="line">TypeError: <span class="string">&#x27;&lt;&#x27;</span> <span class="keyword">not</span> supported between instances of <span class="string">&#x27;Week&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;Week&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="9-5-IntEnum，扩展类，支持比较"><a href="#9-5-IntEnum，扩展类，支持比较" class="headerlink" title="9.5. IntEnum，扩展类，支持比较"></a>9.5. IntEnum，扩展类，支持比较</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> enum <span class="keyword">import</span> IntEnum</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Week</span>(<span class="params">IntEnum</span>):</span></span><br><span class="line"><span class="meta">... </span>    Sun = <span class="number">0</span></span><br><span class="line"><span class="meta">... </span>    Mon = <span class="number">1</span></span><br><span class="line"><span class="meta">... </span>    Tue = <span class="number">2</span></span><br><span class="line"><span class="meta">... </span>    Wed = <span class="number">3</span></span><br><span class="line"><span class="meta">... </span>    Thu = <span class="number">4</span></span><br><span class="line"><span class="meta">... </span>    Fri = <span class="number">5</span></span><br><span class="line"><span class="meta">... </span>    Sat = <span class="number">6</span></span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Week.Sun &lt; Week.Sat</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>

<h2 id="10-元类"><a href="#10-元类" class="headerlink" title="10. 元类"></a>10. 元类</h2><p>ToDo</p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>Computer Science</category>
      </categories>
      <tags>
        <tag>Python Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Theme 2 - Defining the Research Problem</title>
    <url>/2019/11/09/Theme-2-Defining-the-Research-Problem/</url>
    <content><![CDATA[<h1 id="1-Searching-for-sources"><a href="#1-Searching-for-sources" class="headerlink" title="1. Searching for sources"></a>1. Searching for sources</h1><h2 id="1-1-Academic-sources"><a href="#1-1-Academic-sources" class="headerlink" title="1.1. Academic sources"></a>1.1. Academic sources</h2><ul>
<li>Yes<ul>
<li>Books</li>
<li>Paper</li>
<li>Goverment website</li>
</ul>
</li>
<li>No<ul>
<li>Wikipedia</li>
<li>Newspaper</li>
</ul>
</li>
<li>Aim<ul>
<li>Make sense of what other researchers have done</li>
<li>Get a better sense of what you can do</li>
<li>Plus many things that you read will end up being sources for your final project</li>
</ul>
</li>
</ul>
<a id="more"></a>

<h2 id="1-2-Keywords"><a href="#1-2-Keywords" class="headerlink" title="1.2. Keywords"></a>1.2. Keywords</h2><blockquote>
<p>It’s pivotal to find keywords of your research before your searching</p>
</blockquote>
<ul>
<li>where to look<ul>
<li>General dictionaries</li>
<li>Subject dictionaries</li>
<li>Thesauruses</li>
<li>Encyclopaedias (print and electronic)</li>
<li>Theses in the library</li>
</ul>
</li>
</ul>
<h2 id="1-3-Search-engines"><a href="#1-3-Search-engines" class="headerlink" title="1.3. Search engines"></a>1.3. Search engines</h2><blockquote>
<p>Remember to refine your search to include/exclude dates, publication type, topic etc</p>
</blockquote>
<ul>
<li>NUsearch</li>
<li>Google Scholar</li>
<li>Google Books</li>
<li>JSTOR</li>
</ul>
<h2 id="1-4-The-search-process"><a href="#1-4-The-search-process" class="headerlink" title="1.4. The search process"></a>1.4. The search process</h2><ol>
<li>Decide on your key search terms</li>
<li>Search for possible sources linked to your topic</li>
<li>Screen papers,selecting only those which are relevant and of high quality</li>
<li>Check relevance by reading the Abstract</li>
<li>Repeat steps 1~4 multiple times, building up a bibliographic source list</li>
<li>Remember to change the scope/detail of review, depending on literature that appears during search</li>
</ol>
<h2 id="1-5-How-to-use-the-source-you-find"><a href="#1-5-How-to-use-the-source-you-find" class="headerlink" title="1.5. How to use the source you find ?"></a>1.5. How to use the source you find ?</h2><ul>
<li>Remember to make the most of your time with it!<ul>
<li>If the article has an abstract, read it first!</li>
<li>Highlight potential sources that might work for you</li>
</ul>
</li>
<li>Take careful notes <ul>
<li>Remember to write down the bibliographical information for your references</li>
<li>Write down any key words that you haven’t come across before</li>
</ul>
</li>
<li>Look at the author’s references</li>
</ul>
<h2 id="1-6-Developing-a-focus"><a href="#1-6-Developing-a-focus" class="headerlink" title="1.6. Developing a focus"></a>1.6. Developing a focus</h2><table>
<thead>
<tr>
<th>Topic</th>
<th align="center">Answer</th>
</tr>
</thead>
<tbody><tr>
<td><strong>Rationale</strong><br>Why is this topic important?<br>Who will it be important to?</td>
<td align="center">This is an important topic because…</td>
</tr>
<tr>
<td><strong>Aim</strong><br>What your research project hopes to achieve?</td>
<td align="center">This project aims to…</td>
</tr>
<tr>
<td><strong>Objectives</strong><br>How you will achieve your aim?</td>
<td align="center">To achieve this aim, my research will attempt to meet the following research objectives:</td>
</tr>
<tr>
<td><strong>Research question(s) / Hypothesis</strong><br> These are the questions you hope to answer. They are linked to your research objectives</td>
<td align="center">My research question(s) / hypothesis is…</td>
</tr>
</tbody></table>
<h2 id="1-7-Textbook-Reading"><a href="#1-7-Textbook-Reading" class="headerlink" title="1.7. Textbook Reading"></a>1.7. Textbook Reading</h2><ul>
<li>pp. 7 – 24</li>
</ul>
<h1 id="2-Reading-for-purpose"><a href="#2-Reading-for-purpose" class="headerlink" title="2. Reading for purpose"></a>2. Reading for purpose</h1><h2 id="2-1-How-can-you-make-reading-easier"><a href="#2-1-How-can-you-make-reading-easier" class="headerlink" title="2.1. How can you make reading easier?"></a>2.1. How can you make reading easier?</h2><blockquote>
<p>Two strategies which can help are skimming and scanning.</p>
</blockquote>
<h3 id="2-1-1-Skimming"><a href="#2-1-1-Skimming" class="headerlink" title="2.1.1. Skimming"></a>2.1.1. Skimming</h3><blockquote>
<p>Skimming is good for deciding which books, chapters, articles, etc. are relevant and useful for your purpose.</p>
</blockquote>
<h4 id="2-1-1-1-How-do-you-skim-read"><a href="#2-1-1-1-How-do-you-skim-read" class="headerlink" title="2.1.1.1. How do you skim read?"></a>2.1.1.1. How do you skim read?</h4><ul>
<li>Read the: title, subtitles and subheadings to find out what the text is about</li>
<li>Look at any illustrations to give you further information about the topic</li>
<li>Read the first and last sentence of each paragraph</li>
<li>Don’t read every word or every sentence</li>
<li>Let your eyes skim over the text</li>
<li>Take in key words</li>
<li>Continue to think about the meaning of the text</li>
</ul>
<h4 id="2-1-1-2-Skim-a-report"><a href="#2-1-1-2-Skim-a-report" class="headerlink" title="2.1.1.2. Skim a report"></a>2.1.1.2. Skim a report</h4><ul>
<li>Identify the key features of the text</li>
<li>Summarise the main points of the text</li>
</ul>
<h3 id="2-1-2-Scanning"><a href="#2-1-2-Scanning" class="headerlink" title="2.1.2. Scanning"></a>2.1.2. Scanning</h3><ul>
<li>Scanning is a time-saving technique</li>
<li>It is used when you want to find specific information from a source</li>
<li>When you scan, you will be looking for <strong>key words</strong><h4 id="2-1-2-1-How-do-you-scan"><a href="#2-1-2-1-How-do-you-scan" class="headerlink" title="2.1.2.1. How do you scan?"></a>2.1.2.1. How do you scan?</h4></li>
<li>Scanning is a fast reading technique</li>
<li>When reading for study, start by thinking of or writing down some questions that you want to answer</li>
<li>Don’t try to read every word. Let your eyes move quickly across the page until you find what you are looking for</li>
<li>Use clues on the page, such as headings and titles to guide you. These can focus your mind and help you find the facts or information that you need more easily</li>
</ul>
<h4 id="2-1-2-2-Scanning-a-report"><a href="#2-1-2-2-Scanning-a-report" class="headerlink" title="2.1.2.2. Scanning a report"></a>2.1.2.2. Scanning a report</h4><ul>
<li>What is the main idea of the text?</li>
<li>What aspects of the topic does the author consider?</li>
<li>What supporting evidence does the author give?</li>
<li>What ideas does the author have?</li>
</ul>
<h1 id="3-The-Working-Bibliography"><a href="#3-The-Working-Bibliography" class="headerlink" title="3. The Working Bibliography"></a>3. The Working Bibliography</h1><h2 id="3-1-The-Working-Bibliography"><a href="#3-1-The-Working-Bibliography" class="headerlink" title="3.1. The Working Bibliography"></a>3.1. The Working Bibliography</h2><blockquote>
<p>This is a detailed list of every source you’re planning to use at this stage of your project</p>
</blockquote>
<ul>
<li>Organisational skills are essential when conducting a piece of research</li>
<li>One important aspect is keeping a track of the sources you read</li>
</ul>
<h3 id="3-1-1-Bibliographic-information"><a href="#3-1-1-Bibliographic-information" class="headerlink" title="3.1.1. Bibliographic information"></a>3.1.1. Bibliographic information</h3><ul>
<li>author</li>
<li>date</li>
<li>title</li>
<li>journal</li>
<li>publisher</li>
<li>URLs</li>
<li>page numbers</li>
</ul>
<h3 id="3-1-2-Make-Notes"><a href="#3-1-2-Make-Notes" class="headerlink" title="3.1.2. Make Notes"></a>3.1.2. Make Notes</h3><ul>
<li>key ideas</li>
<li>arguments</li>
<li>your views and questions</li>
<li>how useful it is for your purpose</li>
</ul>
<h3 id="3-1-3-The-benefits-of-bibliography"><a href="#3-1-3-The-benefits-of-bibliography" class="headerlink" title="3.1.3. The benefits of bibliography"></a>3.1.3. The benefits of bibliography</h3><ul>
<li>Helps you keep a clear record of what you have read</li>
<li>Helps you to identify key topics, themes and questions that arise from your reading</li>
<li>Allows you to easily locate texts again</li>
<li>Allows you to create a reference list quickly</li>
<li>Saves you time in the long run!</li>
</ul>
<h2 id="3-2-Plagiarism"><a href="#3-2-Plagiarism" class="headerlink" title="3.2. Plagiarism"></a>3.2. Plagiarism</h2><blockquote>
<p>Plagiarism is using the ideas and work of others without acknowledgement</p>
</blockquote>
<h3 id="3-2-1-What-sources-does-Plagiarism-include"><a href="#3-2-1-What-sources-does-Plagiarism-include" class="headerlink" title="3.2.1. What sources does Plagiarism include ?"></a>3.2.1. What sources does Plagiarism include ?</h3><ul>
<li>Written information</li>
<li>Pictures/images/maps</li>
<li>Tables and figures</li>
<li>A radio broadcast or a lecture</li>
</ul>
<h3 id="3-2-2-How-to-avoid-Plagiarism"><a href="#3-2-2-How-to-avoid-Plagiarism" class="headerlink" title="3.2.2. How to avoid Plagiarism"></a>3.2.2. How to avoid Plagiarism</h3><ul>
<li>Cite your sources</li>
<li>Paraphrase, summarise and use direct quotes</li>
<li>Check your understanding of plagiarism</li>
</ul>
<h1 id="4-Refining-the-research-problem"><a href="#4-Refining-the-research-problem" class="headerlink" title="4. Refining the research problem"></a>4. Refining the research problem</h1><h2 id="4-1-Research-topic-and-problem"><a href="#4-1-Research-topic-and-problem" class="headerlink" title="4.1. Research topic and problem"></a>4.1. Research topic and problem</h2><ul>
<li>A general area or topic that you are interested in researching.</li>
<li>The research problem is the issue, problem or gap in knowledge you wish to explore.</li>
<li>You must explain why the problem is interesting to you, why it is worth researching and define what will be investigated.</li>
</ul>
<h2 id="4-2-Research-objectives"><a href="#4-2-Research-objectives" class="headerlink" title="4.2. Research objectives"></a>4.2. Research objectives</h2><blockquote>
<p>What it is you want to achieve from your research.</p>
</blockquote>
<ul>
<li>General research objectives : A broad statement about what your research intends to achieve (its goals)</li>
<li>Specific research objectives : Detailed statements about what will be researched during the project</li>
</ul>
<h2 id="4-3-What-is-a-working-title"><a href="#4-3-What-is-a-working-title" class="headerlink" title="4.3. What is a working title?"></a>4.3. What is a working title?</h2><p>An initial title that you have thought of to help establish a focus for your research.</p>
<h2 id="4-4-What-is-a-research-question"><a href="#4-4-What-is-a-research-question" class="headerlink" title="4.4 What is a research question?"></a>4.4 What is a research question?</h2><p>A research question is a question you seek to answer through conducting research.</p>
<h2 id="4-5-What-is-a-‘good’-research-question"><a href="#4-5-What-is-a-‘good’-research-question" class="headerlink" title="4.5. What is a ‘good’ research question?"></a>4.5. What is a ‘good’ research question?</h2><ol>
<li>Firstly, it must be answerable<ul>
<li>The concepts must be distinct and testable</li>
</ul>
</li>
<li>Secondly, it should be clear<ul>
<li>Its meaning must be explicit</li>
</ul>
</li>
<li>Thirdly, it should have theoretical significance or practical relevance<ul>
<li>Will the research question generate new information/ understanding about the topic</li>
</ul>
</li>
</ol>
<h2 id="4-6-Question-your-research-question"><a href="#4-6-Question-your-research-question" class="headerlink" title="4.6. Question your research question"></a>4.6. Question your research question</h2><ul>
<li>Do you have enough time and resources to investigate the question thoroughly?</li>
<li>Will you be able to collect enough information for an in-depth discussion of the topic?</li>
<li>Can the topic be further divided into a reasonable number of sub-topics?</li>
<li>Are all the keywords, concepts, and variables involved precisely defined?</li>
<li>Can the results of the research be applied to any other situation, or are they limited to the situation you have studied?</li>
</ul>
<h2 id="4-7-What-is-Rationale"><a href="#4-7-What-is-Rationale" class="headerlink" title="4.7. What is Rationale ?"></a>4.7. What is Rationale ?</h2><blockquote>
<p>The reason and justification behind our research</p>
</blockquote>
<ul>
<li>It establishes the importance of the topic.</li>
<li>It creates reader interest.</li>
<li>It focuses the reader’s attention on how the study will add to the existing literature.</li>
</ul>
<h1 id="5-Critical-reading"><a href="#5-Critical-reading" class="headerlink" title="5. Critical reading"></a>5. Critical reading</h1><h2 id="5-1-What-is-critical-thinking"><a href="#5-1-What-is-critical-thinking" class="headerlink" title="5.1. What is critical thinking?"></a>5.1. What is critical thinking?</h2><p>A way of looking at the relationship between claims. (Statements that assert that something is a fact or truth. Claims need not be true, though we normally take it that they are)</p>
<ul>
<li>Claims can be<ul>
<li>Evidence from research</li>
<li>Historical evidence</li>
<li>Predictions</li>
</ul>
</li>
</ul>
<h2 id="5-2-Five-activities-in-critical-thinking"><a href="#5-2-Five-activities-in-critical-thinking" class="headerlink" title="5.2. Five activities in critical thinking"></a>5.2. Five activities in critical thinking</h2><ul>
<li><strong>Thinking Actively</strong> by using our intelligence, knowledge, and skills to question, explore, and deal effectively with ourselves, others, and life’s situations.</li>
<li><strong>Carefully Exploring Situations</strong> by asking-and trying to answer–relevant questions. </li>
<li><strong>Thinking for Yourself</strong> by carefully examining various ideas and arriving at our own thoughtful conclusions.</li>
<li><strong>Viewing Situations from Different Perspectives</strong> to develop an in-depth, comprehensive understanding.</li>
<li><strong>Supporting Diverse Perspectives with Reason and Evidence</strong> to arrive at thoughtful, well-substantiated conclusions.</li>
</ul>
<h2 id="5-3-How-to-become-a-critical-reader"><a href="#5-3-How-to-become-a-critical-reader" class="headerlink" title="5.3. How to become a critical reader ?"></a>5.3. How to become a critical reader ?</h2><ul>
<li>Before reading, consider your own interim position</li>
<li>Be open-minded. Be prepared to change your views after reading</li>
<li>Be both receptive and critical of an author’s views</li>
<li>Decide how far you agree/disagree with an author</li>
<li>Carefully consider the evidence presented by the author to support their case.</li>
</ul>
<h2 id="5-4-Reading-critically"><a href="#5-4-Reading-critically" class="headerlink" title="5.4. Reading critically"></a>5.4. Reading critically</h2><ul>
<li>looking for poor logic</li>
<li>identifying fact and opinion</li>
<li>identifying omission</li>
</ul>
<h2 id="5-5-Descriptive-and-analytical-writing"><a href="#5-5-Descriptive-and-analytical-writing" class="headerlink" title="5.5. Descriptive and analytical writing"></a>5.5. Descriptive and analytical writing</h2><table>
<thead>
<tr>
<th>Descriptive writing</th>
<th align="center">Analytical writing</th>
</tr>
</thead>
<tbody><tr>
<td>States what happened<br>States what something is like<br>Gives the story so far<br>States the order in which things happened<br>Says how to do something<br>Explains what a theory says<br>Explains how something works<br>Notes the method used<br>Says when something occurred<br>States the different components<br>States options<br>Lists details<br>States links between items</td>
<td align="center">Identifies the significance<br>Evaluates the strengths and weaknesses<br>Weighs one piece of information against another<br>Makes reasoned judgements<br>Argues a case according to the evidence<br>Shows why something is relevant or suitable<br>Indicates why something will work best<br>Identifies whether something is appropriate or suitable<br>Identifies why the timing is of importance<br>Weighs up the importance of component parts<br>Gives reasons for selecting each option<br>Evaluates the relative significance of details<br>Structures information in order of importance<br>Shows the relevance of links between pieces of information</td>
</tr>
</tbody></table>
<ul>
<li>Descriptive writing : Provides information</li>
<li>Analytical writing : Uses information to draw conclusions<ul>
<li>Essay</li>
<li>Literature review</li>
<li>Annotated bibliography</li>
<li>Critique</li>
</ul>
</li>
</ul>
<h2 id="5-6-Critical-writing"><a href="#5-6-Critical-writing" class="headerlink" title="5.6. Critical writing"></a>5.6. Critical writing</h2><div class="video-container"><iframe src="https://www.youtube.com/embed/btUY6jTt2Ys" frameborder="0" loading="lazy" allowfullscreen></iframe></div>
<hr>
<h2 id="5-7-The-SQ3R-Method"><a href="#5-7-The-SQ3R-Method" class="headerlink" title="5.7. The SQ3R Method"></a>5.7. The SQ3R Method</h2><ul>
<li>Survey<ul>
<li>Title page</li>
<li>Table of contents</li>
<li>Preface</li>
<li>Index</li>
<li>Bibliography</li>
<li>Glossary</li>
<li>Appendices</li>
<li>Leaf through the book/article</li>
<li>First and last chapters</li>
<li>Surveying a chapter</li>
</ul>
</li>
<li>Question : Never start detailed reading until you have some clear questions requiring an answer.</li>
<li>Read : Reading in detail</li>
<li>Recall<ul>
<li>Depending on the text, try to recall the key points made by each paragraph within a section, preferably in your own words.</li>
<li>Jot down the key words.</li>
<li>It can be useful to try and recall the main explanatory sentence in each paragraph.</li>
</ul>
</li>
<li>Review : Always check the accuracy of what you recall by viewing again the material you have studied.</li>
</ul>
<h2 id="5-8-Thinking-critically"><a href="#5-8-Thinking-critically" class="headerlink" title="5.8. Thinking critically"></a>5.8. Thinking critically</h2><ul>
<li>How does the item relate to others you have read?</li>
<li>Are there any apparent strengths and deficiencies - perhaps in terms of methodology or in terms of the credibility of the conclusions drawn?</li>
<li>What theoretical ideas have influenced the item</li>
</ul>
<h1 id="6-Research-approaches-and-design"><a href="#6-Research-approaches-and-design" class="headerlink" title="6. Research approaches and design"></a>6. Research approaches and design</h1><h2 id="6-1-The-Research-Onion"><a href="#6-1-The-Research-Onion" class="headerlink" title="6.1. The Research Onion"></a>6.1. The Research Onion</h2><blockquote>
<p>The ‘Research Onion’ was developed by Saunders et al. It helps to illustrate the philosophical and theoretical issues relating to the development of knowledge that underpin the methods that can be used to collect and analyse data.</p>
</blockquote>
<p><img src="ResearchOnion.jpg" alt="The Research Onion"></p>
<ul>
<li>Layer 1 Research philosophy</li>
<li>Layer 2 Research approach</li>
<li>Layer 3 Methodological approach</li>
<li>Layer 4 Research strategy</li>
<li>Layer 5 Time horizon</li>
<li>Layer 6 Data collection and analysis</li>
</ul>
<h2 id="6-2-Layer-1-Research-philosophy"><a href="#6-2-Layer-1-Research-philosophy" class="headerlink" title="6.2. Layer 1 Research philosophy"></a>6.2. Layer 1 Research philosophy</h2><ul>
<li>There are different research philosophies with their own beliefs and assumptions about how we seek and use knowledge.<ul>
<li>Positivism</li>
<li>Critical</li>
<li>Realism</li>
<li>Interpretivism</li>
<li>Post-modernism</li>
<li>Pragmatism</li>
</ul>
</li>
<li>Each research philosophy will lead you to a <strong>certain type of research</strong> with its own goals. It will also <strong>lead you to different methodologies</strong> to achieve those goals.</li>
</ul>
<h3 id="6-2-1-Why-is-it-important-to-understand-the-different-research-philosophies"><a href="#6-2-1-Why-is-it-important-to-understand-the-different-research-philosophies" class="headerlink" title="6.2.1. Why is it important to understand the different research philosophies?"></a>6.2.1. Why is it important to understand the different research philosophies?</h3><ol>
<li>Each philosophy makes assumptions about knowledge that will guide your research and lead you to use certain research methods e.g. interviews or questionnaires. This should result in a coherent piece of research.</li>
<li>As a researcher, you need to select an appropriate research philosophy to underpin your work and be aware of its strengths and weaknesses.</li>
<li>It is important for a researcher to be able to explain philosophically why they made the choices they did when planning their research.</li>
</ol>
<h3 id="6-2-2-Research-philosophies-can-be-distinguished-by-three-different-types-of-assumption"><a href="#6-2-2-Research-philosophies-can-be-distinguished-by-three-different-types-of-assumption" class="headerlink" title="6.2.2. Research philosophies can be distinguished by three different types of assumption."></a>6.2.2. Research philosophies can be distinguished by three different types of assumption.</h3><ul>
<li><strong>Ontology</strong>: “Assumptions about the nature of reality”<ul>
<li>e.g. What is the world like? What is it like being a manager?</li>
</ul>
</li>
<li><strong>Epistemology</strong>: “Assumptions about knowledge”<ul>
<li>e.g. How can we know what we know? What is acceptable knowledge?</li>
</ul>
</li>
<li><strong>Axiology</strong>: Considers the role of values and ethics within the research process.<ul>
<li>e.g. How to deal with our own and participants’ values</li>
</ul>
</li>
</ul>
<h3 id="6-2-3-Positivism"><a href="#6-2-3-Positivism" class="headerlink" title="6.2.3. Positivism"></a>6.2.3. Positivism</h3><p>“as an approach to social science develops from the traditions of the natural sciences. It is based on an ontological assumption that the world is governed by a series of rules and laws and an associated epistemological position that these rules can be tested and understood through experiments. Such a position therefore favours <strong><em>quantitative methods</em></strong>, as these are seen to be <strong><em>objective</em></strong>, and the results generalizable.”</p>
<ul>
<li>Textbook Reading: PP.108~110</li>
</ul>
<h3 id="6-2-4-Interpretivism"><a href="#6-2-4-Interpretivism" class="headerlink" title="6.2.4. Interpretivism"></a>6.2.4. Interpretivism</h3><p>“is based on an ontological assumption that there is no objective reality – no singular way of understanding the world. Instead, reality is seen as <strong><em>subjective</em></strong>, with people having varied experiences and perspectives, and thus interpretations of the social world. In order to understand the social world, we therefore need to understand and explain these varying experiences and perspectives. It follows, then, that we should adopt <strong><em>qualitative methods</em></strong> so as to understand the rich and complex lives and opinions of the people we are researching.”</p>
<ul>
<li>Textbook Reading: PP.110~111</li>
</ul>
<h2 id="6-3-Layer-2-Research-approaches"><a href="#6-3-Layer-2-Research-approaches" class="headerlink" title="6.3. Layer 2 Research approaches"></a>6.3. Layer 2 Research approaches</h2><blockquote>
<p>Research approaches refer to the relationship between theory and data.</p>
</blockquote>
<h3 id="6-3-1-Deduction-Testing-theory"><a href="#6-3-1-Deduction-Testing-theory" class="headerlink" title="6.3.1. Deduction: Testing theory"></a>6.3.1. Deduction: Testing theory</h3><blockquote>
<p>Deduction is often associated with <strong>quantitative research</strong></p>
</blockquote>
<ul>
<li>The researcher formulates a hypothesis on the basis of a set of theoretical ideas and tests them.</li>
<li>Data is used to evaluate hypotheses related to existing theory</li>
<li>Theory is verified (true) or falsified (untrue)</li>
<li>This approach is characterised as <strong>objective and ‘scientific’</strong></li>
<li>It is dominant within the sciences, but is also used within the social sciences</li>
</ul>
<h4 id="6-3-1-1-Deductive-reasoning"><a href="#6-3-1-1-Deductive-reasoning" class="headerlink" title="6.3.1.1. Deductive reasoning"></a>6.3.1.1. Deductive reasoning</h4><ul>
<li>Deductive reasoning works from the more general to the more specific<br><img src="deduction.png" alt="Deduction"></li>
</ul>
<h3 id="6-3-2-Inductive-Developing-theory-as-a-result-of-collecting-data"><a href="#6-3-2-Inductive-Developing-theory-as-a-result-of-collecting-data" class="headerlink" title="6.3.2. Inductive: Developing theory as a result of collecting data"></a>6.3.2. Inductive: Developing theory as a result of collecting data</h3><blockquote>
<p>Induction is often associated with <strong>qualitative research</strong></p>
</blockquote>
<ul>
<li>The researcher starts with people’s perceptions and uses these as the starting point for building theory</li>
<li>Data is used to explore phenomenon, identify themes and create concepts</li>
<li>Theory is <strong><em>generated and developed</em></strong></li>
<li>This approach is characterised as <strong><em>subjective</em></strong></li>
<li>It is dominant within the social sciences</li>
</ul>
<h4 id="6-3-2-1-Inductive-reasoning"><a href="#6-3-2-1-Inductive-reasoning" class="headerlink" title="6.3.2.1. Inductive reasoning"></a>6.3.2.1. Inductive reasoning</h4><blockquote>
<p>Inductive approaches move from specific observations to broader generalizations and theories</p>
</blockquote>
<p><img src="induction.png" alt="Induction"></p>
<h3 id="6-3-3-Further-understanding"><a href="#6-3-3-Further-understanding" class="headerlink" title="6.3.3. Further understanding"></a>6.3.3. Further understanding</h3><ul>
<li>Textbook Reading: PP. 125~127<div class="video-container"><iframe src="https://www.youtube.com/embed/QB41z6_mUxk" frameborder="0" loading="lazy" allowfullscreen></iframe></div>

</li>
</ul>
<h2 id="6-4-Layer-2-Methodological-choice"><a href="#6-4-Layer-2-Methodological-choice" class="headerlink" title="6.4. Layer 2 Methodological choice"></a>6.4. Layer 2 Methodological choice</h2><h3 id="6-4-1-Quantitative-vs-Qualitative"><a href="#6-4-1-Quantitative-vs-Qualitative" class="headerlink" title="6.4.1. Quantitative vs Qualitative"></a>6.4.1. Quantitative vs Qualitative</h3><table>
<thead>
<tr>
<th><strong>Quantitative</strong></th>
<th><strong>Qualitative</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Numbers<br>Singular truth<br>Point of view of researcher<br>Macro<br>Detached, objective researcher<br>Theory testing<br>Static<br>Structured<br>Hard, specific data<br>Facts<br>Eg. questionnaire and statistical analysis</td>
<td>Words<br>Multiple truths<br>Point of view of participants<br>Micro<br>Involved subjective researcher<br>Theory generation<br>Processual<br>Unstructured<br>Deep, contextual data<br>Meaning<br>Eg. interview and analysis of themes/categorie</td>
</tr>
</tbody></table>
<h3 id="6-4-2-Single-or-multiple-methods"><a href="#6-4-2-Single-or-multiple-methods" class="headerlink" title="6.4.2. Single or multiple methods"></a>6.4.2. Single or multiple methods</h3><ul>
<li><strong>Mono</strong> : method studies use a single method</li>
<li><strong>Multi</strong> : method studies use multiple quantitative or multiple qualitative methods</li>
<li><strong>Mixed</strong> : method studies use a combination of quantitative and qualitative methods<br><img src="MethodologicalChoice.png" alt="Methodological Choice"></li>
</ul>
<h2 id="6-5-Research-strategies"><a href="#6-5-Research-strategies" class="headerlink" title="6.5. Research strategies"></a>6.5. Research strategies</h2><blockquote>
<p>Research strategies refer to the different ways a researcher can answer their research question(s).</p>
</blockquote>
<ul>
<li><strong>Survey</strong></li>
<li><strong>Case study</strong></li>
<li><strong>Ethnography</strong></li>
<li>Experiment</li>
<li>Archival and documentary research</li>
<li>Action research</li>
<li>Grounded theory</li>
<li>Narrative inquiry</li>
</ul>
<h3 id="6-5-1-Survey"><a href="#6-5-1-Survey" class="headerlink" title="6.5.1. Survey"></a>6.5.1. Survey</h3><ul>
<li>The collection of <strong>quantitative</strong> data which are analysed using statistics.</li>
<li>Useful in testing relationships between variables.</li>
<li>Usually associated with <strong>deductive</strong> approach.</li>
<li>Usually used for <strong>exploratory</strong> and <strong>descriptive</strong> research (what/who/where/how much/how many questions).</li>
<li>Common strategy in business and management research.</li>
<li>Data collection techniques<ul>
<li>Questionnaires (often tick box questions)</li>
<li>Structured interviews (standardised questions asked of all participants)</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th><strong>Strengths</strong></th>
<th><strong>Weaknesses</strong></th>
</tr>
</thead>
<tbody><tr>
<td>1.Useful for collecting a lot of data<br>2.Viewed as ‘authoritative’</td>
<td>1.But data collected more likely to lack depth</td>
</tr>
</tbody></table>
<h3 id="6-5-2-Ethnography"><a href="#6-5-2-Ethnography" class="headerlink" title="6.5.2. Ethnography"></a>6.5.2. Ethnography</h3><ul>
<li>Ethnographic studies explore culture or social world of a group and people interact with each other</li>
<li>The collection of <strong>qualitative data</strong> which are analysed qualitatively (Eg. using coding or establishing themes)</li>
<li>Usually associated with <strong>inductive approach</strong></li>
<li>Usually used for <strong>exploratory</strong> and <strong>descriptive</strong> research</li>
<li>Common strategy within <strong>anthropology</strong>, less frequently adopted in business research</li>
<li>Data collection techniques<ul>
<li>Living with participants</li>
<li>Observing participants</li>
<li>Talking to participants</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th><strong>Strengths</strong></th>
<th><strong>Weaknesses</strong></th>
</tr>
</thead>
<tbody><tr>
<td>1.Useful for gaining deep insight into participants’ lives</td>
<td>1.Results can lack generalisability due to its focus on particular groups or cultures<br>2.Lacks objectivity as the researcher is highly involved</td>
</tr>
</tbody></table>
<h3 id="6-5-3-Case-study"><a href="#6-5-3-Case-study" class="headerlink" title="6.5.3. Case study"></a>6.5.3. Case study</h3><ul>
<li>Collection of <strong>quantitative and/or qualitative data</strong> in a real-life setting which can be analysed using statistics or qualitatively</li>
<li>Can be associated with <strong>either deductive or inductive</strong> approach</li>
<li>Can be used for <strong>exploratory, descriptive and explanatory research</strong> (addresses what, why and how questions)</li>
<li>Common strategy in <strong>business research</strong></li>
<li>Single and multiple case studies may be used</li>
<li>Data collection techniques<ul>
<li>Questionnaires</li>
<li>Interviews</li>
<li>Observations</li>
<li>Documentary analysis</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th><strong>Strengths</strong></th>
<th><strong>Weaknesses</strong></th>
</tr>
</thead>
<tbody><tr>
<td>1.Useful for collecting different types of data, gaining a rich understanding of context<br>2.Able to explore issues in depth</td>
<td>1.Results can lack generalisability (therefore may not be possible to apply to different settings)</td>
</tr>
</tbody></table>
<h2 id="6-6-Textbook-Reading"><a href="#6-6-Textbook-Reading" class="headerlink" title="6.6. Textbook Reading"></a>6.6. Textbook Reading</h2><ul>
<li>Critical reading: pp. 66-70</li>
<li>Quantitative and Qualitative research: pp. 119-120</li>
<li>Research design: pp. 121 – 133</li>
<li>Design frames: pp. 156 -166</li>
</ul>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>TUNIC</category>
      </categories>
      <tags>
        <tag>PM600 Research Project</tag>
      </tags>
  </entry>
  <entry>
    <title>Theme 8 - Data Collection</title>
    <url>/2020/01/27/Theme-8-Data-Collection/</url>
    <content><![CDATA[<h1 id="1-Data-Collection"><a href="#1-Data-Collection" class="headerlink" title="1. Data Collection"></a>1. Data Collection</h1><h2 id="1-1-Main-concept"><a href="#1-1-Main-concept" class="headerlink" title="1.1. Main concept"></a>1.1. Main concept</h2><ul>
<li><strong>credibility</strong>: the quality of being <strong>trusted and believed in</strong> (results are not made up, and its methods and results can be trusted)</li>
<li><strong>reliability</strong>: the extent to which <strong>findings are consistent</strong>; results are obtainable again under similar condition​s (same data would have been collected each time)</li>
<li><strong>validity</strong>: the extent to which a test measures or predicts <strong>what it is supposed to</strong> (the appropriateness/meaningfulness/usefulness of findings​)</li>
<li><strong>generalisability</strong>: whether findings are <strong>applicable</strong> to other research settings or organisations​</li>
<li><strong>trustworthiness</strong>: if research has credibility, transferability, dependability and confirmability</li>
<li><strong>authenticity</strong>: if research represents different viewpoints, helps <strong>improve the social setting</strong> and the understanding of others, and if it empowers members to engage in action<a id="more"></a></li>
<li>objectivity: personal <strong>neutrality</strong> in conducting research</li>
<li>rigour: activity of being careful and <strong>paying great attention</strong> to detail</li>
<li>measurement: the process of <strong>observing and recording</strong> the observations that are collected as part of a research effort</li>
<li>consistency: the quality of always being the same, doing things in the same way, having the same standards etc</li>
<li>yield: to produce a result, answer, or piece of information</li>
<li>research integrity: conducting research in a way which allows others to have trust and confidence in the methods used and the findings that result from this</li>
<li>maturation: when subjects change during the course of the experiment or between measurements</li>
<li>bias: a strong feeling in favour of or against one group of people, or one side in an argument, often not based on fair judgement</li>
<li>measurement (construct validity): the degree to which a test measures what it claims, or purports, to be measuring</li>
<li>internal validity: whether or not there is really a causal relationship between two variables</li>
<li>external validity: the extent to which the results of a study can be generalized to other situations and to other people</li>
<li>ecological validity: The extent to which a study is realistic or representative of real life.</li>
</ul>
<h2 id="1-2-Research-quality"><a href="#1-2-Research-quality" class="headerlink" title="1.2. Research quality"></a>1.2. Research quality</h2><blockquote>
<p>Research quality concerns the credibility of research.</p>
</blockquote>
<ul>
<li>How do we judge the results of the research?</li>
<li>How can we trust research findings?</li>
<li>How do we know the research has not been made up?</li>
<li>How do we know the research is capturing something about the phenomenon in question?</li>
</ul>
<h2 id="1-3-Research-credibility"><a href="#1-3-Research-credibility" class="headerlink" title="1.3. Research credibility"></a>1.3. Research credibility</h2><p>Research credibility is about making the research process <strong>transparent</strong>, explaining and justifying what you did and why - including <strong>research choices, decisions and procedures and processes</strong>. This ensures that you produce high quality research even if it reveals limited results. Traditional criteria derive from quantitative perspectives.</p>
<h1 id="2-Quantitative-Research"><a href="#2-Quantitative-Research" class="headerlink" title="2. Quantitative Research"></a>2. Quantitative Research</h1><h2 id="2-1-Traditional-criteria"><a href="#2-1-Traditional-criteria" class="headerlink" title="2.1. Traditional criteria"></a>2.1. Traditional criteria</h2><blockquote>
<p>These traditional measures of quality are primarily concerned with objectivity, rigour and measurement</p>
</blockquote>
<ul>
<li>Reliability</li>
<li>Validity</li>
<li>Generalisability</li>
</ul>
<h3 id="2-1-1-Reliability"><a href="#2-1-1-Reliability" class="headerlink" title="2.1.1. Reliability"></a>2.1.1. Reliability</h3><p>Reliability concerns the extent to which data collection and analysis techniques <strong>produce consistent findings</strong>. It implies that <strong>the same data</strong> would have been collected each time over repeated tests / observations.  </p>
<ol>
<li>How to assess reliability of your research?</li>
</ol>
<ul>
<li>Measures of reliability<ul>
<li><strong>Stability</strong>: Is the measure stable over time?</li>
<li><strong>Internal reliability</strong>: Are the indicators (kinds of measure) consistent?  Indicators must relate to the same thing, be coherent.</li>
<li><strong>Inter-observer consistency</strong>: Will similar observations be reached by other observers?</li>
</ul>
</li>
</ul>
<ol start="2">
<li>Threats to reliability</li>
</ol>
<ul>
<li>Participant error: any factor which influences the way in which a participant performs (e.g. emotional, physical)</li>
<li>Participant bias: any factor that causes a false response (participants say what they think the interviewer wants to hear)</li>
<li>Observer error: any factor that causes a false interpretation of the researcher (misunderstanding)</li>
<li>Observer bias: any factor that causes a false interpretation of the researcher (their own objective view)</li>
</ul>
<h3 id="2-1-2-Validity"><a href="#2-1-2-Validity" class="headerlink" title="2.1.2. Validity"></a>2.1.2. Validity</h3><ul>
<li>Validity is concerned with the <strong>integrity of the conclusions</strong> that are generated from a piece of research.</li>
<li>Validity refers to obtaining results that <strong>accurately reflect the concept being measured</strong> and it implies reliability (consistency)</li>
<li>A valid measure is one which <strong>is measuring what it is supposed to measure</strong>.</li>
</ul>
<ol>
<li>Four types of validity</li>
</ol>
<ul>
<li><strong>Measurement validity</strong> e.g. Does an IQ test really measure variations in intelligence?</li>
<li><strong>Internal validity</strong> e.g. if we suggest that x causes y, can we be sure that it is x that is responsible for the variation in y and not something else? (the principle of cause and effect)</li>
<li><strong>External validity</strong> e.g. can the results of a study be generalised beyond the specific research content? (the importance of choosing participants)</li>
<li><strong>Ecological validity</strong> e.g. are social scientific findings applicable in people’s everyday, natural social settings?</li>
</ul>
<ol start="2">
<li>Threats to (internal) validity</li>
</ol>
<ul>
<li><strong>Past or recent events</strong>: The influence of specific experiences</li>
<li><strong>Testing</strong>: The impact of testing on participant’s view or actions(having been exposed to the test before). For example, informing participants about a research project may later affect their work behaviour or responses during the research if they believe it might lead to future consequences for them</li>
<li><strong>Maturation</strong>: The impact of change in participants outside of the influence of the study that affects their attitudes and behaviour. For example, management training may make participants revise their responses during a subsequent research stage</li>
<li><strong>Ambiguity about causal direction</strong>: Lack of clarity about cause and effect</li>
<li><strong>Instrumentation</strong>: The impact of a change in a research instrument between different stages of the research affecting the comparability results</li>
<li><strong>Mortality</strong>: The impact of participants withdrawing form the studies.</li>
</ul>
<ol start="3">
<li>Example of Validity</li>
</ol>
<p><strong>The Hawthorne effect</strong>: The Hawthorne Effect describes the curious reality that humans under observation usually perform better than those who are unobserved.</p>
<h3 id="2-1-3-Generalisability"><a href="#2-1-3-Generalisability" class="headerlink" title="2.1.3. Generalisability"></a>2.1.3. Generalisability</h3><blockquote>
<p>Generalisability concerns the extent to which research results are applicable to other research settings and/or organisations</p>
</blockquote>
<ul>
<li>Can the findings be generalised to other contexts?</li>
<li>Can the findings be generalised from sample to population?  </li>
</ul>
<ol>
<li>Credibility in quantitative research</li>
</ol>
<ul>
<li>Establishing <strong>reliability</strong> and <strong>validity</strong> of measures, and <strong>generalisability of findings</strong> is important in terms of assessing the credibility of quantitative research.</li>
<li>Quantitative research should be capable of <strong>replication</strong>. Another researcher, in another place and at a different time, could <strong>repeat the methods and procedures</strong> used in order to verify the original findings in the new context.</li>
</ul>
<h1 id="3-Qualitative-Research"><a href="#3-Qualitative-Research" class="headerlink" title="3. Qualitative Research"></a>3. Qualitative Research</h1><h2 id="3-1-The-characteristic-of-qualitative-research"><a href="#3-1-The-characteristic-of-qualitative-research" class="headerlink" title="3.1. The characteristic of qualitative research"></a>3.1. The characteristic of qualitative research</h2><ul>
<li>Seeing through the eyes of those studied: how patterns of events unfold over time; social worlds characterised by change and flux</li>
<li>Description and emphasis on context: detailed account of the social setting; thick description of what is going on</li>
<li>Emphasis on social process</li>
<li>Flexibility and limited structure: no prior contamination by rigid schedules; sensitising concepts</li>
<li>Concepts and theories grounded in data</li>
<li>The development of concepts</li>
<li>Relationship between researcher and respondents</li>
</ul>
<h2 id="3-2-Credibility-in-qualitative-research"><a href="#3-2-Credibility-in-qualitative-research" class="headerlink" title="3.2. Credibility in qualitative research"></a>3.2. Credibility in qualitative research</h2><blockquote>
<p>Traditional criteria derive from quantitative perspectives and some qualitative researchers also apply these to their studies. Other qualitative researchers view traditional criteria as problematic.</p>
</blockquote>
<ul>
<li>Problems with reliability<ul>
<li>Qualitative research views reality as <strong>context bound</strong>: External reliability concerns the degree to which a study can be replicated. In qualitative research, social reality cannot be replicated, because reality is understood to be multiple, subjective and constructed. Qualitative research has an unstructured nature with no standard procedures. Qualitative researchers do not believe there are single accounts of particular aspects of the social world that can be replicated. They argue that developing multiple perspectives enhances our understanding with the social world by building a richer, more complex picture.</li>
<li><strong>Researcher</strong> is the main instrument: The purpose of internal reliability is to ensure uniformity and objectivity across researchers so that bias does not influence the findings. In qualitative research, however, the researchers is the main instrument of data collection and analysis. What the researcher observes, hears and decides to concentrate on is a produce of her/his perspective. So qualitative researchers recognises that findings are influenced by their own subjectivity/experience. As the researcher is the main instrument of data collection and analysis, influenced by personal experience, objectivity is not achievable. Researchers choose what areas to focus on, participant responses are likely to be affected by the characteristics of the researcher. Eg. age, gender, ethnicity, class, personality and the researcher’s interpretation will be affected by their subjective learning.</li>
</ul>
</li>
<li>Problems with generalisability: Generalisability is not appropriate because the research is concerned with <strong>context, detail and depth</strong>. Qualitative research tends to use <strong>case studies and small samples</strong>.  This criteria is not appropriate as the focus is on small numbers of individuals, organisations and settings.  It can be difficult to generalise from these small-scale studies. Generalisation is not an intention of qualitative research. The strength of qualitative research is the detailed, complex and rich picture it can build about a particular phenomenon.</li>
<li>Validity: validity tends to be a <strong>strength in qualitative research</strong> because there is a <strong>good match between researcher observations and theoretical ideas developed</strong>. This is particularly the case in <strong>ethnographic research</strong> because the research participates for a prolonged period in the social life of a group to ensure high levels of congruence between concepts and observations.</li>
</ul>
<h2 id="3-3-Attempts-to-address-the-problems"><a href="#3-3-Attempts-to-address-the-problems" class="headerlink" title="3.3. Attempts to address the problems"></a>3.3. Attempts to address the problems</h2><ul>
<li>Tensions between traditional criteria and qualitative preoccupations have resulted in <strong>ongoing debate</strong>.</li>
<li>Attention to developing <strong>appropriate criteria for measuring quality</strong> in qualitative research is <strong>limited</strong>.</li>
<li>Qualitative researchers have two choices:<ul>
<li>Reformulate traditional criteria</li>
<li>Apply alternative criteria</li>
</ul>
</li>
</ul>
<h3 id="3-3-1-Reformulating-criteria-for-qualitative-researcher"><a href="#3-3-1-Reformulating-criteria-for-qualitative-researcher" class="headerlink" title="3.3.1. Reformulating criteria for qualitative researcher"></a>3.3.1. Reformulating criteria for qualitative researcher</h3><ul>
<li><strong>Reliability</strong>: researcher should <strong>document</strong> each state of the research proces (it provides transparency).</li>
<li><strong>Validity</strong>: researcher should <strong>concentrate on listening</strong>, not talking, producing accurate notes and seeking feedback from respondents.</li>
</ul>
<h3 id="3-3-2-Alternative-criteria-for-qualitative-research"><a href="#3-3-2-Alternative-criteria-for-qualitative-research" class="headerlink" title="3.3.2. Alternative criteria for qualitative research"></a>3.3.2. Alternative criteria for qualitative research</h3><ol>
<li><strong>Trustworthiness</strong> (replaces reliability and generalisation)</li>
</ol>
<ul>
<li><strong>Credibility</strong>: carrying out research according to principles of good practice.</li>
<li><strong>Dependability</strong>: completing records of all phases of the research process. Eg. documenting the problem formulation, selection of research participants, fieldwork notes, interview transcripts, data analysis decisions and so on.</li>
<li><strong>Transferability</strong>: contextual richness and in depth descriptions enable researchers to apply the study in other settings.</li>
<li><strong>Confirmability</strong>: Not allowing personal values to influence the findings.</li>
</ul>
<ol start="2">
<li><strong>Authenticity</strong> (replaces validity)<blockquote>
<p>Validity grounded in the researcher’s practice is required. This is achieved through authenticity.  Authenticity criteria concern the <strong>wider political impact of the research</strong>. Authenticity criterial have not been influential and their emphasis on the wider impact of research is controversial.</p>
</blockquote>
</li>
</ol>
<ul>
<li>Does research represent different viewpoints in the social setting?</li>
<li>Does the research help improve understanding of the social setting?</li>
<li>Does the research help improve understanding of others in the social setting?</li>
<li>Does the research empower members to engage in action?</li>
</ul>
<h1 id="4-Secondary-Research"><a href="#4-Secondary-Research" class="headerlink" title="4. Secondary Research"></a>4. Secondary Research</h1><h2 id="4-1-The-definition"><a href="#4-1-The-definition" class="headerlink" title="4.1. The definition"></a>4.1. The definition</h2><ul>
<li>Secondary research involves data that has been <strong>collected by somebody else previously</strong>.</li>
<li>It involves <strong>re-analysing, interpreting, or reviewing past data</strong> which is usually accessible via past researchers, government records and various online and offline resources.</li>
<li>The role of the researcher is always <strong>to specify how this past data informs his or her current research</strong>.</li>
</ul>
<h2 id="4-2-Advantages"><a href="#4-2-Advantages" class="headerlink" title="4.2. Advantages"></a>4.2. Advantages</h2><ul>
<li><strong>Inexpensive</strong>: Conducting secondary research is much cheaper than doing primary research</li>
<li><strong>Saves time</strong>: Secondary research takes much less time than primary research</li>
<li><strong>Accessibility</strong>: Secondary data is usually easily accessible from online sources</li>
<li><strong>Large scope of data</strong>: You can rely on immensely large data sets that somebody else has collected</li>
<li><strong>Professionally collected data</strong>: Secondary data has been collected by researchers with years of experience</li>
</ul>
<h2 id="4-3-Disadvantages"><a href="#4-3-Disadvantages" class="headerlink" title="4.3. Disadvantages"></a>4.3. Disadvantages</h2><ul>
<li><strong>Inappropriateness</strong>: Secondary data may not be fully appropriate for your research purposes</li>
<li><strong>Wrong format</strong>: Secondary data may have a different format than you require</li>
<li><strong>May not answer your research question</strong>: Secondary data was collected with a different research question in mind</li>
<li><strong>Lack of control over the quality of data</strong>: Secondary data may lack reliability and validity, which is beyond your control</li>
<li><strong>Lack of sufficient information</strong>: Original authors may not have provided sufficient information on various research aspects</li>
</ul>
<h2 id="4-4-Methods-and-purposes-of-secondary-research"><a href="#4-4-Methods-and-purposes-of-secondary-research" class="headerlink" title="4.4. Methods and purposes of secondary research"></a>4.4. Methods and purposes of secondary research</h2><table>
<thead>
<tr>
<th>Method</th>
<th>Purpose</th>
</tr>
</thead>
<tbody><tr>
<td>Using secondary data set in isolation</td>
<td>Re-assessing a data set with a different research question in mind</td>
</tr>
<tr>
<td>Combining two secondary data sets</td>
<td>Investigating the relationship between variables in two data sets or comparing findings from two past studies</td>
</tr>
<tr>
<td>Combining secondary and primary data sets</td>
<td>Obtaining existing information that informs your primary research</td>
</tr>
</tbody></table>
<h2 id="4-5-Types-of-secondary-data"><a href="#4-5-Types-of-secondary-data" class="headerlink" title="4.5. Types of secondary data"></a>4.5. Types of secondary data</h2><ul>
<li>The two most common types of secondary research are, as with all types of data, <strong>quantitative and qualitative</strong>.</li>
<li>Secondary research can, therefore, be conducted by using either quantitative or qualitative data sets.</li>
<li>Both can be used when you want to:<ul>
<li><strong>inform</strong> your current research with past data</li>
<li><strong>re-assess</strong> a past data set</li>
</ul>
</li>
</ul>
<h2 id="4-6-Sources-of-secondary-data"><a href="#4-6-Sources-of-secondary-data" class="headerlink" title="4.6. Sources of secondary data"></a>4.6. Sources of secondary data</h2><blockquote>
<p>The two most common types of secondary data sources are labelled as <strong>internal and external</strong>.</p>
</blockquote>
<h3 id="4-6-1-Internal-sources-of-data"><a href="#4-6-1-Internal-sources-of-data" class="headerlink" title="4.6.1. Internal sources of data "></a>4.6.1. Internal sources of data </h3><p>Internal sources of data are those that are <strong>internal to the organisation</strong> in question. For instance, if you are doing a research project for an organisation (or research institution) where you are an intern, and you want to reuse some of their past data, you would be using internal data sources.</p>
<ul>
<li>Examples include: Sales data, financial data, transport data, marketing data, customer data, safety data.</li>
<li>The benefit of using these sources is that they are <strong>easily accessible</strong> and there is <strong>no associated financial cost</strong> of obtaining them.</li>
</ul>
<h3 id="4-6-2-External-sources-of-data"><a href="#4-6-2-External-sources-of-data" class="headerlink" title="4.6.2. External sources of data"></a>4.6.2. External sources of data</h3><p>External sources of data are those that are <strong>external to an organisation or a research institution</strong> where you conduct your research. This type of data has been collected by “somebody else”.</p>
<ul>
<li>Examples include: Government sources; National and international institutions; Trade, business, and professional associations; Scientific journals; Commercial research organisations.</li>
<li>The benefit of external sources of data is that they <strong>provide comprehensive data</strong>. However, you may sometimes need more effort (or money) to obtain it.</li>
</ul>
<h2 id="4-7-Steps-for-doing-secondary-research"><a href="#4-7-Steps-for-doing-secondary-research" class="headerlink" title="4.7. Steps for doing secondary research"></a>4.7. Steps for doing secondary research</h2><h3 id="4-7-1-Step-1-Develop-your-research-question"><a href="#4-7-1-Step-1-Develop-your-research-question" class="headerlink" title="4.7.1. Step 1 - Develop your research question"></a>4.7.1. Step 1 - Develop your research question</h3><ul>
<li>The first step here is to <strong>specify</strong> the general research area in which your research will fall.</li>
<li>Once you have identified your general topic, your next step consists of reading through existing papers to see <strong>whether there is a gap</strong> in the literature that your research can fill.</li>
<li>Having found your topic of interest and identified a gap in the literature, you need to <strong>specify your research question</strong>.</li>
</ul>
<h3 id="4-7-2-Step-2-Identify-a-secondary-data-set"><a href="#4-7-2-Step-2-Identify-a-secondary-data-set" class="headerlink" title="4.7.2. Step 2 - Identify a secondary data set"></a>4.7.2. Step 2 - Identify a secondary data set</h3><ul>
<li>It is after reviewing the literature and specifying your research questions, that you may decide to rely on secondary data.</li>
<li>You will do this if you discover that there is past data that would be <strong>perfectly reusable</strong> in your own research, therefore helping you to answer your research question more thoroughly (and easily).</li>
<li>To discover if this is done through reviewing the literature on your topic of interest. During this process, you will <strong>identify</strong> other researchers, organisations, agencies, or research centres that have explored your research topic.</li>
<li>You need to ensure that a secondary data set is a <strong>good fit for your own research question</strong>. Once you have established that it is, you need to <strong>specify the reasons</strong> why you have decided to rely on secondary data.</li>
</ul>
<h3 id="4-7-3-Step-3-Evaluate-a-secondary-data-set"><a href="#4-7-3-Step-3-Evaluate-a-secondary-data-set" class="headerlink" title="4.7.3. Step 3 - Evaluate a secondary data set"></a>4.7.3. Step 3 - Evaluate a secondary data set</h3><blockquote>
<p>Because of the disadvantages of secondary data, it is crucial to evaluate a secondary data set.</p>
</blockquote>
<ol>
<li>What was the aim of the original study?</li>
</ol>
<ul>
<li>When evaluating secondary data, you first need to identify the <strong>aim of the original study</strong>. This is important because the original authors’ goals will have impacted several important aspects of their research, including their population of choice, sample, employed measurement tools, and the overall context of the research. </li>
<li>During this step, you also need to pay close attention to any differences in research purposes and research questions between the original study and your own investigation. As we have discussed previously, you will often discover that the original study had a different research question in mind, and <strong>it is important for you to specify this difference</strong>.</li>
</ul>
<ol start="2">
<li><p>Who has collected the data?<br>A further step in evaluating a secondary data set is to ask yourself who has collected the data. To what institution were the authors affiliated? Were the original authors professional enough to trust their research? Usually, you will be able to obtain this information through quick online searches.</p>
</li>
<li><p>Which measures were employed?</p>
</li>
</ol>
<ul>
<li>If the study on which you are basing your research was conducted in a <strong>professional manner</strong>, you can expect to have access to all the essential information regarding this research.</li>
<li>Original authors should have <strong>documented</strong> all their sample characteristics, measures, procedures, and protocols. This information can be obtained either in their final research report or through contacting the authors directly.</li>
</ul>
<ol start="4">
<li><p>When was the data collected?<br>When evaluating secondary data, you should also note when the data was collected. The reason for this is simple: if the data was collected a long time ago, you may conclude that it is <strong>outdated</strong>. And if the data is outdated, then what’s the point of reusing it?</p>
</li>
<li><p>What <strong>methodology</strong> was used to collect the data?</p>
</li>
</ol>
<ul>
<li>When evaluating the quality of a secondary data set, the evaluation of the employed methodology may be the <strong>most crucial step</strong>.</li>
<li>We have already noted that you need to evaluate the <strong>reliability and validity of employed measures</strong>. In addition to this, you need to evaluate how the sample was obtained, whether the sample was large enough, if the sample was representative of the population, if there were any missing responses on employed measures, whether confounders were controlled for, and whether the employed statistical analyses were appropriate. Any drawbacks in the original methodology may limit your own research as well.</li>
</ul>
<ol start="6">
<li>Making a final evaluation<br>The final question to ask is: “what can be done if our evaluation reveals the lack of appropriateness of secondary data?”. The answer, unfortunately, is “nothing”. In this instance, <strong>you can only note the drawbacks of the original data set</strong>, present its limitations, and conclude that your own research may not be sufficiently well grounded.</li>
</ol>
<h3 id="4-7-4-Step-4-Prepare-and-analyse-secondary-data"><a href="#4-7-4-Step-4-Prepare-and-analyse-secondary-data" class="headerlink" title="4.7.4. Step 4 - Prepare and analyse secondary data"></a>4.7.4. Step 4 - Prepare and analyse secondary data</h3><ul>
<li>Outline all variables of interest</li>
<li>Transfer data to a new file</li>
<li>Address missing data</li>
<li>Recode variables</li>
<li>Calculate final scores</li>
<li>Analyse the data</li>
</ul>
<h1 id="5-Sampling"><a href="#5-Sampling" class="headerlink" title="5. Sampling"></a>5. Sampling</h1><h2 id="5-1-Definition-of-key-words"><a href="#5-1-Definition-of-key-words" class="headerlink" title="5.1. Definition of key words"></a>5.1. Definition of key words</h2><ul>
<li><strong>Population</strong>: the universe of units from which the sample is to be selected.</li>
<li><strong>Sample</strong>: the segment of population that is selected for investigation.</li>
<li><strong>Sampling frame</strong>: a list of all units within the population that can be sampled.</li>
<li><strong>Representative sample</strong>: a sample that reflects the population accurately.</li>
<li><strong>Sample bias</strong>: distortion in the representativeness of the sample.</li>
<li><strong>Probability sample</strong>: sample selected using random selection</li>
<li><strong>Non-probability sample</strong>: sample selected not using random selection method</li>
<li><strong>Sampling error</strong>: difference between sample and population.(because the sample size was limited)</li>
<li><strong>Non-sampling error</strong>: findings of research into difference between sample and population.(refers to an error that results during data collection)</li>
<li><strong>Non-response</strong>: when members of sample are unable or refuse to take part</li>
<li><strong>Census</strong>: data collected from entire population</li>
</ul>
<h2 id="5-2-Samples-in-research-projects"><a href="#5-2-Samples-in-research-projects" class="headerlink" title="5.2. Samples in research projects"></a>5.2. Samples in research projects</h2><p>A sample is a <strong>limited number</strong> of objects, phenomena, or people which are studied in order to make observations about the group as a whole.</p>
<h2 id="5-3-Sample-size-and-representativeness"><a href="#5-3-Sample-size-and-representativeness" class="headerlink" title="5.3. Sample size and representativeness"></a>5.3. Sample size and representativeness</h2><ul>
<li>The size of a sample, or the number of measurements taken, can also have an impact on the <strong>validity of results</strong>.</li>
<li>A sample should be <strong>large enough</strong> that the researcher can generalise the results by claiming that they give an insight into the general population or phenomena being studied.</li>
<li>If you are conducting a <strong>survey</strong> (e.g. a questionnaire or online survey) for your project, it is recommended that you have a sample size of <strong>30</strong>.</li>
<li>If you are conducting <strong>interviews</strong>, it is recommended that you interview <strong>5</strong> people with each interview lasting approximately <strong>10 minutes</strong>.</li>
</ul>
<h2 id="5-4-Sampling-error"><a href="#5-4-Sampling-error" class="headerlink" title="5.4. Sampling error"></a>5.4. Sampling error</h2><blockquote>
<p>Difference between sample and population​</p>
</blockquote>
<ul>
<li><p>A <strong>biased sample</strong> does not represent the population ​</p>
<ul>
<li>some groups are <strong>over-represented​</strong></li>
<li>others are <strong>under-represented​</strong></li>
</ul>
</li>
<li><p>Sources of bias​</p>
<ul>
<li>non-probability sampling​</li>
<li>inadequate sample frame​</li>
<li>non-responses​</li>
</ul>
</li>
<li><p><strong>Probability sampling</strong> reduces sampling error and allows for inferential statistics​.</p>
</li>
</ul>
<h2 id="5-5-Probability-Sampling"><a href="#5-5-Probability-Sampling" class="headerlink" title="5.5. Probability Sampling"></a>5.5. Probability Sampling</h2><ul>
<li>Simple random sample​<ul>
<li>Each unit has an equal probability of selection​</li>
<li>Sampling fraction: n/N. where n = sample size and N = population size​</li>
<li>List all units and number them consecutively</li>
<li>Use random numbers table to select units</li>
</ul>
</li>
<li>Systematic sample​</li>
<li>Stratified random sample​</li>
<li>Multi-stage cluster sample</li>
</ul>
<h2 id="5-6-Non-Probability-Sampling"><a href="#5-6-Non-Probability-Sampling" class="headerlink" title="5.6. Non-Probability Sampling"></a>5.6. Non-Probability Sampling</h2><ol>
<li><p>Convenience sampling</p>
<ul>
<li>the most easily accessible individuals​</li>
<li>useful when <strong>piloting</strong> a research instrument​</li>
<li>may be a chance to collect data that is too good to miss</li>
</ul>
</li>
<li><p>Snowball sampling</p>
<ul>
<li>researcher <strong>makes initial contact</strong> with a small group​</li>
<li>these respondents <strong>introduce others</strong> in their network​</li>
</ul>
</li>
<li><p>Quota sampling</p>
<ul>
<li>interviewers <strong>select people to fit their quota</strong> for each category​</li>
<li>The sample may be biased towards those who appear friendly and accessible (e.g. in the street)​</li>
<li>can lead to under-representation of less accessible groups​</li>
</ul>
</li>
</ol>
<h2 id="5-7-Limits-to-generalisation"><a href="#5-7-Limits-to-generalisation" class="headerlink" title="5.7. Limits to generalisation"></a>5.7. Limits to generalisation</h2><ul>
<li>Findings can only be generalised to the population from which the sample was selected​<ul>
<li>be wary of <strong>over-generalising</strong> in terms of locality​</li>
</ul>
</li>
<li>Time, historical events and cohort effects​<ul>
<li>results may no longer be relevant and so require <strong>updating</strong> (replication)</li>
</ul>
</li>
</ul>
<h2 id="5-8-Error-in-survey-research"><a href="#5-8-Error-in-survey-research" class="headerlink" title="5.8. Error in survey research"></a>5.8. Error in survey research</h2><ul>
<li>Sampling error: unavoidable difference between sample and population​</li>
<li>Sampling-related error: inadequate sampling frame; non-response​</li>
<li>Data collection error​: implementation of research instruments​. E.g. poor question wording in surveys​</li>
<li>Data processing error​: faulty management of data. E.g. coding errors</li>
</ul>
<h1 id="6-Surveys"><a href="#6-Surveys" class="headerlink" title="6. Surveys"></a>6. Surveys</h1><h2 id="6-1-Different-types"><a href="#6-1-Different-types" class="headerlink" title="6.1. Different types"></a>6.1. Different types</h2><ul>
<li><strong>Structured</strong> e.g. face-to-face questionnaire, online survey</li>
<li><strong>Semi-structured</strong> e.g. focus group, interview</li>
<li><strong>Unstructured</strong> e.g. interview<div class="video-container"><iframe src="https://www.youtube.com/embed/uTIWl76_klI" frameborder="0" loading="lazy" allowfullscreen></iframe></div>

</li>
</ul>
<h2 id="6-2-Planning"><a href="#6-2-Planning" class="headerlink" title="6.2. Planning"></a>6.2. Planning</h2><ul>
<li>Population<ul>
<li>Who forms the population you plan to survey?</li>
</ul>
</li>
<li>Sample<ul>
<li>Sample size = approximately 30 for questionnaires and 5 for interviews</li>
</ul>
</li>
<li>Anonymity<ul>
<li>What (if any) identifying information is required?</li>
</ul>
</li>
<li>Delivery<ul>
<li>Face-to face / Online survey?</li>
</ul>
</li>
<li>Incentives/Rewards<ul>
<li>No incentives or rewards should be offered</li>
</ul>
</li>
</ul>
<h2 id="6-3-Defining-your-objectives"><a href="#6-3-Defining-your-objectives" class="headerlink" title="6.3. Defining your objectives"></a>6.3. Defining your objectives</h2><ul>
<li>Establish a clear <strong>hypothesis​</strong></li>
<li>Establish the <strong>exact variables</strong> you wish to gather data about and how they can be assessed</li>
<li>Think about the answers you want before you write the questions​</li>
<li>Think about how you are going to analyse and evaluate your data</li>
</ul>
<h2 id="6-4-The-hypothesis"><a href="#6-4-The-hypothesis" class="headerlink" title="6.4. The hypothesis"></a>6.4. The hypothesis</h2><ul>
<li>When you hypothesise, you have a <strong>theory</strong> which then has to be supported or not supported.​</li>
<li>To test the hypothesis, a survey is conducted</li>
<li>The results are analysed​</li>
<li>A report on the results is written which will <strong>prove or disprove</strong> the hypothesis.</li>
</ul>
<h2 id="6-5-Question-types"><a href="#6-5-Question-types" class="headerlink" title="6.5. Question types"></a>6.5. Question types</h2><ol>
<li><strong>Closed and fixed choice</strong> questions. e.g. multiple choice, rating</li>
<li><strong>Open questions</strong></li>
</ol>
<h2 id="6-6-Challenges"><a href="#6-6-Challenges" class="headerlink" title="6.6. Challenges"></a>6.6. Challenges</h2><ul>
<li><strong>Clarity</strong>: Avoid <strong>vague questions</strong> that could be misunderstood by participants</li>
<li><strong>Embarrassing questions</strong>: Are they necessary? e.g. How much do you weigh / earn?</li>
<li><strong>Leading questions</strong>: e.g. “What do you think about our <strong>wonderful</strong> college?”</li>
<li><strong>Prestige bias</strong>: e.g. “Research has shown that people who exercise every day live longer. How often do you exercise?”</li>
</ul>
<h2 id="6-7-Interview-topics"><a href="#6-7-Interview-topics" class="headerlink" title="6.7. Interview topics"></a>6.7. Interview topics</h2><blockquote>
<p>Interviews are designed to capture qualitative data about participants.</p>
</blockquote>
<ul>
<li>Behaviours</li>
<li>Knowledge</li>
<li>Opinions / values</li>
<li>Feelings</li>
</ul>
<h2 id="6-8-Interview-question-types"><a href="#6-8-Interview-question-types" class="headerlink" title="6.8. Interview question types"></a>6.8. Interview question types</h2><ul>
<li><strong>Description</strong>: Tell me about… / What got you interested in…?</li>
<li><strong>Detail</strong>: Can you tell me more about…? What might happen if…? Can you start with…?</li>
<li><strong>Reflection</strong>: You mentioned… How do you feel about that? What’s it like when…?</li>
<li><strong>Probing</strong>: When did that happen? Can you remember what you did in that situation? How did you feel at that moment?</li>
</ul>
<div class="video-container"><iframe src="https://www.youtube.com/embed/LPwO-vOVxD4" frameborder="0" loading="lazy" allowfullscreen></iframe></div>

<h2 id="6-9-Finally"><a href="#6-9-Finally" class="headerlink" title="6.9. Finally"></a>6.9. Finally</h2><ul>
<li>Provide your participant with an <strong>information sheet</strong> and gain <strong>informed consent</strong> before starting your research</li>
<li>Include a welcome e.g. introduce yourself and the purpose of the research</li>
<li>State <strong>how many questions</strong> there are and <strong>how long</strong> you anticipate it will take to complete the questionnaire / survey / interview</li>
<li>Collect necessary demographic data e.g. age range / nationality / gender</li>
<li>Thank your participant for their time</li>
</ul>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>TUNIC</category>
      </categories>
      <tags>
        <tag>PM600 Research Project</tag>
      </tags>
  </entry>
  <entry>
    <title>UoN - CS Guide</title>
    <url>/2020/09/27/UoN-CS-Guide/</url>
    <content><![CDATA[<h1 id="1-Computer-Science-information-Guide"><a href="#1-Computer-Science-information-Guide" class="headerlink" title="1. Computer Science information Guide"></a>1. Computer Science information Guide</h1><a id="more"></a>
<body class="wiz-editor-body " data-wiz-document-type="common" style="opacity: 1;" ><div><span data-wiz-span="data-wiz-span" style="font-size: 1.5rem;">1. School of Computer Science</span></div><div><ul><li><a href="https://www.nottingham.ac.uk/computerscience/index.aspx"><font color="#0046f5">Home Page</font></a></li><li><a href="https://moodle.nottingham.ac.uk/"><font color="#0046f5">Teach System Moodle</font></a></li><li><a href="https://uniofnottm.sharepoint.com/sites/StudentModules"><font color="#0046f5">StudentModules SharePoint</font></a></li><li><a href="https://www.nottingham.ac.uk/pgstudy/course/taught/computer-science-or-computer-science-artificial-intelligence-msc" style=""><font color="#0f47ce">CS Msc Overview</font></a></li><li><a href="http://eprints.nottingham.ac.uk/view/subject_d/d=5FCS.html"><font color="#0f47ce">eDissertations</font></a></li><li><a href="http://www.cs.nott.ac.uk/~pszrq/PGT.html"><font color="#0f47ce">PGT-Q&amp;A</font></a></li><li><a href="https://www.nottingham.ac.uk/it-services/software/software.aspx"><font color="#0f47ce">Normal Software</font></a></li><li><a href="https://www.nottingham.ac.uk/it-services/computers/virtual.aspx"><font color="#0f47ce">Virtual Desktop</font></a></li></ul></div><div><br></div><div><span data-wiz-span="data-wiz-span" style="font-size: 1.5rem;">2. Course(来自SharePoint)</span></div><div><span data-wiz-span="data-wiz-span" style="font-size:1.167rem;color:rgb(255, 0, 0)">A: Autumn&nbsp; ;&nbsp; &nbsp;</span><span style="color:rgb(111, 192, 55);font-size:1.167rem" data-wiz-span="data-wiz-span">S: Spring&nbsp;</span></div><div><span data-wiz-span="data-wiz-span" style="font-size: 1.25rem;">2.1. Without CS background</span></div><div class="wiz-table-container" style="position: relative; padding: 0px;" ><div class="wiz-table-body" ><table style="width: 1647px;"><tbody><tr style="height: 33px;"><td align="left" valign="middle" style="width: 111px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div>Code</div></td><td align="left" valign="middle" style="width: 140px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div>Module Name</div></td><td align="center" valign="middle" style="width: 69px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div>Credits</div></td><td align="left" valign="middle" style="width: 158px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div>Convenor</div></td><td align="left" valign="middle" style="width: 711px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div>Abstract&nbsp;</div></td><td align="left" valign="middle" style="width: 259px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div>Exam</div></td><td align="left" valign="middle" style="width: 198px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div>Advice</div></td></tr><tr style="height: 185px;"><td align="left" valign="middle" style="width: 111px;"><div><font color="#ff0000">A</font>COMP4008</div></td><td align="left" valign="middle" style="width: 140px;"><div>Programming</div></td><td align="center" valign="middle" style="width: 69px;"><div>20</div></td><td align="left" valign="middle" style="width: 158px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/thorsten.altenkirch"><font color="#0046f5">Thorsten Altenkirch&nbsp;</font></a></div><div><a href="https://www.nottingham.ac.uk/computerscience/people/i.triguerovelazquez"><font color="#0046f5">Isaac Triguero</font></a></div></td><td align="left" valign="middle" style="width: 711px;"><div>This module provides a comprehensive overview of the principles of programming, including such concepts as procedural logic, variables, flow control, input and output and the analysis and design of programs(<font color="#00b0f0">Python</font>). The emphasis in this course will be <font color="#00b0f0">game development</font> in a small group using Python.</div></td><td align="left" valign="middle" style="width: 259px;"><div><ul><li>2h Exam: 50%</li><li>4 programming exercises: 20%</li><li>Group project: 30%</li></ul></div></td><td align="left" valign="middle" style="width: 198px;"><div>1. Python基础课程</div><div>2. PyGame做项目</div></td></tr><tr><td align="left" valign="middle" style="width: 111px;"><div><span style="color: rgb(255, 0, 0);">A</span>COMP4035</div></td><td align="left" valign="middle" style="width: 140px;"><div>Systems and Networks</div></td><td align="center" valign="middle" style="width: 69px;"><div>20</div></td><td align="left" valign="middle" style="width: 158px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/gail.hopkins"><font color="#0046f5">Gail Hopkins</font></a></div></td><td align="left" valign="middle" style="width: 711px;"><div><font color="#00b0f0">Unix</font> is introduced in terms of the Unix file structure, Input and Output and the Command Line Interface that is used to manipulate these.</div><div>Computer communication is taught with respect to the Client-Server Architecture and applications that use this. <font color="#00b0f0">TCP/IP、IPv4\IPv6、LANs\WANs、Wifi、routers、VPN、Firewalls</font>.</div></td><td align="left" valign="middle" style="width: 259px;"><div><ul><li>2h Exam: 75%</li><li>2000 words coursework: 25%</li></ul></div></td><td align="left" valign="middle" style="width: 198px;"><div>1. Unix操作系统</div><div>2. 基本网络协议及C-S架构</div></td></tr><tr><td align="left" valign="middle" style="width: 111px;"><div><span style="color: rgb(255, 0, 0);">A</span>COMP4039</div></td><td align="left" valign="middle" style="width: 140px;"><div>Databases, Interfaces and Software Design Principles</div></td><td align="center" valign="middle" style="width: 69px;"><div>20</div></td><td align="left" valign="middle" style="width: 158px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/jeremie.clos"><font color="#0046f5">Jeremie Clos</font></a></div><div><a href="https://www.nottingham.ac.uk/computerscience/people/stuart.reeves"><font color="#0046f5">Stuart Reeves</font></a></div></td><td align="left" valign="middle" style="width: 711px;"><div>To give an understanding of the structure and workings of rational database systems and provide some insight into recent developments. To enable students to gain experience with design and implementation of database driven web interfaces.&nbsp; <font color="#00b0f0">Wed design &amp;&amp; SQL</font>.</div></td><td align="left" valign="middle" style="width: 259px;"><ul><li>Exam: 40%</li><li>Coursework 1A: 10%</li><li>Coursework 1B: 10%</li><li>Coursework 2: 40%</li></ul></td><td align="left" valign="middle" style="width: 198px;"><div>1. SQL dev</div><div>2. Web dev</div></td></tr></tbody></table></div></div><div><span data-wiz-span="data-wiz-span" style="font-size: 1.167rem;"><br></span></div><div><span data-wiz-span="data-wiz-span" style="font-size: 1.25rem;">2.2. AI Module&nbsp;</span></div><div class="wiz-table-container" style="position: relative; padding: 0px;" ><div class="wiz-table-body" ><table style="width: 1651px;"><tbody><tr><td style="width: 108px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div><span style="">Code</span></div></td><td style="width: 137px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div><span style="">Module Name</span></div></td><td style="width: 72px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff" align="center"><div><span style="">Credits</span></div></td><td style="width: 146px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div><span style="">Convenor</span></div></td><td style="width: 680px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div><span style="">Abstract</span></div></td><td style="width: 284px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div><span style="">Exam</span></div></td><td style="width: 223px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div><span style="">Advice</span></div></td></tr><tr><td colspan="1" rowspan="1" style="width: 108px;"><div><span style="color: rgb(255, 0, 0);">A</span>COMP3008</div></td>    <td colspan="1" rowspan="1" style="width: 137px;"><div>Knowledge Representation and Reasoning</div></td>    <td colspan="1" rowspan="1" style="width: 72px;" align="center"><div>20</div></td>    <td colspan="1" rowspan="1" style="width: 146px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/daniel.karapetyan"><font color="#0046f5">Daniel Karapetyan</font></a></div></td>    <td colspan="1" rowspan="1" style="width: 680px;"><div>This course examines how knowledge can be represented symbolically and how it can be manipulated in an automated way by reasoning programs. Some of the topics you’ll cover include: first order logic; resolution; description logic; default reasoning; rule-based systems; belief networks; planning and reasoning about actions.&nbsp;</div></td>    <td colspan="1" rowspan="1" style="width: 284px;"><div><ul><li>2h Exam: 75%</li><li>Coursework: 25%</li></ul></div></td>    <td colspan="1" rowspan="1" style="width: 223px;"><div><a href="https://www.jiqizhixin.com/graph/technologies/1c2aec65-cc26-48f5-8c2d-ad3327512b28"><font color="#0046f5">知识表征</font></a><br></div></td></tr><tr><td colspan="1" rowspan="1" style="width: 108px;"><div><span style="color: rgb(255, 0, 0);">A</span>COMP3009</div></td>    <td colspan="1" rowspan="1" style="width: 137px;"><div>Machine Learning</div></td>    <td colspan="1" rowspan="1" style="width: 72px;" align="center"><div>20</div></td>    <td colspan="1" rowspan="1" style="width: 146px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/michel.valstar"><font color="#0046f5">Michel Valstar</font></a></div></td>    <td colspan="1" rowspan="1" style="width: 680px;"><div>Providing you with an introduction to machine learning, pattern recognition, and data mining techniques.You'll cover a range of topics including: machine learning foundations; pattern recognition foundations; artificial neural networks; deep learning; applications of machine learning; data mining techniques and evaluating hypotheses.</div></td>    <td colspan="1" rowspan="1" style="width: 284px;"><div style=""><ul><li>2h Exam: 70%</li><li>Group Coursework: 30%</li></ul></div></td>    <td colspan="1" rowspan="1" style="width: 223px;"><div>AI基础课</div></td></tr><tr><td colspan="1" rowspan="1" style="width: 108px;"><div><span style="color: rgb(255, 0, 0);">A</span>COMP4034</div></td>    <td colspan="1" rowspan="1" style="width: 137px;"><div>Autonomous Robotic Systems</div></td>    <td colspan="1" rowspan="1" style="width: 72px;" align="center"><div>20</div></td>    <td colspan="1" rowspan="1" style="width: 146px;" class=""><div><a href="https://www.nottingham.ac.uk/computerscience/people/ayse.kucukyilmaz" style=""><font color="#004ff3">Ayse Kucukyilmaz</font></a></div></td>    <td colspan="1" rowspan="1" style="width: 680px;"><div>A significant part of the module is laboratory-based, utilising physical robotic hardware to reinforce the theoretical principles covered. Cover a range of topics including basic behavioural control architectures, multi-source data aggregation, programming of multiple behaviours, capabilities and limitations of sensors and actuators, and filtering techniques.</div></td>    <td colspan="1" rowspan="1" style="width: 284px;"><div><ul><li>2h Exam: 50%</li><li>Lab assignment and report: 50%</li></ul></div></td>    <td colspan="1" rowspan="1" style="width: 223px;"><div>1. HCI智能机器人方向</div><div>2. 老师首次在UoN教学</div><div>3. 疫情情况主要使用模拟软件</div><div>4. Python和数学基础</div></td></tr><tr><td style="width: 108px;"><div><span style="color: rgb(255, 0, 0);">A</span><span style="">COMP4041</span></div></td><td style="width: 137px;"><div>Linear and Discrete Optimization</div></td><td style="width: 72px;" align="center"><div>20</div></td><td style="width: 146px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/dario.landasilva" style="text-decoration-skip-ink: none;"><font color="#0046f5">Dario Landa Silva</font></a></div></td><td style="width: 680px;"><div>To develop the skills for modelling a range of optimization problems in business and industry using mathematical models.To develop skills for identifying, analyzing, modelling and solving real-world linear and discrete optimization.The module covers topics such as linear programming, integer programming, combinatorial optimization, modelling and optimization software, and multi-objective optimization among others.&nbsp;</div></td><td style="width: 284px;"><div><ul><li>1.5h Exam: 50%</li><li>Solve a real-world scenario: 25%</li><li>Inclass Test: 25%</li></ul></div></td><td style="width: 223px;" class=""><div>1. 线性/离散优化，运筹学</div><div>2. 需要一定数学基础(线性代数)</div><div>3. 少量编程，偏重数学模型</div></td></tr><tr><td colspan="1" rowspan="1" style="width: 108px;"><div><span style="color: rgb(255, 0, 0);">A</span>COMP3074</div></td>    <td colspan="1" rowspan="1" style="width: 137px;"><div>Human-AI Interaction</div></td>    <td colspan="1" rowspan="1" style="width: 72px;" align="center"><div>20</div></td>    <td colspan="1" rowspan="1" style="width: 146px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/joel.fischer"><font color="#0046f5">Joel Fischer</font></a></div></td>    <td colspan="1" rowspan="1" style="width: 680px;"><div>This module is an introduction to the design of human-AI interaction to ensure the AI-driven systems we built are beneficial and useful to people. The module will cover practical design topics including methods and techniques such as <font color="#00b0f0">natural language processing</font> and <font color="#00b0f0">human-robot interaction</font>.&nbsp;</div></td>    <td colspan="1" rowspan="1" style="width: 284px;"><div><ul><li>1.5h Exam: 60%</li><li>Coursework: 40%</li></ul></div></td>    <td colspan="1" rowspan="1" style="width: 223px;"><div>HCI方向，涉及NLP</div></td></tr><tr><td style="width: 108px;"><div><font color="#6fc037">S</font>COMP3004</div></td><td style="width: 137px;"><div>Designing Intelligent Agents</div></td><td style="width: 72px;" align="center"><div>20</div></td><td style="width: 146px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/colin.johnson"><font color="#0046f5">Colin Johnson</font></a></div></td><td style="width: 680px;"><div>You'll be given a basic introduction to the analysis and design of intelligent agents, software systems which perceive their environment and act in that environment in pursuit of their goals. Cover topics including task environments, reactive, deliberative and hybrid architectures for individual agents, and architectures and coordination mechanisms for multi-agent systems.</div></td><td style="width: 284px;"><ul><li>2500 word report and code : 100%</li></ul></td><td style="width: 223px;"><div><a href="https://www.jiqizhixin.com/graph/technologies/3500fe33-55d4-450f-8076-25c2ef744e63"><font color="#0046f5">智能代理</font></a>，如: Siri&nbsp;</div></td></tr><tr><td style="width: 108px;"><div><span style="color: rgb(111, 192, 55);">S</span>COMP4002</div></td><td style="width: 137px;"><div>Games</div></td><td style="width: 72px;" align="center"><div>20</div></td><td style="width: 146px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/martin.flintham"><font color="#0046f5">Martin Flintham</font></a></div></td><td style="width: 680px;"><div>This module covers the history, development and state-of-the art in computer games and technological entertainment. Students will use appropriate software environments to individually develop a number of games to explore relevant theoretical design and practical implementation concepts.</div></td><td style="width: 284px;"><div><ul><li>1h Exam: 30%</li><li>2000 report: 30%</li><li>programming: 40%</li></ul></div></td><td style="width: 223px;"><div>HCI方向</div></td></tr><tr><td style="width: 108px;"><div><span style="color: rgb(111, 192, 55);">S</span>COMP4030</div></td><td style="width: 137px;"><div>Data Modelling and Analysis</div></td><td style="width: 72px;" align="center"><div>20</div></td><td style="width: 146px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/mercedes.torrestorres"><font color="#0046f5">Mercedes Torres Torres</font></a></div></td><td style="width: 680px;"><div>Topics covered include: basic statistics; types of data; data visualisation techniques; data modelling; data pre-processing methods including data imputation; forecasting methods; clustering and classification methods (decision trees, naīve bayes classifiers, k-nearest neighbours); data simulation and model interpretation techniques to aid decision support.</div></td><td style="width: 284px;"><div><ul><li>Lab submission: 25%</li><li>4000 words and&nbsp; code: 75%</li></ul></div></td><td style="width: 223px;"><div>DS方向，数据建模</div></td></tr><tr><td style="width: 108px;"><div><span style="color: rgb(111, 192, 55);">S</span>COMP4033</div></td><td style="width: 137px;"><div>Fuzzy Logic and Fuzzy Systems</div></td><td style="width: 72px;" align="center"><div>20</div></td><td style="width: 146px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/chao.chen"><font color="#0046f5">Chao Chen</font></a></div></td><td style="width: 680px;"><div>This module aims to provide a thorough understanding of fuzzy sets and systems from a theoretical and practical perspective. Topics commonly include: type-1 fuzzy sets, type-1 fuzzy logic systems, type-1 fuzzy set based applications, type-2 fuzzy sets, type-2 fuzzy logic systems, type-2 fuzzy set based applications. R language.</div></td><td style="width: 284px;"><div><ul><li>2h Exam: 75%</li><li>2000 words and code: 25%</li></ul></div></td><td style="width: 223px;"><div>模糊系统(感觉真模糊，哈哈哈)</div></td></tr><tr><td style="width: 108px;"><div><span style="color: rgb(111, 192, 55);">S</span>COMP4038</div></td><td style="width: 137px;"><div>Simulation and Optimization for Decision Support</div></td><td style="width: 72px;" align="center"><div>20</div></td><td style="width: 146px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/dario.landasilva" style="text-decoration-skip-ink: none;"><font color="#0046f5">Dario Landa Silva</font></a></div><div><a href="https://www.nottingham.ac.uk/computerscience/people/peer-olaf.siebers"><font color="#0046f5">Peer-Olaf Siebers</font></a></div></td><td style="width: 680px;"><div>This module offers insight into the applications of selected methods of decision support. The foundations for applying these methods are derived from Operations Research Simulation, Social Simulation, Data Science, Automated Scheduling, and Decision Analysis.</div></td><td style="width: 284px;"><div><ul><li>1h Exam: 25%</li><li>2500 words: 65%</li><li>Lab Exe: 10%</li></ul></div></td><td style="width: 223px;"><div>决策支持系统DDS，数据库管理系统相关</div></td></tr><tr><td style="width: 108px;"><div><span style="color: rgb(111, 192, 55);">S</span>COMP4103</div></td><td style="width: 137px;"><div>Big Data</div></td><td style="width: 72px;" align="center"><div>10</div></td><td style="width: 146px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/i.triguerovelazquez" style="text-decoration-skip-ink: none;"><font color="#0046f5">Isaac Triguero</font></a></div></td><td style="width: 680px;"><div>This includes the <font color="#00b0f0">MapReduce programming model</font>, as well as an overview of recent technologies (<font color="#00b0f0">Hadoop ecosystem</font>, and Apache Spark). Then, you will learn how to interact with the latest APIs of Apache Spark (RDDs, DataFrames and Datasets) to create distributed programs capable of dealing with big datasets (using Python and/or Scala). Finally, we will dive into the analytics part of the course, including data pre-processing approaches, distributed machine learning algorithms and data stream algorithms. To do so, you will use the Machine learning library of Apache Spark (<font color="#00b0f0">MLlib</font>) to understand how some machine learning algorithms (e.g. Decision Trees, Random Forests, k-means) can be deployed at a scale.&nbsp;</div></td><td style="width: 284px;"><div><ul><li>2h Exam: 50%</li><li>Group project: 50%</li></ul></div></td><td style="width: 223px;"><div>Hadoop生态、MapReduce</div></td></tr></tbody></table></div></div><div><span data-wiz-span="data-wiz-span" style="font-size: 1.167rem;"><br></span></div><div><span data-wiz-span="data-wiz-span" style="font-size: 1.25rem;">2.3. Other Module&nbsp;</span></div><div class="wiz-table-container" style="position: relative; padding: 0px;" ><div class="wiz-table-body" ><table style="width: 1731px;"><tbody><tr><td align="left" valign="middle" style="width: 107px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div><span style="">Code</span></div></td><td align="left" valign="middle" style="width: 135px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div><span style="">Module Name</span></div></td><td align="center" valign="middle" style="width: 70px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff" class=""><div><span style="">Credits</span></div></td><td align="left" valign="middle" style="width: 157px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div><span style="">Convenor</span></div></td><td align="left" valign="middle" style="width: 713px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div><span style="">Abstract</span></div></td><td align="left" valign="middle" style="width: 306px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff" class=""><div><span style="">Exam</span></div></td><td align="left" valign="middle" style="width: 242px; background-color: rgb(209, 230, 255);" data-background-color="#d1e6ff"><div><span style="">Advice</span></div></td></tr><tr><td align="left" valign="middle" style="width: 107px;"><div><span style="color: rgb(255, 0, 0);">A</span>COMP4019</div></td><td align="left" valign="middle" style="width: 135px;"><div>Advanced Algorithms and Data Structures</div></td><td align="center" valign="middle" style="width: 70px;" class=""><div>10</div></td><td align="left" valign="middle" style="width: 157px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/venanzio.capretta"><font color="#0046f5">Venanzio Capretta</font></a></div></td><td align="left" valign="middle" style="width: 713px;"><div>The topics covered may include: Binary Search Trees (Red-Black Trees), Dynamic Programming, Graph Algorithms (e.g. shortest path, maximum flows), Amortized Analysis, Priority Queues (Binary, Leftist and Fibonacci Heaps), String Algorithms (string matching, longest common subsequence). Among the special topics relevant to contemporary application, we may study: Public Key Cryptography (the RSA cryptosystem), the Page-rank algorithm (from Google search), Neural Networks and other data structures and algorithms in AI.&nbsp;<span style=""><font color="#00b0f0">Haskell</font></span></div></td><td align="left" valign="middle" style="width: 306px;"><ul><li>2h Exam: 100%</li></ul></td><td align="left" valign="middle" style="width: 242px;"><div>计算机高级基础：算法与数据结构</div></td></tr><tr><td align="left" valign="middle" style="width: 107px;"><div><span style="color: rgb(255, 0, 0);">A</span>COMP4040</div></td><td align="left" valign="middle" style="width: 135px;"><div>Project in Advanced Algorithms and Data Structures</div></td><td align="center" valign="middle" style="width: 70px;" class=""><div>10</div></td><td align="left" valign="middle" style="width: 157px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/venanzio.capretta" style="text-decoration-skip-ink: none;"><font color="#0046f5">Venanzio Capretta</font></a></div></td><td align="left" valign="middle" style="width: 713px;"><div>This project builds on the theory presented in COMP4019, and involves a self-guided study of selected advanced data structures and algorithms. The outcome of the project is an implementation of the algorithms and data structures with appropriate documentation.&nbsp;<span style=""><font color="#00b0f0">Haskell</font></span></div></td><td align="left" valign="middle" style="width: 306px;"><ul><li>Implementation Assignments: 100%</li></ul></td><td align="left" valign="middle" style="width: 242px;"><div><a href="http://www.duplavis.com/venanzio/advanced_algorithms/index.html"><font color="#0088f3">Haskell实现算法与数据结构设计</font></a></div></td></tr><tr><td align="left" valign="middle" style="width: 107px;"><div><span style="color: rgb(255, 0, 0);">A</span>COMP4032</div></td><td align="left" valign="middle" style="width: 135px;"><div>Advanced Computer Networks</div></td><td align="center" valign="middle" style="width: 70px;" class=""><div>20</div></td><td align="left" valign="middle" style="width: 157px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/milena.radenkovic"><font color="#0046f5">Milena Radenkovic</font></a></div></td><td align="left" valign="middle" style="width: 713px;"><div>This module will provide students with an advanced knowledge of computer communications networks, using examples from all-IP core telecommunications networks to illustrate aspects of transmission coding, error control, media access, internet protocols, routing, presentation coding, services and security. The module will provide an advanced knowledge of various routing and query protocols in: Ad Hoc Networks; Mobile Ad Hoc Networks (MANETs); Vehicular Ad Hoc Networks (VANETs); Disconnection/Disruption/Delay Tolerant Networks (DTNs);</div></td><td align="left" valign="middle" style="width: 306px;" class=""><div><ul><li>2h Exam: 50%</li><li>Report and code(10-20pages): 50%&nbsp;</li></ul></div></td><td align="left" valign="middle" style="width: 242px;"><div>1. 高级计算机网络，深度不浅</div><div>2. 老师很Professional</div></td></tr><tr><td align="left" valign="middle" style="width: 107px;"><div><span style="color: rgb(255, 0, 0);">A</span>COMP4075</div></td><td align="left" valign="middle" style="width: 135px;"><div>Real-world Functional Programming</div></td><td align="center" valign="middle" style="width: 70px;" class=""><div>10</div></td><td align="left" valign="middle" style="width: 157px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/henrik.nilsson"><font color="#0046f5">Henrik Nilsson</font></a></div></td><td align="left" valign="middle" style="width: 713px;"><div>This module introduces tools, techniques, and theory needed for programming real-world applications functionally, with a particular emphasis on the inherent benefits of functional programming and strong typing for reuse, maintenance, concurrency, distribution, and high availability. The medium of instruction is mainly <font color="#00b0f0">Haskell</font>.</div></td><td align="left" valign="middle" style="width: 306px;"><div><ul><li>1.5h Exam: 50%</li><li>Programming Tasks: 50%</li></ul></div></td><td align="left" valign="middle" style="width: 242px;"><div><span style="">Haskell, 你懂的</span></div></td></tr><tr><td align="left" valign="middle" style="width: 107px;"><div><span style="color: rgb(255, 0, 0);">A</span>COMP4095</div></td><td align="left" valign="middle" style="width: 135px;"><div>Real-world Functional Programming Project</div></td><td align="center" valign="middle" style="width: 70px;" class=""><div>10</div></td><td align="left" valign="middle" style="width: 157px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/henrik.nilsson" style="text-decoration-skip-ink: none;"><font color="#0046f5">Henrik Nilsson</font></a></div></td><td align="left" valign="middle" style="width: 713px;"><div>What is important is that the ideas underpinning the project is related to real-world functional programming. As a first step, each student need to define their project through a project pitch. The pitch must outline the project, explain why the project is in scope of G54RFP/COPM4075, state what languages or frameworks are going to be used, justify that the size of the project is appropriate for a 10 credit module (100 h of work), and state what the outcome of a successful project is.</div></td><td align="left" valign="middle" style="width: 306px;"><ul><li>5000 word report and code: 100%</li></ul></td><td align="left" valign="middle" style="width: 242px;"><div><span style="">COMP4075的</span>项目</div></td></tr><tr><td align="left" valign="middle" style="width: 107px;"><div><span style="color: rgb(111, 192, 55);">S</span>COMP3011</div></td><td align="left" valign="middle" style="width: 135px;"><div>Computer Graphics</div></td><td align="center" valign="middle" style="width: 70px;" class=""><div>20</div></td><td align="left" valign="middle" style="width: 157px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/jeremie.clos" style="text-decoration-skip-ink: none;"><font color="#0046f5">Jeremie Clos</font></a></div></td><td align="left" valign="middle" style="width: 713px;"><div>You will learn the principles of 3D computer graphics, focusing on modelling and viewing objects/scene in a three-dimensional (3D) world on the computer, rendering the objects/scene to give it realism, and projecting objects/scene onto 2D display in analogy to your taking a photo of a 3D world using a camera. OpenGL programming skills</div></td><td align="left" valign="middle" style="width: 306px;"><div><ul><li>Coursework 1/2: 15%</li><li>3D graphics project: 70%</li></ul></div></td><td align="left" valign="middle" style="width: 242px;"><div><span style="">OpenGL感兴趣的</span></div></td></tr><tr><td align="left" valign="middle" style="width: 107px;"><div><span style="color: rgb(111, 192, 55);">S</span>COMP4036</div></td><td align="left" valign="middle" style="width: 135px;"><div>Mixed Reality</div></td><td align="center" valign="middle" style="width: 70px;" class=""><div>20</div></td><td align="left" valign="middle" style="width: 157px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/steve.benford"><font color="#0046f5">Steven Benford&nbsp;</font></a></div><div><a href="https://www.nottingham.ac.uk/computerscience/people/paul.tennent"><font color="#0046f5">Paul Tennent</font></a></div></td><td align="left" valign="middle" style="width: 713px;"><div>You will gain knowledge and hands-on experience of design and development with key technologies along this continuum, including working with both ubiquitous computing based sensor systems and locative media. You will learn about the Human-Computer Interaction challenges that need to be considered when creating mixed reality applications along with strategies for addressing them, so as to create compelling and reliable user experiences.</div></td><td align="left" valign="middle" style="width: 306px;"><div><ul><li>report1 2000-word: 50%</li><li><span style="">report2 2000-word: 50%</span></li></ul></div></td><td align="left" valign="middle" style="width: 242px;"><div>HCI方向</div></td></tr><tr><td align="left" valign="middle" style="width: 107px;"><div><span style="color: rgb(111, 192, 55);">S</span>COMP3021</div></td><td align="left" valign="middle" style="width: 135px;"><div>Fundamentals of Information Visualisation</div></td><td align="center" valign="middle" style="width: 70px;" class=""><div>10</div></td><td align="left" valign="middle" style="width: 157px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/ke.zhou"><font color="#0046f5">Ke Zhou</font></a></div></td><td align="left" valign="middle" style="width: 713px;"><div>You will learn about the differences between scientific and creative approaches to constructing visualisations, and consider some important challenges such as the representation of ambiguous or time-based data. You will also learn about psychological theories that help explain how humans process information, and consider their relevance to the design of effective visualisations.&nbsp;</div></td><td align="left" valign="middle" style="width: 306px;"><div><ul><li>2h Exam: 75%</li><li>3000 words and code: 25%</li></ul></div></td><td align="left" valign="middle" style="width: 242px;"><div>数据可视化，HCI方向</div></td></tr><tr style="height: 33px;"><td align="left" valign="middle" style="width: 107px;"><div><span style="color: rgb(111, 192, 55);">S</span>COMP3022</div></td><td align="left" valign="middle" style="width: 135px;"><div>Information Visualisation Project</div></td><td align="center" valign="middle" style="width: 70px;" class=""><div>10</div></td><td align="left" valign="middle" style="width: 157px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/ke.zhou" style="text-decoration-skip-ink: none;"><font color="#0046f5">Ke Zhou</font></a></div></td><td align="left" valign="middle" style="width: 713px;"><div>You will gain experience in web-based technologies that enable the implementation of multi-layered and interactive information visualisations, supported through lab work that introduces specific features of these technologies.This module will require some challenging programming work, and assumes some basic knowledge of HTML, CSS and Javascript.&nbsp;</div></td><td align="left" valign="middle" style="width: 306px;"><div><ul><li>Presentation : 20%</li><li>Structured portfolio: 80%</li></ul></div></td><td align="left" valign="middle" style="width: 242px;"><div>需要一些设计和前端的知识</div></td></tr><tr><td style="width: 107px;"><div><span style="color: rgb(111, 192, 55);">S</span>COMP4074</div></td><td style="width: 135px;"><div>Programs, Proofs and Types</div></td><td style="width: 70px;" class="" align="center"><div>20</div></td><td style="width: 157px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/thorsten.altenkirch"><font color="#0046f5">Thorsten Altenkirch</font></a></div></td><td style="width: 713px;"><div>This module focuses on some of the fundamental mathematical concepts that underlie modern programming and programming languages emphasizing the role of types. We will use a dependently typed programming language / interactive proof system (e.g. Agda)&nbsp; to implement some concepts on a computer. Example topics include: basic lambda calculus; operational semantics; domain theory; types, propositions as types and formal verification.</div></td><td style="width: 306px;"><div><ul><li>2h Exam: 75%</li><li>courseworks: 25%</li></ul></div></td><td style="width: 242px;"><div>1. Agda，类Haskell</div><div><span style=""><font color="#0046f5">2.&nbsp;<a href="https://songkeys.github.io/posts/2020-course-sharing-ppt/">Programs, Proofs and Types</a></font></span></div></td></tr><tr><td style="width: 107px;"><div><span style="color: rgb(111, 192, 55);">S</span>COMP4101</div></td><td style="width: 135px;"><div>Malware Analysis</div></td><td style="width: 70px;" class="" align="center"><div>10</div></td><td style="width: 157px;"><div><a href="https://www.nottingham.ac.uk/computerscience/people/steven.bagley"><font color="#0046f5">Steven Bagley</font></a></div></td><td style="width: 713px;"><div>We will look at how to setup a safe environment in which to analyse Malware, as well as exploring both static and dynamic malware analysis. Although malware takes many forms, the focus of this course will primarily be on executable binaries, covering both object file formats, but also the use of tools such as debuggers, virtual machines, and disassemblers to explore them. Obfuscation and packing schemes will be discussed, along with various issues related to Windows internals.</div></td><td style="width: 306px;"><div><ul><li>1h Exam: 50%</li><li>Courseworks: 50%</li></ul></div></td><td style="width: 242px;" class=""><div>恶意软件分析</div></td></tr></tbody></table></div></div><div><br></div><div><br></div><div><span data-wiz-span="data-wiz-span" style="font-size: 1.5rem;">3. Course-Choosing Personal Advice</span></div><div>(1).&nbsp; 课程方向相近，相互联系或在大方向上互补</div><div><span style="">(2).&nbsp; 老师职称背景、近期论文方向、是否为某Lab Member，后期选导师的时候比较重要</span></div><div><span style=""><span style="">(3).&nbsp; 考试及最终评估形式</span><br></span></div><div><br></div></body></html>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>UoN</category>
      </categories>
      <tags>
        <tag>School of Computer Science</tag>
      </tags>
  </entry>
</search>
